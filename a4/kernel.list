
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0006ae 	b	9ac0 <main>

Disassembly of section .text:

00009ac0 <main>:
    9ac0:	e3a0d902 	mov	sp, #32768	; 0x8000
    9ac4:	eb000106 	bl	9ee4 <EnableJTAG>
    9ac8:	eb000128 	bl	9f70 <InitFrameBuffer>

00009acc <asdasd>:
    9acc:	eb000147 	bl	9ff0 <sampleSNES>
    9ad0:	ebfffffd 	bl	9acc <asdasd>
    9ad4:	e59f03e8 	ldr	r0, [pc, #1000]	; 9ec4 <waitLoop+0x10>
    9ad8:	e280000c 	add	r0, r0, #12
    9adc:	e59f13e4 	ldr	r1, [pc, #996]	; 9ec8 <waitLoop+0x14>

00009ae0 <looop>:
    9ae0:	e3a02000 	mov	r2, #0
    9ae4:	e5802000 	str	r2, [r0]
    9ae8:	e2800004 	add	r0, r0, #4
    9aec:	e0412000 	sub	r2, r1, r0
    9af0:	e3520000 	cmp	r2, #0
    9af4:	cafffff9 	bgt	9ae0 <looop>
    9af8:	eb000094 	bl	9d50 <tetrisCreateNewBlock>

00009afc <mainLoop>:
    9afc:	e3a00000 	mov	r0, #0
    9b00:	e3a01000 	mov	r1, #0
    9b04:	eb000044 	bl	9c1c <tetrisClearGridBlock>
    9b08:	e3a00000 	mov	r0, #0
    9b0c:	e3a01001 	mov	r1, #1
    9b10:	eb000041 	bl	9c1c <tetrisClearGridBlock>
    9b14:	e3a00000 	mov	r0, #0
    9b18:	e3a01002 	mov	r1, #2
    9b1c:	eb00003e 	bl	9c1c <tetrisClearGridBlock>
    9b20:	e3a00000 	mov	r0, #0
    9b24:	e3a01003 	mov	r1, #3
    9b28:	eb00003b 	bl	9c1c <tetrisClearGridBlock>
    9b2c:	e3a00001 	mov	r0, #1
    9b30:	e3a01000 	mov	r1, #0
    9b34:	eb000038 	bl	9c1c <tetrisClearGridBlock>
    9b38:	e3a00001 	mov	r0, #1
    9b3c:	e3a01001 	mov	r1, #1
    9b40:	eb000035 	bl	9c1c <tetrisClearGridBlock>
    9b44:	e3a00001 	mov	r0, #1
    9b48:	e3a01002 	mov	r1, #2
    9b4c:	eb000032 	bl	9c1c <tetrisClearGridBlock>
    9b50:	e3a00001 	mov	r0, #1
    9b54:	e3a01003 	mov	r1, #3
    9b58:	eb00002f 	bl	9c1c <tetrisClearGridBlock>
    9b5c:	e3a00002 	mov	r0, #2
    9b60:	e3a01000 	mov	r1, #0
    9b64:	eb00002c 	bl	9c1c <tetrisClearGridBlock>
    9b68:	e3a00002 	mov	r0, #2
    9b6c:	e3a01001 	mov	r1, #1
    9b70:	eb000029 	bl	9c1c <tetrisClearGridBlock>
    9b74:	e3a00002 	mov	r0, #2
    9b78:	e3a01002 	mov	r1, #2
    9b7c:	eb000026 	bl	9c1c <tetrisClearGridBlock>
    9b80:	e3a00002 	mov	r0, #2
    9b84:	e3a01003 	mov	r1, #3
    9b88:	eb000023 	bl	9c1c <tetrisClearGridBlock>
    9b8c:	e3a00003 	mov	r0, #3
    9b90:	e3a01000 	mov	r1, #0
    9b94:	eb000020 	bl	9c1c <tetrisClearGridBlock>
    9b98:	e3a00003 	mov	r0, #3
    9b9c:	e3a01001 	mov	r1, #1
    9ba0:	eb00001d 	bl	9c1c <tetrisClearGridBlock>
    9ba4:	e3a00003 	mov	r0, #3
    9ba8:	e3a01002 	mov	r1, #2
    9bac:	eb00001a 	bl	9c1c <tetrisClearGridBlock>
    9bb0:	e3a00003 	mov	r0, #3
    9bb4:	e3a01003 	mov	r1, #3
    9bb8:	eb000017 	bl	9c1c <tetrisClearGridBlock>
    9bbc:	eb00003d 	bl	9cb8 <tetrisUpdateGridWithBlock>
    9bc0:	e3a000ff 	mov	r0, #255	; 0xff
    9bc4:	eb0000b6 	bl	9ea4 <startTimer>
    9bc8:	eb00006b 	bl	9d7c <tetrisRotateBlockTest>
    9bcc:	e3a00000 	mov	r0, #0
    9bd0:	e3a01001 	mov	r1, #1
    9bd4:	eb000016 	bl	9c34 <tetrisDrawGrid>
    9bd8:	eaffffc7 	b	9afc <mainLoop>

00009bdc <mainEnd>:
    9bdc:	eafffffe 	b	9bdc <mainEnd>

00009be0 <tetrisSetGridBlockColor>:
    9be0:	e1a0000d 	mov	r0, sp
    9be4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9be8:	e92d03f0 	push	{r4, r5, r6, r7, r8, r9}
    9bec:	e8900070 	ldm	r0, {r4, r5, r6}
    9bf0:	e59f72cc 	ldr	r7, [pc, #716]	; 9ec4 <waitLoop+0x10>
    9bf4:	e5978008 	ldr	r8, [r7, #8]
    9bf8:	e287700c 	add	r7, r7, #12
    9bfc:	e0090598 	mul	r9, r8, r5
    9c00:	e0899004 	add	r9, r9, r4
    9c04:	e1a09109 	lsl	r9, r9, #2
    9c08:	e7876009 	str	r6, [r7, r9]
    9c0c:	e8bd03f0 	pop	{r4, r5, r6, r7, r8, r9}
    9c10:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9c14:	e28dd00c 	add	sp, sp, #12
    9c18:	e1a0f00e 	mov	pc, lr

00009c1c <tetrisClearGridBlock>:
    9c1c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9c20:	e3a02000 	mov	r2, #0
    9c24:	e92d0007 	push	{r0, r1, r2}
    9c28:	ebffffec 	bl	9be0 <tetrisSetGridBlockColor>
    9c2c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9c30:	e1a0f00e 	mov	pc, lr

00009c34 <tetrisDrawGrid>:
    9c34:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9c38:	e92d0ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    9c3c:	e59f0280 	ldr	r0, [pc, #640]	; 9ec4 <waitLoop+0x10>
    9c40:	e8b00070 	ldm	r0!, {r4, r5, r6}
    9c44:	e1a0a000 	mov	sl, r0
    9c48:	e3a07000 	mov	r7, #0
    9c4c:	e3a08000 	mov	r8, #0

00009c50 <for_curRow_lessThan_rows_loop>:
    9c50:	e52d8004 	push	{r8}		; (str r8, [sp, #-4]!)

00009c54 <for_curCol_lessThan_cols_loop>:
    9c54:	e92d03f0 	push	{r4, r5, r6, r7, r8, r9}
    9c58:	e00b0894 	mul	fp, r4, r8
    9c5c:	e08bb007 	add	fp, fp, r7
    9c60:	e1a0b10b 	lsl	fp, fp, #2
    9c64:	e79a900b 	ldr	r9, [sl, fp]
    9c68:	e0000697 	mul	r0, r7, r6
    9c6c:	e0010698 	mul	r1, r8, r6
    9c70:	e24dd014 	sub	sp, sp, #20
    9c74:	e58d0000 	str	r0, [sp]
    9c78:	e58d1004 	str	r1, [sp, #4]
    9c7c:	e58d6008 	str	r6, [sp, #8]
    9c80:	e58d600c 	str	r6, [sp, #12]
    9c84:	e58d9010 	str	r9, [sp, #16]
    9c88:	eb000073 	bl	9e5c <drawRect>
    9c8c:	e8bd03f0 	pop	{r4, r5, r6, r7, r8, r9}
    9c90:	e2888001 	add	r8, r8, #1
    9c94:	e1580005 	cmp	r8, r5
    9c98:	baffffed 	blt	9c54 <for_curCol_lessThan_cols_loop>
    9c9c:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)
    9ca0:	e2877001 	add	r7, r7, #1
    9ca4:	e1570004 	cmp	r7, r4
    9ca8:	baffffe8 	blt	9c50 <for_curRow_lessThan_rows_loop>
    9cac:	e8bd0ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    9cb0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9cb4:	e1a0f00e 	mov	pc, lr

00009cb8 <tetrisUpdateGridWithBlock>:
    9cb8:	e1a0000d 	mov	r0, sp
    9cbc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9cc0:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9cc4:	e89007f0 	ldm	r0, {r4, r5, r6, r7, r8, r9, sl}
    9cc8:	e1a04006 	mov	r4, r6
    9ccc:	e1a05007 	mov	r5, r7
    9cd0:	e5804000 	str	r4, [r0]
    9cd4:	e5805004 	str	r5, [r0, #4]
    9cd8:	e3a0b000 	mov	fp, #0
    9cdc:	e3a0c000 	mov	ip, #0

00009ce0 <for_i_lessThan_4_loop_>:
    9ce0:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

00009ce4 <for_j_lessThan_4_loop_>:
    9ce4:	e92d01c0 	push	{r6, r7, r8}
    9ce8:	e19920ba 	ldrh	r2, [r9, sl]
    9cec:	e086600b 	add	r6, r6, fp
    9cf0:	e087700c 	add	r7, r7, ip
    9cf4:	e3a01004 	mov	r1, #4
    9cf8:	e0010c91 	mul	r1, r1, ip
    9cfc:	e081100b 	add	r1, r1, fp
    9d00:	e1a02112 	lsl	r2, r2, r1
    9d04:	e3a01902 	mov	r1, #32768	; 0x8000
    9d08:	e0011002 	and	r1, r1, r2
    9d0c:	e3310000 	teq	r1, #0
    9d10:	01a00006 	moveq	r0, r6
    9d14:	01a01007 	moveq	r1, r7
    9d18:	0bffffbf 	bleq	9c1c <tetrisClearGridBlock>
    9d1c:	192d01c0 	pushne	{r6, r7, r8}
    9d20:	1bffffae 	blne	9be0 <tetrisSetGridBlockColor>
    9d24:	e8bd01c0 	pop	{r6, r7, r8}
    9d28:	e28cc001 	add	ip, ip, #1
    9d2c:	e35c0004 	cmp	ip, #4
    9d30:	baffffeb 	blt	9ce4 <for_j_lessThan_4_loop_>
    9d34:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    9d38:	e28bb001 	add	fp, fp, #1
    9d3c:	e35b0004 	cmp	fp, #4
    9d40:	baffffe6 	blt	9ce0 <for_i_lessThan_4_loop_>
    9d44:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9d48:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9d4c:	e1a0f00e 	mov	pc, lr

00009d50 <tetrisCreateNewBlock>:
    9d50:	e59f0174 	ldr	r0, [pc, #372]	; 9ecc <waitLoop+0x18>
    9d54:	e89007f0 	ldm	r0, {r4, r5, r6, r7, r8, r9, sl}

00009d58 <initializeTetrisBlock>:
    9d58:	e3a04000 	mov	r4, #0
    9d5c:	e3a05000 	mov	r5, #0
    9d60:	e3a06000 	mov	r6, #0
    9d64:	e3a07000 	mov	r7, #0
    9d68:	e59f8160 	ldr	r8, [pc, #352]	; 9ed0 <waitLoop+0x1c>
    9d6c:	e59f9160 	ldr	r9, [pc, #352]	; 9ed4 <waitLoop+0x20>
    9d70:	e3a0a000 	mov	sl, #0

00009d74 <initializeTetrisBlockEnd>:
    9d74:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9d78:	e1a0f00e 	mov	pc, lr

00009d7c <tetrisRotateBlockTest>:
    9d7c:	e89d07f0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl}
    9d80:	e28aa002 	add	sl, sl, #2
    9d84:	e35a0006 	cmp	sl, #6
    9d88:	c3a0a000 	movgt	sl, #0
    9d8c:	e58da018 	str	sl, [sp, #24]
    9d90:	e1a0f00e 	mov	pc, lr

00009d94 <tetrisTranslateBlockTest>:
    9d94:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9d98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9d9c:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9da0:	e3a00000 	mov	r0, #0
    9da4:	e1a01007 	mov	r1, r7
    9da8:	ebffff9b 	bl	9c1c <tetrisClearGridBlock>
    9dac:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9db0:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9db4:	e3a00001 	mov	r0, #1
    9db8:	e1a01007 	mov	r1, r7
    9dbc:	ebffff96 	bl	9c1c <tetrisClearGridBlock>
    9dc0:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9dc4:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9dc8:	e3a00002 	mov	r0, #2
    9dcc:	e1a01007 	mov	r1, r7
    9dd0:	ebffff91 	bl	9c1c <tetrisClearGridBlock>
    9dd4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9dd8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9ddc:	e3a00003 	mov	r0, #3
    9de0:	e1a01007 	mov	r1, r7
    9de4:	ebffff8c 	bl	9c1c <tetrisClearGridBlock>
    9de8:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    9dec:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9df0:	e0866000 	add	r6, r6, r0
    9df4:	e0877001 	add	r7, r7, r1
    9df8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    9dfc:	e1a0f00e 	mov	pc, lr

00009e00 <clearScreen>:
    9e00:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9e04:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    9e08:	e3a04000 	mov	r4, #0
    9e0c:	e3a05000 	mov	r5, #0
    9e10:	e59f00c0 	ldr	r0, [pc, #192]	; 9ed8 <waitLoop+0x24>
    9e14:	e5906014 	ldr	r6, [r0, #20]
    9e18:	e5907018 	ldr	r7, [r0, #24]
    9e1c:	e3a08000 	mov	r8, #0
    9e20:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    9e24:	eb00000c 	bl	9e5c <drawRect>
    9e28:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    9e2c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9e30:	e1a0f00e 	mov	pc, lr

00009e34 <drawPixel>:
    9e34:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9e38:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    9e3c:	e0804501 	add	r4, r0, r1, lsl #10
    9e40:	e1a04084 	lsl	r4, r4, #1
    9e44:	e59f0090 	ldr	r0, [pc, #144]	; 9edc <waitLoop+0x28>
    9e48:	e5900000 	ldr	r0, [r0]
    9e4c:	e18020b4 	strh	r2, [r0, r4]
    9e50:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    9e54:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9e58:	e1a0f00e 	mov	pc, lr

00009e5c <drawRect>:
    9e5c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    9e60:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9e64:	e0866004 	add	r6, r6, r4
    9e68:	e0877005 	add	r7, r7, r5

00009e6c <drawRectForLoopX>:
    9e6c:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

00009e70 <drawRectForLoopY>:
    9e70:	e1a00004 	mov	r0, r4
    9e74:	e1a01005 	mov	r1, r5
    9e78:	e1a02008 	mov	r2, r8
    9e7c:	ebffffec 	bl	9e34 <drawPixel>
    9e80:	e2855001 	add	r5, r5, #1
    9e84:	e1550007 	cmp	r5, r7
    9e88:	bafffff8 	blt	9e70 <drawRectForLoopY>
    9e8c:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    9e90:	e2844001 	add	r4, r4, #1
    9e94:	e1540006 	cmp	r4, r6
    9e98:	bafffff3 	blt	9e6c <drawRectForLoopX>
    9e9c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9ea0:	e1a0f00e 	mov	pc, lr

00009ea4 <startTimer>:
    9ea4:	e1a03000 	mov	r3, r0
    9ea8:	e59f0030 	ldr	r0, [pc, #48]	; 9ee0 <waitLoop+0x2c>
    9eac:	e5901000 	ldr	r1, [r0]
    9eb0:	e0811003 	add	r1, r1, r3

00009eb4 <waitLoop>:
    9eb4:	e5902000 	ldr	r2, [r0]
    9eb8:	e1510002 	cmp	r1, r2
    9ebc:	8afffffc 	bhi	9eb4 <waitLoop>
    9ec0:	e1a0f00e 	mov	pc, lr
    9ec4:	00009080 	.word	0x00009080
    9ec8:	000099ec 	.word	0x000099ec
    9ecc:	000099ec 	.word	0x000099ec
    9ed0:	001133ff 	.word	0x001133ff
    9ed4:	00009a20 	.word	0x00009a20
    9ed8:	00009a50 	.word	0x00009a50
    9edc:	00009ab0 	.word	0x00009ab0
    9ee0:	3f003004 	.word	0x3f003004

00009ee4 <EnableJTAG>:
    9ee4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9ee8:	e59f0064 	ldr	r0, [pc, #100]	; 9f54 <dowaitloop+0xc>
    9eec:	e0211001 	eor	r1, r1, r1
    9ef0:	e5801000 	str	r1, [r0]
    9ef4:	eb000012 	bl	9f44 <dowait>
    9ef8:	e59f0058 	ldr	r0, [pc, #88]	; 9f58 <dowaitloop+0x10>
    9efc:	e59f1058 	ldr	r1, [pc, #88]	; 9f5c <dowaitloop+0x14>
    9f00:	e5801000 	str	r1, [r0]
    9f04:	eb00000e 	bl	9f44 <dowait>
    9f08:	e0211001 	eor	r1, r1, r1
    9f0c:	e5801000 	str	r1, [r0]
    9f10:	e59f0048 	ldr	r0, [pc, #72]	; 9f60 <dowaitloop+0x18>
    9f14:	e5901000 	ldr	r1, [r0]
    9f18:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    9f1c:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9f20:	e5801000 	str	r1, [r0]
    9f24:	e59f0038 	ldr	r0, [pc, #56]	; 9f64 <dowaitloop+0x1c>
    9f28:	e5901000 	ldr	r1, [r0]
    9f2c:	e59f2034 	ldr	r2, [pc, #52]	; 9f68 <dowaitloop+0x20>
    9f30:	e1c11002 	bic	r1, r1, r2
    9f34:	e59f2030 	ldr	r2, [pc, #48]	; 9f6c <dowaitloop+0x24>
    9f38:	e1811002 	orr	r1, r1, r2
    9f3c:	e5801000 	str	r1, [r0]
    9f40:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009f44 <dowait>:
    9f44:	e3a02f4b 	mov	r2, #300	; 0x12c

00009f48 <dowaitloop>:
    9f48:	e2522001 	subs	r2, r2, #1
    9f4c:	1afffffd 	bne	9f48 <dowaitloop>
    9f50:	e12fff1e 	bx	lr
    9f54:	3f200094 	.word	0x3f200094
    9f58:	3f200098 	.word	0x3f200098
    9f5c:	0bc00010 	.word	0x0bc00010
    9f60:	3f200000 	.word	0x3f200000
    9f64:	3f200008 	.word	0x3f200008
    9f68:	00e3ffc0 	.word	0x00e3ffc0
    9f6c:	0061b6c0 	.word	0x0061b6c0

00009f70 <InitFrameBuffer>:
    9f70:	e59f2068 	ldr	r2, [pc, #104]	; 9fe0 <pointerWaitLoop$+0x1c>
    9f74:	e59f3068 	ldr	r3, [pc, #104]	; 9fe4 <pointerWaitLoop$+0x20>

00009f78 <mBoxFullLoop$>:
    9f78:	e5920018 	ldr	r0, [r2, #24]
    9f7c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    9f80:	1afffffc 	bne	9f78 <mBoxFullLoop$>
    9f84:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    9f88:	e3800008 	orr	r0, r0, #8
    9f8c:	e5820020 	str	r0, [r2, #32]

00009f90 <mBoxEmptyLoop$>:
    9f90:	e5920018 	ldr	r0, [r2, #24]
    9f94:	e3100101 	tst	r0, #1073741824	; 0x40000000
    9f98:	1afffffc 	bne	9f90 <mBoxEmptyLoop$>
    9f9c:	e5920000 	ldr	r0, [r2]
    9fa0:	e200100f 	and	r1, r0, #15
    9fa4:	e3310008 	teq	r1, #8
    9fa8:	1afffff8 	bne	9f90 <mBoxEmptyLoop$>
    9fac:	e59f0030 	ldr	r0, [pc, #48]	; 9fe4 <pointerWaitLoop$+0x20>
    9fb0:	e5901004 	ldr	r1, [r0, #4]
    9fb4:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    9fb8:	0a000001 	beq	9fc4 <pointerWaitLoop$>
    9fbc:	13a00000 	movne	r0, #0
    9fc0:	112fff1e 	bxne	lr

00009fc4 <pointerWaitLoop$>:
    9fc4:	e59f001c 	ldr	r0, [pc, #28]	; 9fe8 <pointerWaitLoop$+0x24>
    9fc8:	e5900000 	ldr	r0, [r0]
    9fcc:	e3300000 	teq	r0, #0
    9fd0:	0afffffb 	beq	9fc4 <pointerWaitLoop$>
    9fd4:	e59f3010 	ldr	r3, [pc, #16]	; 9fec <pointerWaitLoop$+0x28>
    9fd8:	e5830000 	str	r0, [r3]
    9fdc:	e12fff1e 	bx	lr
    9fe0:	3f00b880 	.word	0x3f00b880
    9fe4:	00009a50 	.word	0x00009a50
    9fe8:	00009a9c 	.word	0x00009a9c
    9fec:	00009ab0 	.word	0x00009ab0

00009ff0 <sampleSNES>:
    9ff0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}

00009ff4 <initSNES>:
    9ff4:	e3a00001 	mov	r0, #1
    9ff8:	eb000048 	bl	a120 <setCLOCKFunction>
    9ffc:	e3a00001 	mov	r0, #1
    a000:	eb00003d 	bl	a0fc <setLATCHFunction>
    a004:	e3a00000 	mov	r0, #0
    a008:	eb000034 	bl	a0e0 <setDATAFunction>

0000a00c <startSamplingSNESButtons>:
    a00c:	e3a0000b 	mov	r0, #11
    a010:	e3a01001 	mov	r1, #1
    a014:	eb000056 	bl	a174 <writeGPIO>
    a018:	e3a00009 	mov	r0, #9
    a01c:	e3a01001 	mov	r1, #1
    a020:	eb000053 	bl	a174 <writeGPIO>
    a024:	e3a0000c 	mov	r0, #12
    a028:	eb000019 	bl	a094 <startTimer>
    a02c:	e3a00009 	mov	r0, #9
    a030:	e3a01000 	mov	r1, #0
    a034:	eb00004e 	bl	a174 <writeGPIO>
    a038:	e3a08000 	mov	r8, #0
    a03c:	e3a07000 	mov	r7, #0

0000a040 <pulseLoop>:
    a040:	e3a00006 	mov	r0, #6
    a044:	eb000012 	bl	a094 <startTimer>
    a048:	e3a0000b 	mov	r0, #11
    a04c:	e3a01000 	mov	r1, #0
    a050:	eb000047 	bl	a174 <writeGPIO>
    a054:	e3a00006 	mov	r0, #6
    a058:	eb00000d 	bl	a094 <startTimer>
    a05c:	e3a0000a 	mov	r0, #10
    a060:	e3a01000 	mov	r1, #0
    a064:	eb000036 	bl	a144 <readGPIO>
    a068:	e1a00710 	lsl	r0, r0, r7
    a06c:	e1888000 	orr	r8, r8, r0
    a070:	e3a0000b 	mov	r0, #11
    a074:	e3a01001 	mov	r1, #1
    a078:	eb00003d 	bl	a174 <writeGPIO>
    a07c:	e2877001 	add	r7, r7, #1
    a080:	e3570010 	cmp	r7, #16
    a084:	baffffed 	blt	a040 <pulseLoop>

0000a088 <pulseLoopEnd>:
    a088:	e1a00008 	mov	r0, r8

0000a08c <mainEnd>:
    a08c:	eaffffff 	b	a090 <killProgram>

0000a090 <killProgram>:
    a090:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000a094 <startTimer>:
    a094:	e1a03000 	mov	r3, r0
    a098:	e59f0128 	ldr	r0, [pc, #296]	; a1c8 <newButtonPress+0x14>
    a09c:	e5901000 	ldr	r1, [r0]
    a0a0:	e0811003 	add	r1, r1, r3

0000a0a4 <waitLoop>:
    a0a4:	e5902000 	ldr	r2, [r0]
    a0a8:	e1510002 	cmp	r1, r2
    a0ac:	8afffffc 	bhi	a0a4 <waitLoop>
    a0b0:	e1a0f00e 	mov	pc, lr

0000a0b4 <setGPIOFunction>:
    a0b4:	e59f3110 	ldr	r3, [pc, #272]	; a1cc <newButtonPress+0x18>
    a0b8:	e3a04004 	mov	r4, #4
    a0bc:	e0000094 	mul	r0, r4, r0
    a0c0:	e7934000 	ldr	r4, [r3, r0]
    a0c4:	e3a05007 	mov	r5, #7
    a0c8:	e1a05215 	lsl	r5, r5, r2
    a0cc:	e1c33005 	bic	r3, r3, r5
    a0d0:	e1a01211 	lsl	r1, r1, r2
    a0d4:	e1844001 	orr	r4, r4, r1
    a0d8:	e7834000 	str	r4, [r3, r0]
    a0dc:	e1a0f00e 	mov	pc, lr

0000a0e0 <setDATAFunction>:
    a0e0:	e59f10e4 	ldr	r1, [pc, #228]	; a1cc <newButtonPress+0x18>
    a0e4:	e5912004 	ldr	r2, [r1, #4]
    a0e8:	e3a03007 	mov	r3, #7
    a0ec:	e1c22003 	bic	r2, r2, r3
    a0f0:	e1822000 	orr	r2, r2, r0
    a0f4:	e5812004 	str	r2, [r1, #4]
    a0f8:	e1a0f00e 	mov	pc, lr

0000a0fc <setLATCHFunction>:
    a0fc:	e59f10c8 	ldr	r1, [pc, #200]	; a1cc <newButtonPress+0x18>
    a100:	e5912000 	ldr	r2, [r1]
    a104:	e3a03007 	mov	r3, #7
    a108:	e1a03d83 	lsl	r3, r3, #27
    a10c:	e1c22003 	bic	r2, r2, r3
    a110:	e1a00d80 	lsl	r0, r0, #27
    a114:	e1822000 	orr	r2, r2, r0
    a118:	e5812000 	str	r2, [r1]
    a11c:	e1a0f00e 	mov	pc, lr

0000a120 <setCLOCKFunction>:
    a120:	e59f10a4 	ldr	r1, [pc, #164]	; a1cc <newButtonPress+0x18>
    a124:	e5912004 	ldr	r2, [r1, #4]
    a128:	e3a03007 	mov	r3, #7
    a12c:	e1a03183 	lsl	r3, r3, #3
    a130:	e1c22003 	bic	r2, r2, r3
    a134:	e1a00180 	lsl	r0, r0, #3
    a138:	e1822000 	orr	r2, r2, r0
    a13c:	e5812004 	str	r2, [r1, #4]
    a140:	e1a0f00e 	mov	pc, lr

0000a144 <readGPIO>:
    a144:	e59f1080 	ldr	r1, [pc, #128]	; a1cc <newButtonPress+0x18>
    a148:	e3500020 	cmp	r0, #32
    a14c:	b5912034 	ldrlt	r2, [r1, #52]	; 0x34
    a150:	a5912038 	ldrge	r2, [r1, #56]	; 0x38
    a154:	a2400020 	subge	r0, r0, #32
    a158:	e3a03001 	mov	r3, #1
    a15c:	e1a03013 	lsl	r3, r3, r0
    a160:	e0022003 	and	r2, r2, r3
    a164:	e3320000 	teq	r2, #0
    a168:	03a00000 	moveq	r0, #0
    a16c:	13a00001 	movne	r0, #1
    a170:	e1a0f00e 	mov	pc, lr

0000a174 <writeGPIO>:
    a174:	e3310000 	teq	r1, #0
    a178:	e59f104c 	ldr	r1, [pc, #76]	; a1cc <newButtonPress+0x18>
    a17c:	1281201c 	addne	r2, r1, #28
    a180:	02812028 	addeq	r2, r1, #40	; 0x28
    a184:	e3500020 	cmp	r0, #32
    a188:	a2400020 	subge	r0, r0, #32
    a18c:	e3a01001 	mov	r1, #1
    a190:	e1a01011 	lsl	r1, r1, r0
    a194:	b5821000 	strlt	r1, [r2]
    a198:	a5821004 	strge	r1, [r2, #4]
    a19c:	e1a0f00e 	mov	pc, lr

0000a1a0 <areAnySNESButtonsPressed>:
    a1a0:	e59f1028 	ldr	r1, [pc, #40]	; a1d0 <newButtonPress+0x1c>
    a1a4:	e0411000 	sub	r1, r1, r0
    a1a8:	e1500009 	cmp	r0, r9
    a1ac:	1a000000 	bne	a1b4 <newButtonPress>
    a1b0:	e3a01000 	mov	r1, #0

0000a1b4 <newButtonPress>:
    a1b4:	e3310000 	teq	r1, #0
    a1b8:	03a01000 	moveq	r1, #0
    a1bc:	13a01001 	movne	r1, #1
    a1c0:	e1a09000 	mov	r9, r0
    a1c4:	e1a0f00e 	mov	pc, lr
    a1c8:	3f003004 	.word	0x3f003004
    a1cc:	3f200000 	.word	0x3f200000
    a1d0:	0000ffff 	.word	0x0000ffff
