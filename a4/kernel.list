
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000a26 	b	a8a0 <main>

Disassembly of section .text:

0000a560 <randomNumber>:
    a560:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    a564:	e59f1040 	ldr	r1, [pc, #64]	; a5ac <top+0x34>
    a568:	e5914000 	ldr	r4, [r1]
    a56c:	e5915000 	ldr	r5, [r1]
    a570:	e5916000 	ldr	r6, [r1]
    a574:	e5912000 	ldr	r2, [r1]

0000a578 <top>:
    a578:	e1a07004 	mov	r7, r4
    a57c:	e0277587 	eor	r7, r7, r7, lsl #11
    a580:	e0277427 	eor	r7, r7, r7, lsr #8
    a584:	e1a04005 	mov	r4, r5
    a588:	e1a05006 	mov	r5, r6
    a58c:	e1a06002 	mov	r6, r2
    a590:	e02229a2 	eor	r2, r2, r2, lsr #19
    a594:	e0222007 	eor	r2, r2, r7
    a598:	e3e01007 	mvn	r1, #7
    a59c:	e1c20001 	bic	r0, r2, r1
    a5a0:	e3500007 	cmp	r0, #7
    a5a4:	0afffff3 	beq	a578 <top>
    a5a8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    a5ac:	3f003004 	.word	0x3f003004

0000a5b0 <EnableJTAG>:
    a5b0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a5b4:	e59f0064 	ldr	r0, [pc, #100]	; a620 <dowaitloop+0xc>
    a5b8:	e0211001 	eor	r1, r1, r1
    a5bc:	e5801000 	str	r1, [r0]
    a5c0:	eb000012 	bl	a610 <dowait>
    a5c4:	e59f0058 	ldr	r0, [pc, #88]	; a624 <dowaitloop+0x10>
    a5c8:	e59f1058 	ldr	r1, [pc, #88]	; a628 <dowaitloop+0x14>
    a5cc:	e5801000 	str	r1, [r0]
    a5d0:	eb00000e 	bl	a610 <dowait>
    a5d4:	e0211001 	eor	r1, r1, r1
    a5d8:	e5801000 	str	r1, [r0]
    a5dc:	e59f0048 	ldr	r0, [pc, #72]	; a62c <dowaitloop+0x18>
    a5e0:	e5901000 	ldr	r1, [r0]
    a5e4:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    a5e8:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    a5ec:	e5801000 	str	r1, [r0]
    a5f0:	e59f0038 	ldr	r0, [pc, #56]	; a630 <dowaitloop+0x1c>
    a5f4:	e5901000 	ldr	r1, [r0]
    a5f8:	e59f2034 	ldr	r2, [pc, #52]	; a634 <dowaitloop+0x20>
    a5fc:	e1c11002 	bic	r1, r1, r2
    a600:	e59f2030 	ldr	r2, [pc, #48]	; a638 <dowaitloop+0x24>
    a604:	e1811002 	orr	r1, r1, r2
    a608:	e5801000 	str	r1, [r0]
    a60c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a610 <dowait>:
    a610:	e3a02f4b 	mov	r2, #300	; 0x12c

0000a614 <dowaitloop>:
    a614:	e2522001 	subs	r2, r2, #1
    a618:	1afffffd 	bne	a614 <dowaitloop>
    a61c:	e12fff1e 	bx	lr
    a620:	3f200094 	.word	0x3f200094
    a624:	3f200098 	.word	0x3f200098
    a628:	0bc00010 	.word	0x0bc00010
    a62c:	3f200000 	.word	0x3f200000
    a630:	3f200008 	.word	0x3f200008
    a634:	00e3ffc0 	.word	0x00e3ffc0
    a638:	0061b6c0 	.word	0x0061b6c0

0000a63c <InitFrameBuffer>:
    a63c:	e59f2068 	ldr	r2, [pc, #104]	; a6ac <pointerWaitLoop$+0x1c>
    a640:	e59f3068 	ldr	r3, [pc, #104]	; a6b0 <pointerWaitLoop$+0x20>

0000a644 <mBoxFullLoop$>:
    a644:	e5920018 	ldr	r0, [r2, #24]
    a648:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    a64c:	1afffffc 	bne	a644 <mBoxFullLoop$>
    a650:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    a654:	e3800008 	orr	r0, r0, #8
    a658:	e5820020 	str	r0, [r2, #32]

0000a65c <mBoxEmptyLoop$>:
    a65c:	e5920018 	ldr	r0, [r2, #24]
    a660:	e3100101 	tst	r0, #1073741824	; 0x40000000
    a664:	1afffffc 	bne	a65c <mBoxEmptyLoop$>
    a668:	e5920000 	ldr	r0, [r2]
    a66c:	e200100f 	and	r1, r0, #15
    a670:	e3310008 	teq	r1, #8
    a674:	1afffff8 	bne	a65c <mBoxEmptyLoop$>
    a678:	e59f0030 	ldr	r0, [pc, #48]	; a6b0 <pointerWaitLoop$+0x20>
    a67c:	e5901004 	ldr	r1, [r0, #4]
    a680:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    a684:	0a000001 	beq	a690 <pointerWaitLoop$>
    a688:	13a00000 	movne	r0, #0
    a68c:	112fff1e 	bxne	lr

0000a690 <pointerWaitLoop$>:
    a690:	e59f001c 	ldr	r0, [pc, #28]	; a6b4 <pointerWaitLoop$+0x24>
    a694:	e5900000 	ldr	r0, [r0]
    a698:	e3300000 	teq	r0, #0
    a69c:	0afffffb 	beq	a690 <pointerWaitLoop$>
    a6a0:	e59f3010 	ldr	r3, [pc, #16]	; a6b8 <pointerWaitLoop$+0x28>
    a6a4:	e5830000 	str	r0, [r3]
    a6a8:	e12fff1e 	bx	lr
    a6ac:	3f00b880 	.word	0x3f00b880
    a6b0:	00009080 	.word	0x00009080
    a6b4:	000090cc 	.word	0x000090cc
    a6b8:	000090e0 	.word	0x000090e0

0000a6bc <sampleSNES>:
    a6bc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}

0000a6c0 <initSNES>:
    a6c0:	e3a00001 	mov	r0, #1
    a6c4:	eb000048 	bl	a7ec <setCLOCKFunction>
    a6c8:	e3a00001 	mov	r0, #1
    a6cc:	eb00003d 	bl	a7c8 <setLATCHFunction>
    a6d0:	e3a00000 	mov	r0, #0
    a6d4:	eb000034 	bl	a7ac <setDATAFunction>

0000a6d8 <startSamplingSNESButtons>:
    a6d8:	e3a0000b 	mov	r0, #11
    a6dc:	e3a01001 	mov	r1, #1
    a6e0:	eb000056 	bl	a840 <writeGPIO>
    a6e4:	e3a00009 	mov	r0, #9
    a6e8:	e3a01001 	mov	r1, #1
    a6ec:	eb000053 	bl	a840 <writeGPIO>
    a6f0:	e3a0000c 	mov	r0, #12
    a6f4:	eb000019 	bl	a760 <startTimer>
    a6f8:	e3a00009 	mov	r0, #9
    a6fc:	e3a01000 	mov	r1, #0
    a700:	eb00004e 	bl	a840 <writeGPIO>
    a704:	e3a08000 	mov	r8, #0
    a708:	e3a07000 	mov	r7, #0

0000a70c <pulseLoop>:
    a70c:	e3a00006 	mov	r0, #6
    a710:	eb000012 	bl	a760 <startTimer>
    a714:	e3a0000b 	mov	r0, #11
    a718:	e3a01000 	mov	r1, #0
    a71c:	eb000047 	bl	a840 <writeGPIO>
    a720:	e3a00006 	mov	r0, #6
    a724:	eb00000d 	bl	a760 <startTimer>
    a728:	e3a0000a 	mov	r0, #10
    a72c:	e3a01000 	mov	r1, #0
    a730:	eb000036 	bl	a810 <readGPIO>
    a734:	e1a00710 	lsl	r0, r0, r7
    a738:	e1888000 	orr	r8, r8, r0
    a73c:	e3a0000b 	mov	r0, #11
    a740:	e3a01001 	mov	r1, #1
    a744:	eb00003d 	bl	a840 <writeGPIO>
    a748:	e2877001 	add	r7, r7, #1
    a74c:	e3570010 	cmp	r7, #16
    a750:	baffffed 	blt	a70c <pulseLoop>

0000a754 <pulseLoopEnd>:
    a754:	e1a00008 	mov	r0, r8

0000a758 <mainEnd>:
    a758:	eaffffff 	b	a75c <killProgram>

0000a75c <killProgram>:
    a75c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000a760 <startTimer>:
    a760:	e1a03000 	mov	r3, r0
    a764:	e59f0128 	ldr	r0, [pc, #296]	; a894 <newButtonPress+0x14>
    a768:	e5901000 	ldr	r1, [r0]
    a76c:	e0811003 	add	r1, r1, r3

0000a770 <waitLoop>:
    a770:	e5902000 	ldr	r2, [r0]
    a774:	e1510002 	cmp	r1, r2
    a778:	8afffffc 	bhi	a770 <waitLoop>
    a77c:	e1a0f00e 	mov	pc, lr

0000a780 <setGPIOFunction>:
    a780:	e59f3110 	ldr	r3, [pc, #272]	; a898 <newButtonPress+0x18>
    a784:	e3a04004 	mov	r4, #4
    a788:	e0000094 	mul	r0, r4, r0
    a78c:	e7934000 	ldr	r4, [r3, r0]
    a790:	e3a05007 	mov	r5, #7
    a794:	e1a05215 	lsl	r5, r5, r2
    a798:	e1c33005 	bic	r3, r3, r5
    a79c:	e1a01211 	lsl	r1, r1, r2
    a7a0:	e1844001 	orr	r4, r4, r1
    a7a4:	e7834000 	str	r4, [r3, r0]
    a7a8:	e1a0f00e 	mov	pc, lr

0000a7ac <setDATAFunction>:
    a7ac:	e59f10e4 	ldr	r1, [pc, #228]	; a898 <newButtonPress+0x18>
    a7b0:	e5912004 	ldr	r2, [r1, #4]
    a7b4:	e3a03007 	mov	r3, #7
    a7b8:	e1c22003 	bic	r2, r2, r3
    a7bc:	e1822000 	orr	r2, r2, r0
    a7c0:	e5812004 	str	r2, [r1, #4]
    a7c4:	e1a0f00e 	mov	pc, lr

0000a7c8 <setLATCHFunction>:
    a7c8:	e59f10c8 	ldr	r1, [pc, #200]	; a898 <newButtonPress+0x18>
    a7cc:	e5912000 	ldr	r2, [r1]
    a7d0:	e3a03007 	mov	r3, #7
    a7d4:	e1a03d83 	lsl	r3, r3, #27
    a7d8:	e1c22003 	bic	r2, r2, r3
    a7dc:	e1a00d80 	lsl	r0, r0, #27
    a7e0:	e1822000 	orr	r2, r2, r0
    a7e4:	e5812000 	str	r2, [r1]
    a7e8:	e1a0f00e 	mov	pc, lr

0000a7ec <setCLOCKFunction>:
    a7ec:	e59f10a4 	ldr	r1, [pc, #164]	; a898 <newButtonPress+0x18>
    a7f0:	e5912004 	ldr	r2, [r1, #4]
    a7f4:	e3a03007 	mov	r3, #7
    a7f8:	e1a03183 	lsl	r3, r3, #3
    a7fc:	e1c22003 	bic	r2, r2, r3
    a800:	e1a00180 	lsl	r0, r0, #3
    a804:	e1822000 	orr	r2, r2, r0
    a808:	e5812004 	str	r2, [r1, #4]
    a80c:	e1a0f00e 	mov	pc, lr

0000a810 <readGPIO>:
    a810:	e59f1080 	ldr	r1, [pc, #128]	; a898 <newButtonPress+0x18>
    a814:	e3500020 	cmp	r0, #32
    a818:	b5912034 	ldrlt	r2, [r1, #52]	; 0x34
    a81c:	a5912038 	ldrge	r2, [r1, #56]	; 0x38
    a820:	a2400020 	subge	r0, r0, #32
    a824:	e3a03001 	mov	r3, #1
    a828:	e1a03013 	lsl	r3, r3, r0
    a82c:	e0022003 	and	r2, r2, r3
    a830:	e3320000 	teq	r2, #0
    a834:	03a00000 	moveq	r0, #0
    a838:	13a00001 	movne	r0, #1
    a83c:	e1a0f00e 	mov	pc, lr

0000a840 <writeGPIO>:
    a840:	e3310000 	teq	r1, #0
    a844:	e59f104c 	ldr	r1, [pc, #76]	; a898 <newButtonPress+0x18>
    a848:	1281201c 	addne	r2, r1, #28
    a84c:	02812028 	addeq	r2, r1, #40	; 0x28
    a850:	e3500020 	cmp	r0, #32
    a854:	a2400020 	subge	r0, r0, #32
    a858:	e3a01001 	mov	r1, #1
    a85c:	e1a01011 	lsl	r1, r1, r0
    a860:	b5821000 	strlt	r1, [r2]
    a864:	a5821004 	strge	r1, [r2, #4]
    a868:	e1a0f00e 	mov	pc, lr

0000a86c <areAnySNESButtonsPressed>:
    a86c:	e59f1028 	ldr	r1, [pc, #40]	; a89c <newButtonPress+0x1c>
    a870:	e0411000 	sub	r1, r1, r0
    a874:	e1500009 	cmp	r0, r9
    a878:	1a000000 	bne	a880 <newButtonPress>
    a87c:	e3a01000 	mov	r1, #0

0000a880 <newButtonPress>:
    a880:	e3310000 	teq	r1, #0
    a884:	03a01000 	moveq	r1, #0
    a888:	13a01001 	movne	r1, #1
    a88c:	e1a09000 	mov	r9, r0
    a890:	e1a0f00e 	mov	pc, lr
    a894:	3f003004 	.word	0x3f003004
    a898:	3f200000 	.word	0x3f200000
    a89c:	0000ffff 	.word	0x0000ffff

0000a8a0 <main>:
    a8a0:	e3a0d902 	mov	sp, #32768	; 0x8000
    a8a4:	ebffff41 	bl	a5b0 <EnableJTAG>
    a8a8:	ebffff63 	bl	a63c <InitFrameBuffer>

0000a8ac <MainMenu>:
    a8ac:	eb000164 	bl	ae44 <ClearScreenBlack>
    a8b0:	eb0003fa 	bl	b8a0 <drawMainMenu>
    a8b4:	e3a09000 	mov	r9, #0

0000a8b8 <MainMenuPrompt>:
    a8b8:	e59f0e68 	ldr	r0, [pc, #3688]	; b728 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x70>
    a8bc:	eb000793 	bl	c710 <startTimer>
    a8c0:	ebffff7d 	bl	a6bc <sampleSNES>
    a8c4:	e1a0a000 	mov	sl, r0
    a8c8:	e3e01c01 	mvn	r1, #256	; 0x100
    a8cc:	e1c00001 	bic	r0, r0, r1
    a8d0:	e3500000 	cmp	r0, #0
    a8d4:	0a00000a 	beq	a904 <MainMenuAPressed>
    a8d8:	e1a0000a 	mov	r0, sl
    a8dc:	e3e01010 	mvn	r1, #16
    a8e0:	e1c00001 	bic	r0, r0, r1
    a8e4:	e3500000 	cmp	r0, #0
    a8e8:	0a000009 	beq	a914 <MainMenuUpPressed>
    a8ec:	e1a0000a 	mov	r0, sl
    a8f0:	e3e01020 	mvn	r1, #32
    a8f4:	e1c00001 	bic	r0, r0, r1
    a8f8:	e3500000 	cmp	r0, #0
    a8fc:	0a00000b 	beq	a930 <MainMenuDownPressed>
    a900:	eaffffec 	b	a8b8 <MainMenuPrompt>

0000a904 <MainMenuAPressed>:
    a904:	e3590000 	cmp	r9, #0
    a908:	0a00000f 	beq	a94c <StartGame>
    a90c:	eb00014c 	bl	ae44 <ClearScreenBlack>
    a910:	ea00005e 	b	aa90 <mainEnd>

0000a914 <MainMenuUpPressed>:
    a914:	e3590000 	cmp	r9, #0
    a918:	0affffe6 	beq	a8b8 <MainMenuPrompt>
    a91c:	e3a09000 	mov	r9, #0
    a920:	eb000441 	bl	ba2c <setMainMenuIndicatorStart>
    a924:	e3a00801 	mov	r0, #65536	; 0x10000
    a928:	eb000778 	bl	c710 <startTimer>
    a92c:	eaffffe1 	b	a8b8 <MainMenuPrompt>

0000a930 <MainMenuDownPressed>:
    a930:	e3590001 	cmp	r9, #1
    a934:	0affffdf 	beq	a8b8 <MainMenuPrompt>
    a938:	e3a09001 	mov	r9, #1
    a93c:	eb00044a 	bl	ba6c <setMainMenuIndicatorQuit>
    a940:	e3a00801 	mov	r0, #65536	; 0x10000
    a944:	eb000771 	bl	c710 <startTimer>
    a948:	eaffffda 	b	a8b8 <MainMenuPrompt>

0000a94c <StartGame>:
    a94c:	e3a01000 	mov	r1, #0
    a950:	e59f0dd4 	ldr	r0, [pc, #3540]	; b72c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x74>
    a954:	e5801000 	str	r1, [r0]
    a958:	ebffff57 	bl	a6bc <sampleSNES>
    a95c:	eb000145 	bl	ae78 <tetrisInitGrid>
    a960:	eb000137 	bl	ae44 <ClearScreenBlack>
    a964:	eb0000c4 	bl	ac7c <DrawBoard>
    a968:	eb0001e3 	bl	b0fc <tetrisCreateNewBlock>

0000a96c <newBlock>:
    a96c:	e59f0db8 	ldr	r0, [pc, #3512]	; b72c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x74>
    a970:	e5901000 	ldr	r1, [r0]
    a974:	e2811001 	add	r1, r1, #1
    a978:	e5801000 	str	r1, [r0]
    a97c:	eb000107 	bl	ada0 <UpdateScore>

0000a980 <dropLoop>:
    a980:	e59f0da8 	ldr	r0, [pc, #3496]	; b730 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x78>
    a984:	e590a000 	ldr	sl, [r0]
    a988:	e59f0da4 	ldr	r0, [pc, #3492]	; b734 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x7c>
    a98c:	e08aa000 	add	sl, sl, r0

0000a990 <rotateLoop>:
    a990:	ebffff49 	bl	a6bc <sampleSNES>
    a994:	e1a05000 	mov	r5, r0
    a998:	e3e01008 	mvn	r1, #8
    a99c:	e1c00001 	bic	r0, r0, r1
    a9a0:	e3500000 	cmp	r0, #0
    a9a4:	0a000014 	beq	a9fc <mainLoopStartPressed>
    a9a8:	e1a00005 	mov	r0, r5
    a9ac:	e3e01b01 	mvn	r1, #1024	; 0x400
    a9b0:	e1c00001 	bic	r0, r0, r1
    a9b4:	e3500000 	cmp	r0, #0
    a9b8:	0a000011 	beq	aa04 <mainLoopLTPressed>
    a9bc:	e1a00005 	mov	r0, r5
    a9c0:	e3e01b02 	mvn	r1, #2048	; 0x800
    a9c4:	e1c00001 	bic	r0, r0, r1
    a9c8:	e3500000 	cmp	r0, #0
    a9cc:	0a00000f 	beq	aa10 <mainLoopRTPressed>
    a9d0:	e1a00005 	mov	r0, r5
    a9d4:	e3e01040 	mvn	r1, #64	; 0x40
    a9d8:	e1c00001 	bic	r0, r0, r1
    a9dc:	e3500000 	cmp	r0, #0
    a9e0:	0a00000d 	beq	aa1c <mainLoopLeftPressed>
    a9e4:	e1a00005 	mov	r0, r5
    a9e8:	e3e01080 	mvn	r1, #128	; 0x80
    a9ec:	e1c00001 	bic	r0, r0, r1
    a9f0:	e3500000 	cmp	r0, #0
    a9f4:	0a00000c 	beq	aa2c <mainLoopRightPressed>
    a9f8:	ea00000f 	b	aa3c <userTranslationsDone>

0000a9fc <mainLoopStartPressed>:
    a9fc:	eb000068 	bl	aba4 <PauseMenuStart>
    aa00:	ea00000d 	b	aa3c <userTranslationsDone>

0000aa04 <mainLoopLTPressed>:
    aa04:	e3a00000 	mov	r0, #0
    aa08:	eb0002bb 	bl	b4fc <tetrisRotateBlock>
    aa0c:	ea00000a 	b	aa3c <userTranslationsDone>

0000aa10 <mainLoopRTPressed>:
    aa10:	e3a00001 	mov	r0, #1
    aa14:	eb0002b8 	bl	b4fc <tetrisRotateBlock>
    aa18:	ea000007 	b	aa3c <userTranslationsDone>

0000aa1c <mainLoopLeftPressed>:
    aa1c:	e3e00000 	mvn	r0, #0
    aa20:	e3a01000 	mov	r1, #0
    aa24:	eb0002d3 	bl	b578 <tetrisTranslateBlock>
    aa28:	ea000003 	b	aa3c <userTranslationsDone>

0000aa2c <mainLoopRightPressed>:
    aa2c:	e3a00001 	mov	r0, #1
    aa30:	e3a01000 	mov	r1, #0
    aa34:	eb0002cf 	bl	b578 <tetrisTranslateBlock>
    aa38:	eaffffff 	b	aa3c <userTranslationsDone>

0000aa3c <userTranslationsDone>:
    aa3c:	eb000179 	bl	b028 <tetrisUpdateGrid>
    aa40:	eb000145 	bl	af5c <tetrisDrawGrid>
    aa44:	eb00023f 	bl	b348 <tetrisDrawBlock>
    aa48:	e59f0ce0 	ldr	r0, [pc, #3296]	; b730 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x78>
    aa4c:	e5901000 	ldr	r1, [r0]
    aa50:	e151000a 	cmp	r1, sl
    aa54:	baffffcd 	blt	a990 <rotateLoop>
    aa58:	e3a00000 	mov	r0, #0
    aa5c:	e3a01001 	mov	r1, #1
    aa60:	eb0002c4 	bl	b578 <tetrisTranslateBlock>
    aa64:	eb000035 	bl	ab40 <tetrisGridClearCompleteRows>
    aa68:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    aa6c:	e3300000 	teq	r0, #0
    aa70:	0a000005 	beq	aa8c <noClearedRows>
    aa74:	1affffff 	bne	aa78 <clearedRows>

0000aa78 <clearedRows>:
    aa78:	e59f1cac 	ldr	r1, [pc, #3244]	; b72c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x74>
    aa7c:	e591a000 	ldr	sl, [r1]
    aa80:	e08aa000 	add	sl, sl, r0
    aa84:	e581a000 	str	sl, [r1]
    aa88:	eb0000c4 	bl	ada0 <UpdateScore>

0000aa8c <noClearedRows>:
    aa8c:	eaffffbb 	b	a980 <dropLoop>

0000aa90 <mainEnd>:
    aa90:	eafffffe 	b	aa90 <mainEnd>

0000aa94 <tetrisGridIsRowComplete>:
    aa94:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
    aa98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    aa9c:	e92d00f0 	push	{r4, r5, r6, r7}
    aaa0:	e59f4c90 	ldr	r4, [pc, #3216]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    aaa4:	e89400e0 	ldm	r4, {r5, r6, r7}
    aaa8:	e59f8c8c 	ldr	r8, [pc, #3212]	; b73c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x84>
    aaac:	e3a00000 	mov	r0, #0
    aab0:	e3a03001 	mov	r3, #1
    aab4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)

0000aab8 <tetrisGridIsRowComplete_for_x_lt_cols_loop>:
    aab8:	e92d0003 	push	{r0, r1}
    aabc:	e92d0003 	push	{r0, r1}
    aac0:	eb000106 	bl	aee0 <tetrisGetGridBlockColor>
    aac4:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    aac8:	e3330000 	teq	r3, #0
    aacc:	e8bd0003 	pop	{r0, r1}
    aad0:	049d3004 	popeq	{r3}		; (ldreq r3, [sp], #4)
    aad4:	03a03000 	moveq	r3, #0
    aad8:	052d3004 	pusheq	{r3}		; (streq r3, [sp, #-4]!)
    aadc:	0a000002 	beq	aaec <tetrisGridIsRowCompleteEnd>
    aae0:	e2800001 	add	r0, r0, #1
    aae4:	e1500005 	cmp	r0, r5
    aae8:	bafffff2 	blt	aab8 <tetrisGridIsRowComplete_for_x_lt_cols_loop>

0000aaec <tetrisGridIsRowCompleteEnd>:
    aaec:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    aaf0:	e8bd00f0 	pop	{r4, r5, r6, r7}
    aaf4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    aaf8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aafc:	e1a0f00e 	mov	pc, lr

0000ab00 <tetrisGridClearRow>:
    ab00:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
    ab04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    ab08:	e92d0070 	push	{r4, r5, r6}
    ab0c:	e59f4c24 	ldr	r4, [pc, #3108]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    ab10:	e8940060 	ldm	r4, {r5, r6}
    ab14:	e3a00000 	mov	r0, #0

0000ab18 <tetrisGridClearRow_for_x_lt_cols_loop>:
    ab18:	e92d0003 	push	{r0, r1}
    ab1c:	e92d0003 	push	{r0, r1}
    ab20:	eb000107 	bl	af44 <tetrisClearGridBlock>
    ab24:	e8bd0003 	pop	{r0, r1}
    ab28:	0a000002 	beq	ab38 <tetrisGridClearRowEnd>
    ab2c:	e2800001 	add	r0, r0, #1
    ab30:	e1500005 	cmp	r0, r5
    ab34:	bafffff7 	blt	ab18 <tetrisGridClearRow_for_x_lt_cols_loop>

0000ab38 <tetrisGridClearRowEnd>:
    ab38:	e8bd0070 	pop	{r4, r5, r6}
    ab3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000ab40 <tetrisGridClearCompleteRows>:
    ab40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    ab44:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    ab48:	e59f5be8 	ldr	r5, [pc, #3048]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    ab4c:	e89501c0 	ldm	r5, {r6, r7, r8}
    ab50:	e59f9be4 	ldr	r9, [pc, #3044]	; b73c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x84>
    ab54:	e1a04007 	mov	r4, r7
    ab58:	e2444001 	sub	r4, r4, #1
    ab5c:	e3a0a000 	mov	sl, #0

0000ab60 <tetrisGridClearCompleteRows_for_curRow_ge_0_loop>:
    ab60:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    ab64:	ebffffca 	bl	aa94 <tetrisGridIsRowComplete>
    ab68:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    ab6c:	e3300000 	teq	r0, #0
    ab70:	0a000003 	beq	ab84 <tetrisGridClearCompleteRowsRowIsNotComplete>
    ab74:	1affffff 	bne	ab78 <tetrisGridClearCompleteRowsRowIsComplete>

0000ab78 <tetrisGridClearCompleteRowsRowIsComplete>:
    ab78:	e28aa001 	add	sl, sl, #1
    ab7c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    ab80:	ebffffde 	bl	ab00 <tetrisGridClearRow>

0000ab84 <tetrisGridClearCompleteRowsRowIsNotComplete>:
    ab84:	e2444001 	sub	r4, r4, #1
    ab88:	e3540000 	cmp	r4, #0
    ab8c:	aafffff3 	bge	ab60 <tetrisGridClearCompleteRows_for_curRow_ge_0_loop>
    ab90:	e1a0000a 	mov	r0, sl
    ab94:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    ab98:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    ab9c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aba0:	e1a0f00e 	mov	pc, lr

0000aba4 <PauseMenuStart>:
    aba4:	e92d4610 	push	{r4, r9, sl, lr}
    aba8:	eb000305 	bl	b7c4 <drawPauseMenu>
    abac:	e3a09000 	mov	r9, #0

0000abb0 <PauseMenuPrompt>:
    abb0:	e59f0b70 	ldr	r0, [pc, #2928]	; b728 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x70>
    abb4:	eb0006d5 	bl	c710 <startTimer>
    abb8:	ebfffebf 	bl	a6bc <sampleSNES>
    abbc:	e1a0a000 	mov	sl, r0
    abc0:	e3e01008 	mvn	r1, #8
    abc4:	e1c00001 	bic	r0, r0, r1
    abc8:	e3500000 	cmp	r0, #0
    abcc:	0a00000f 	beq	ac10 <PauseMenuStartPressed>
    abd0:	e1a0000a 	mov	r0, sl
    abd4:	e3e01c01 	mvn	r1, #256	; 0x100
    abd8:	e1c00001 	bic	r0, r0, r1
    abdc:	e3500000 	cmp	r0, #0
    abe0:	0a000013 	beq	ac34 <PauseMenuAPressed>
    abe4:	e1a0000a 	mov	r0, sl
    abe8:	e3e01010 	mvn	r1, #16
    abec:	e1c00001 	bic	r0, r0, r1
    abf0:	e3500000 	cmp	r0, #0
    abf4:	0a000011 	beq	ac40 <PauseMenuUpPressed>
    abf8:	e1a0000a 	mov	r0, sl
    abfc:	e3e01020 	mvn	r1, #32
    ac00:	e1c00001 	bic	r0, r0, r1
    ac04:	e3500000 	cmp	r0, #0
    ac08:	0a000013 	beq	ac5c <PauseMenuDownPressed>
    ac0c:	eaffffe7 	b	abb0 <PauseMenuPrompt>

0000ac10 <PauseMenuStartPressed>:
    ac10:	e3a04000 	mov	r4, #0
    ac14:	e3a03f9a 	mov	r3, #616	; 0x268
    ac18:	e3a02fa2 	mov	r2, #648	; 0x288
    ac1c:	e3a0104c 	mov	r1, #76	; 0x4c
    ac20:	e3a000bc 	mov	r0, #188	; 0xbc
    ac24:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ac28:	eb00069d 	bl	c6a4 <drawRect>
    ac2c:	eb000012 	bl	ac7c <DrawBoard>
    ac30:	e8bd8610 	pop	{r4, r9, sl, pc}

0000ac34 <PauseMenuAPressed>:
    ac34:	e3590000 	cmp	r9, #0
    ac38:	0affff43 	beq	a94c <StartGame>
    ac3c:	eaffff1a 	b	a8ac <MainMenu>

0000ac40 <PauseMenuUpPressed>:
    ac40:	e3590000 	cmp	r9, #0
    ac44:	0affffd9 	beq	abb0 <PauseMenuPrompt>
    ac48:	e3a09000 	mov	r9, #0
    ac4c:	eb000356 	bl	b9ac <setPauseMenuIndicatorRestart>
    ac50:	e3a00801 	mov	r0, #65536	; 0x10000
    ac54:	eb0006ad 	bl	c710 <startTimer>
    ac58:	eaffffd4 	b	abb0 <PauseMenuPrompt>

0000ac5c <PauseMenuDownPressed>:
    ac5c:	e3590001 	cmp	r9, #1
    ac60:	0affffd2 	beq	abb0 <PauseMenuPrompt>
    ac64:	e3a09001 	mov	r9, #1
    ac68:	eb00035f 	bl	b9ec <setPauseMenuIndicatorQuit>
    ac6c:	e3a00801 	mov	r0, #65536	; 0x10000
    ac70:	eb0006a6 	bl	c710 <startTimer>
    ac74:	eaffffcd 	b	abb0 <PauseMenuPrompt>
    ac78:	e8bd8610 	pop	{r4, r9, sl, pc}

0000ac7c <DrawBoard>:
    ac7c:	e92d4010 	push	{r4, lr}
    ac80:	e3a04a0e 	mov	r4, #57344	; 0xe000
    ac84:	e3a03004 	mov	r3, #4
    ac88:	e3a02fa2 	mov	r2, #648	; 0x288
    ac8c:	e3a0104c 	mov	r1, #76	; 0x4c
    ac90:	e3a000bc 	mov	r0, #188	; 0xbc
    ac94:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ac98:	eb000681 	bl	c6a4 <drawRect>
    ac9c:	e3a04a0e 	mov	r4, #57344	; 0xe000
    aca0:	e3a03004 	mov	r3, #4
    aca4:	e3a02fa2 	mov	r2, #648	; 0x288
    aca8:	e3a01e2b 	mov	r1, #688	; 0x2b0
    acac:	e3a000bc 	mov	r0, #188	; 0xbc
    acb0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    acb4:	eb00067a 	bl	c6a4 <drawRect>
    acb8:	e3a04a0e 	mov	r4, #57344	; 0xe000
    acbc:	e3a03e26 	mov	r3, #608	; 0x260
    acc0:	e3a02004 	mov	r2, #4
    acc4:	e3a01050 	mov	r1, #80	; 0x50
    acc8:	e3a000bc 	mov	r0, #188	; 0xbc
    accc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    acd0:	eb000673 	bl	c6a4 <drawRect>
    acd4:	e3a04a0e 	mov	r4, #57344	; 0xe000
    acd8:	e3a03e26 	mov	r3, #608	; 0x260
    acdc:	e3a02004 	mov	r2, #4
    ace0:	e3a01050 	mov	r1, #80	; 0x50
    ace4:	e3a00c02 	mov	r0, #512	; 0x200
    ace8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    acec:	eb00066c 	bl	c6a4 <drawRect>
    acf0:	e3a04a0e 	mov	r4, #57344	; 0xe000
    acf4:	e3a03e26 	mov	r3, #608	; 0x260
    acf8:	e3a02004 	mov	r2, #4
    acfc:	e3a01050 	mov	r1, #80	; 0x50
    ad00:	e3a00d0d 	mov	r0, #832	; 0x340
    ad04:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ad08:	eb000665 	bl	c6a4 <drawRect>
    ad0c:	e59f0a2c 	ldr	r0, [pc, #2604]	; b740 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x88>
    ad10:	e59f1a2c 	ldr	r1, [pc, #2604]	; b744 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x8c>
    ad14:	e59f2a2c 	ldr	r2, [pc, #2604]	; b748 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x90>
    ad18:	e3a030e6 	mov	r3, #230	; 0xe6
    ad1c:	eb000311 	bl	b968 <WriteSentence>
    ad20:	e59f4a1c 	ldr	r4, [pc, #2588]	; b744 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x8c>
    ad24:	e3a03036 	mov	r3, #54	; 0x36
    ad28:	e3a02036 	mov	r2, #54	; 0x36
    ad2c:	e3a010d3 	mov	r1, #211	; 0xd3
    ad30:	e59f0a14 	ldr	r0, [pc, #2580]	; b74c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x94>
    ad34:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ad38:	eb000659 	bl	c6a4 <drawRect>
    ad3c:	e59f4a0c 	ldr	r4, [pc, #2572]	; b750 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x98>
    ad40:	e3a03032 	mov	r3, #50	; 0x32
    ad44:	e3a02032 	mov	r2, #50	; 0x32
    ad48:	e3a010d5 	mov	r1, #213	; 0xd5
    ad4c:	e59f0a00 	ldr	r0, [pc, #2560]	; b754 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x9c>
    ad50:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ad54:	eb000652 	bl	c6a4 <drawRect>
    ad58:	e59f09f8 	ldr	r0, [pc, #2552]	; b758 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xa0>
    ad5c:	e59f19f8 	ldr	r1, [pc, #2552]	; b75c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xa4>
    ad60:	e59f29f8 	ldr	r2, [pc, #2552]	; b760 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xa8>
    ad64:	e59f39f8 	ldr	r3, [pc, #2552]	; b764 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xac>
    ad68:	eb0002fe 	bl	b968 <WriteSentence>
    ad6c:	e59f49e8 	ldr	r4, [pc, #2536]	; b75c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xa4>
    ad70:	e3a03088 	mov	r3, #136	; 0x88
    ad74:	e3a02088 	mov	r2, #136	; 0x88
    ad78:	e3a01e21 	mov	r1, #528	; 0x210
    ad7c:	e3a00fa1 	mov	r0, #644	; 0x284
    ad80:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ad84:	eb000646 	bl	c6a4 <drawRect>
    ad88:	ebfffdf4 	bl	a560 <randomNumber>
    ad8c:	e59f19d4 	ldr	r1, [pc, #2516]	; b768 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb0>
    ad90:	e5810000 	str	r0, [r1]
    ad94:	eb0000f7 	bl	b178 <drawQueue>
    ad98:	eb000000 	bl	ada0 <UpdateScore>
    ad9c:	e8bd8010 	pop	{r4, pc}

0000ada0 <UpdateScore>:
    ada0:	e92d4010 	push	{r4, lr}
    ada4:	e59f49a4 	ldr	r4, [pc, #2468]	; b750 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x98>
    ada8:	e3a03014 	mov	r3, #20
    adac:	e3a02018 	mov	r2, #24
    adb0:	e3a010e4 	mov	r1, #228	; 0xe4
    adb4:	e59f09b0 	ldr	r0, [pc, #2480]	; b76c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb4>
    adb8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    adbc:	eb000638 	bl	c6a4 <drawRect>
    adc0:	e59f0964 	ldr	r0, [pc, #2404]	; b72c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x74>
    adc4:	e5901000 	ldr	r1, [r0]
    adc8:	e3510063 	cmp	r1, #99	; 0x63
    adcc:	ca000011 	bgt	ae18 <threeDigitScore>
    add0:	e3510009 	cmp	r1, #9
    add4:	ca000003 	bgt	ade8 <twoDigitScore>

0000add8 <oneDigitScore>:
    add8:	e59f0990 	ldr	r0, [pc, #2448]	; b770 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb8>
    addc:	e2811030 	add	r1, r1, #48	; 0x30
    ade0:	e5c01006 	strb	r1, [r0, #6]
    ade4:	ea000010 	b	ae2c <PrintScore>

0000ade8 <twoDigitScore>:
    ade8:	e59f0980 	ldr	r0, [pc, #2432]	; b770 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb8>
    adec:	e3a02000 	mov	r2, #0

0000adf0 <twoDigitScoreLoop>:
    adf0:	e351000a 	cmp	r1, #10
    adf4:	ba000002 	blt	ae04 <twoDigitScoreLoopDone>
    adf8:	e241100a 	sub	r1, r1, #10
    adfc:	e2822001 	add	r2, r2, #1
    ae00:	eafffffa 	b	adf0 <twoDigitScoreLoop>

0000ae04 <twoDigitScoreLoopDone>:
    ae04:	e2811030 	add	r1, r1, #48	; 0x30
    ae08:	e2822030 	add	r2, r2, #48	; 0x30
    ae0c:	e5c02005 	strb	r2, [r0, #5]
    ae10:	e5c01006 	strb	r1, [r0, #6]
    ae14:	ea000004 	b	ae2c <PrintScore>

0000ae18 <threeDigitScore>:
    ae18:	e2411064 	sub	r1, r1, #100	; 0x64
    ae1c:	e59f094c 	ldr	r0, [pc, #2380]	; b770 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb8>
    ae20:	e3a02031 	mov	r2, #49	; 0x31
    ae24:	e5c02004 	strb	r2, [r0, #4]
    ae28:	eaffffee 	b	ade8 <twoDigitScore>

0000ae2c <PrintScore>:
    ae2c:	e59f093c 	ldr	r0, [pc, #2364]	; b770 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb8>
    ae30:	e3a01000 	mov	r1, #0
    ae34:	e59f2930 	ldr	r2, [pc, #2352]	; b76c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb4>
    ae38:	e3a030e6 	mov	r3, #230	; 0xe6
    ae3c:	eb0002c9 	bl	b968 <WriteSentence>
    ae40:	e8bd8010 	pop	{r4, pc}

0000ae44 <ClearScreenBlack>:
    ae44:	e92d4600 	push	{r9, sl, lr}
    ae48:	e59f0924 	ldr	r0, [pc, #2340]	; b774 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xbc>
    ae4c:	e5909014 	ldr	r9, [r0, #20]
    ae50:	e590a018 	ldr	sl, [r0, #24]
    ae54:	e3a00000 	mov	r0, #0
    ae58:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae5c:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    ae60:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    ae64:	e3a00000 	mov	r0, #0
    ae68:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae6c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae70:	eb00060b 	bl	c6a4 <drawRect>
    ae74:	e8bd8600 	pop	{r9, sl, pc}

0000ae78 <tetrisInitGrid>:
    ae78:	e59f08b8 	ldr	r0, [pc, #2232]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    ae7c:	e280100c 	add	r1, r0, #12
    ae80:	e59f28b4 	ldr	r2, [pc, #2228]	; b73c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x84>
    ae84:	e3a03000 	mov	r3, #0

0000ae88 <forEach_block_in_tetrisGrid_loop>:
    ae88:	e5813000 	str	r3, [r1]
    ae8c:	e2811004 	add	r1, r1, #4
    ae90:	e1510002 	cmp	r1, r2
    ae94:	aa000000 	bge	ae9c <forEach_block_in_tetrisGrid_loopEnd>
    ae98:	bafffffa 	blt	ae88 <forEach_block_in_tetrisGrid_loop>

0000ae9c <forEach_block_in_tetrisGrid_loopEnd>:
    ae9c:	e1a0f00e 	mov	pc, lr

0000aea0 <tetrisSetGridBlockColor>:
    aea0:	e8bd0007 	pop	{r0, r1, r2}
    aea4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    aea8:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    aeac:	e59f3884 	ldr	r3, [pc, #2180]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    aeb0:	e8930070 	ldm	r3, {r4, r5, r6}
    aeb4:	e283700c 	add	r7, r3, #12
    aeb8:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    aebc:	e92d0013 	push	{r0, r1, r4}
    aec0:	eb00060d 	bl	c6fc <positionToArrayOffset>
    aec4:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)
    aec8:	e1a08108 	lsl	r8, r8, #2
    aecc:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    aed0:	e7872008 	str	r2, [r7, r8]
    aed4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    aed8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    aedc:	e1a0f00e 	mov	pc, lr

0000aee0 <tetrisGetGridBlockColor>:
    aee0:	e8bd0006 	pop	{r1, r2}
    aee4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    aee8:	e92d03f0 	push	{r4, r5, r6, r7, r8, r9}
    aeec:	e59f3844 	ldr	r3, [pc, #2116]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    aef0:	e8930070 	ldm	r3, {r4, r5, r6}
    aef4:	e283700c 	add	r7, r3, #12
    aef8:	e3e094ff 	mvn	r9, #-16777216	; 0xff000000
    aefc:	e3510000 	cmp	r1, #0
    af00:	ba00000a 	blt	af30 <tetrisGetGridBlockColorEnd>
    af04:	e1510004 	cmp	r1, r4
    af08:	aa000008 	bge	af30 <tetrisGetGridBlockColorEnd>
    af0c:	e3520000 	cmp	r2, #0
    af10:	ba000006 	blt	af30 <tetrisGetGridBlockColorEnd>
    af14:	e1520005 	cmp	r2, r5
    af18:	aa000004 	bge	af30 <tetrisGetGridBlockColorEnd>

0000af1c <tetrisGetGridBlockColor_validInput>:
    af1c:	e92d0016 	push	{r1, r2, r4}
    af20:	eb0005f5 	bl	c6fc <positionToArrayOffset>
    af24:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)
    af28:	e1a08108 	lsl	r8, r8, #2
    af2c:	e7979008 	ldr	r9, [r7, r8]

0000af30 <tetrisGetGridBlockColorEnd>:
    af30:	e1a00009 	mov	r0, r9
    af34:	e8bd03f0 	pop	{r4, r5, r6, r7, r8, r9}
    af38:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    af3c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af40:	e1a0f00e 	mov	pc, lr

0000af44 <tetrisClearGridBlock>:
    af44:	e8bd0003 	pop	{r0, r1}
    af48:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    af4c:	e3a02000 	mov	r2, #0
    af50:	e92d0007 	push	{r0, r1, r2}
    af54:	ebffffd1 	bl	aea0 <tetrisSetGridBlockColor>
    af58:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000af5c <tetrisDrawGrid>:
    af5c:	e1a0000d 	mov	r0, sp
    af60:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    af64:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    af68:	e59f77c8 	ldr	r7, [pc, #1992]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    af6c:	e8970700 	ldm	r7, {r8, r9, sl}
    af70:	e287b00c 	add	fp, r7, #12
    af74:	e1a07000 	mov	r7, r0
    af78:	e3a04000 	mov	r4, #0
    af7c:	e3a05000 	mov	r5, #0
    af80:	e3a06000 	mov	r6, #0

0000af84 <tetrisDrawGrid_for_curCol_lt_cols_loop>:
    af84:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000af88 <tetrisDrawGrid_for_curRow_lt_rows_loop>:
    af88:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    af8c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    af90:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    af94:	e89707c0 	ldm	r7, {r6, r7, r8, r9, sl}
    af98:	e92d07c0 	push	{r6, r7, r8, r9, sl}
    af9c:	e92d0030 	push	{r4, r5}
    afa0:	eb000197 	bl	b604 <tetrisBlockHasDataForGridPoint>
    afa4:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    afa8:	e3300000 	teq	r0, #0
    afac:	e8bd07c0 	pop	{r6, r7, r8, r9, sl}
    afb0:	e8bd1fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    afb4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    afb8:	0a000001 	beq	afc4 <tetrisDrawGridBlock>

0000afbc <tetrisDrawGridBlockSkip>:
    afbc:	e320f000 	nop	{0}
    afc0:	ea00000d 	b	affc <tetrisDrawGridBlockEnd>

0000afc4 <tetrisDrawGridBlock>:
    afc4:	e92d0130 	push	{r4, r5, r8}
    afc8:	eb0005cb 	bl	c6fc <positionToArrayOffset>
    afcc:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    afd0:	e1a0c10c 	lsl	ip, ip, #2
    afd4:	e79b600c 	ldr	r6, [fp, ip]
    afd8:	e92d000f 	push	{r0, r1, r2, r3}
    afdc:	e92d0030 	push	{r4, r5}
    afe0:	eb00003a 	bl	b0d0 <tetrisGetRectForGridPosition>
    afe4:	e8bd000f 	pop	{r0, r1, r2, r3}
    afe8:	e28000c0 	add	r0, r0, #192	; 0xc0
    afec:	e2811050 	add	r1, r1, #80	; 0x50
    aff0:	e92d004f 	push	{r0, r1, r2, r3, r6}
    aff4:	eb0005aa 	bl	c6a4 <drawRect>
    aff8:	e8bd000f 	pop	{r0, r1, r2, r3}

0000affc <tetrisDrawGridBlockEnd>:
    affc:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b000:	e2855001 	add	r5, r5, #1
    b004:	e1550009 	cmp	r5, r9
    b008:	baffffde 	blt	af88 <tetrisDrawGrid_for_curRow_lt_rows_loop>
    b00c:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    b010:	e2844001 	add	r4, r4, #1
    b014:	e1540008 	cmp	r4, r8
    b018:	baffffd9 	blt	af84 <tetrisDrawGrid_for_curCol_lt_cols_loop>
    b01c:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b020:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b024:	e1a0f00e 	mov	pc, lr

0000b028 <tetrisUpdateGrid>:
    b028:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b02c:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b030:	e59f7700 	ldr	r7, [pc, #1792]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    b034:	e8970700 	ldm	r7, {r8, r9, sl}
    b038:	e287b00c 	add	fp, r7, #12
    b03c:	e3a04000 	mov	r4, #0
    b040:	e1a05009 	mov	r5, r9
    b044:	e3a06000 	mov	r6, #0

0000b048 <tetrisUpdateGrid_for_curCol_lt_cols_loop>:
    b048:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000b04c <tetrisUpdateGrid_for_curRow_ge_0_loop>:
    b04c:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b050:	e92d0030 	push	{r4, r5}
    b054:	e92d0030 	push	{r4, r5}
    b058:	ebffffa0 	bl	aee0 <tetrisGetGridBlockColor>
    b05c:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
    b060:	e3360000 	teq	r6, #0
    b064:	e8bd0030 	pop	{r4, r5}
    b068:	0a00000d 	beq	b0a4 <tetrisUpdateGridBlockBelowHasData>
    b06c:	1affffff 	bne	b070 <tetrisUpdateGridCurrentBlockHasData>

0000b070 <tetrisUpdateGridCurrentBlockHasData>:
    b070:	e1a00004 	mov	r0, r4
    b074:	e2851001 	add	r1, r5, #1
    b078:	e92d0003 	push	{r0, r1}
    b07c:	e92d0003 	push	{r0, r1}
    b080:	ebffff96 	bl	aee0 <tetrisGetGridBlockColor>
    b084:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    b088:	e3320000 	teq	r2, #0
    b08c:	e8bd0003 	pop	{r0, r1}
    b090:	1a000003 	bne	b0a4 <tetrisUpdateGridBlockBelowHasData>
    b094:	e92d0043 	push	{r0, r1, r6}
    b098:	ebffff80 	bl	aea0 <tetrisSetGridBlockColor>
    b09c:	e92d0030 	push	{r4, r5}
    b0a0:	ebffffa7 	bl	af44 <tetrisClearGridBlock>

0000b0a4 <tetrisUpdateGridBlockBelowHasData>:
    b0a4:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b0a8:	e2455001 	sub	r5, r5, #1
    b0ac:	e3550000 	cmp	r5, #0
    b0b0:	aaffffe5 	bge	b04c <tetrisUpdateGrid_for_curRow_ge_0_loop>
    b0b4:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    b0b8:	e2844001 	add	r4, r4, #1
    b0bc:	e1540008 	cmp	r4, r8
    b0c0:	baffffe0 	blt	b048 <tetrisUpdateGrid_for_curCol_lt_cols_loop>
    b0c4:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    b0c8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b0cc:	e1a0f00e 	mov	pc, lr

0000b0d0 <tetrisGetRectForGridPosition>:
    b0d0:	e8bd0003 	pop	{r0, r1}
    b0d4:	e92d00f0 	push	{r4, r5, r6, r7}
    b0d8:	e59f4658 	ldr	r4, [pc, #1624]	; b738 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x80>
    b0dc:	e89400e0 	ldm	r4, {r5, r6, r7}
    b0e0:	e1a02007 	mov	r2, r7
    b0e4:	e1a03007 	mov	r3, r7
    b0e8:	e0000092 	mul	r0, r2, r0
    b0ec:	e0010193 	mul	r1, r3, r1
    b0f0:	e8bd00f0 	pop	{r4, r5, r6, r7}
    b0f4:	e92d000f 	push	{r0, r1, r2, r3}
    b0f8:	e1a0f00e 	mov	pc, lr

0000b0fc <tetrisCreateNewBlock>:
    b0fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b100:	e59f0670 	ldr	r0, [pc, #1648]	; b778 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xc0>
    b104:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}

0000b108 <initializeTetrisBlock>:
    b108:	e59f0658 	ldr	r0, [pc, #1624]	; b768 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb0>
    b10c:	e5900000 	ldr	r0, [r0]
    b110:	e3a04004 	mov	r4, #4
    b114:	e3a05000 	mov	r5, #0
    b118:	e59f665c 	ldr	r6, [pc, #1628]	; b77c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xc4>
    b11c:	e1a01100 	lsl	r1, r0, #2
    b120:	e7966001 	ldr	r6, [r6, r1]
    b124:	e59f7654 	ldr	r7, [pc, #1620]	; b780 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xc8>
    b128:	e3300001 	teq	r0, #1
    b12c:	059f7650 	ldreq	r7, [pc, #1616]	; b784 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xcc>
    b130:	e3300002 	teq	r0, #2
    b134:	059f764c 	ldreq	r7, [pc, #1612]	; b788 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xd0>
    b138:	e3300003 	teq	r0, #3
    b13c:	059f7648 	ldreq	r7, [pc, #1608]	; b78c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xd4>
    b140:	e3300004 	teq	r0, #4
    b144:	059f7644 	ldreq	r7, [pc, #1604]	; b790 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xd8>
    b148:	e3300005 	teq	r0, #5
    b14c:	059f7640 	ldreq	r7, [pc, #1600]	; b794 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xdc>
    b150:	e3300006 	teq	r0, #6
    b154:	059f763c 	ldreq	r7, [pc, #1596]	; b798 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xe0>
    b158:	e3a08000 	mov	r8, #0

0000b15c <initializeTetrisBlockEnd>:
    b15c:	ebfffcff 	bl	a560 <randomNumber>
    b160:	e59f1600 	ldr	r1, [pc, #1536]	; b768 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb0>
    b164:	e5810000 	str	r0, [r1]
    b168:	eb000002 	bl	b178 <drawQueue>
    b16c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b170:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b174:	e1a0f00e 	mov	pc, lr

0000b178 <drawQueue>:
    b178:	e92d4010 	push	{r4, lr}
    b17c:	e59f45cc 	ldr	r4, [pc, #1484]	; b750 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x98>
    b180:	e3a03084 	mov	r3, #132	; 0x84
    b184:	e3a02084 	mov	r2, #132	; 0x84
    b188:	e59f160c 	ldr	r1, [pc, #1548]	; b79c <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xe4>
    b18c:	e59f060c 	ldr	r0, [pc, #1548]	; b7a0 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xe8>
    b190:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b194:	eb000542 	bl	c6a4 <drawRect>
    b198:	e59f15c8 	ldr	r1, [pc, #1480]	; b768 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xb0>
    b19c:	e5914000 	ldr	r4, [r1]
    b1a0:	e3340000 	teq	r4, #0
    b1a4:	0a00000b 	beq	b1d8 <QueueA>
    b1a8:	e3340001 	teq	r4, #1
    b1ac:	0a000011 	beq	b1f8 <QueueB>
    b1b0:	e3340002 	teq	r4, #2
    b1b4:	0a00001e 	beq	b234 <QueueC>
    b1b8:	e3340003 	teq	r4, #3
    b1bc:	0a00002b 	beq	b270 <QueueD>
    b1c0:	e3340004 	teq	r4, #4
    b1c4:	0a000031 	beq	b290 <QueueE>
    b1c8:	e3340005 	teq	r4, #5
    b1cc:	0a00003e 	beq	b2cc <QueueF>
    b1d0:	e3340006 	teq	r4, #6
    b1d4:	0a00004b 	beq	b308 <QueueG>

0000b1d8 <QueueA>:
    b1d8:	e59f45c4 	ldr	r4, [pc, #1476]	; b7a4 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xec>
    b1dc:	e3a03080 	mov	r3, #128	; 0x80
    b1e0:	e3a02020 	mov	r2, #32
    b1e4:	e3a01f85 	mov	r1, #532	; 0x214
    b1e8:	e3a00fae 	mov	r0, #696	; 0x2b8
    b1ec:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b1f0:	eb00052b 	bl	c6a4 <drawRect>
    b1f4:	ea000052 	b	b344 <QueueDone>

0000b1f8 <QueueB>:
    b1f8:	e59f45a8 	ldr	r4, [pc, #1448]	; b7a8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xf0>
    b1fc:	e3a03040 	mov	r3, #64	; 0x40
    b200:	e3a02020 	mov	r2, #32
    b204:	e3a01f8d 	mov	r1, #564	; 0x234
    b208:	e3a00fa6 	mov	r0, #664	; 0x298
    b20c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b210:	eb000523 	bl	c6a4 <drawRect>
    b214:	e59f458c 	ldr	r4, [pc, #1420]	; b7a8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xf0>
    b218:	e3a03020 	mov	r3, #32
    b21c:	e3a02040 	mov	r2, #64	; 0x40
    b220:	e3a01f95 	mov	r1, #596	; 0x254
    b224:	e3a00fae 	mov	r0, #696	; 0x2b8
    b228:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b22c:	eb00051c 	bl	c6a4 <drawRect>
    b230:	ea000043 	b	b344 <QueueDone>

0000b234 <QueueC>:
    b234:	e59f4570 	ldr	r4, [pc, #1392]	; b7ac <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xf4>
    b238:	e3a03020 	mov	r3, #32
    b23c:	e3a02060 	mov	r2, #96	; 0x60
    b240:	e3a01f95 	mov	r1, #596	; 0x254
    b244:	e3a00fa6 	mov	r0, #664	; 0x298
    b248:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b24c:	eb000514 	bl	c6a4 <drawRect>
    b250:	e59f4554 	ldr	r4, [pc, #1364]	; b7ac <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xf4>
    b254:	e3a03020 	mov	r3, #32
    b258:	e3a02020 	mov	r2, #32
    b25c:	e3a01f8d 	mov	r1, #564	; 0x234
    b260:	e3a00fb6 	mov	r0, #728	; 0x2d8
    b264:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b268:	eb00050d 	bl	c6a4 <drawRect>
    b26c:	ea000034 	b	b344 <QueueDone>

0000b270 <QueueD>:
    b270:	e59f4538 	ldr	r4, [pc, #1336]	; b7b0 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xf8>
    b274:	e3a03040 	mov	r3, #64	; 0x40
    b278:	e3a02040 	mov	r2, #64	; 0x40
    b27c:	e3a01f8d 	mov	r1, #564	; 0x234
    b280:	e59f052c 	ldr	r0, [pc, #1324]	; b7b4 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0xfc>
    b284:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b288:	eb000505 	bl	c6a4 <drawRect>
    b28c:	ea00002c 	b	b344 <QueueDone>

0000b290 <QueueE>:
    b290:	e59f4520 	ldr	r4, [pc, #1312]	; b7b8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x100>
    b294:	e3a03020 	mov	r3, #32
    b298:	e3a02040 	mov	r2, #64	; 0x40
    b29c:	e3a01f8d 	mov	r1, #564	; 0x234
    b2a0:	e3a00fae 	mov	r0, #696	; 0x2b8
    b2a4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2a8:	eb0004fd 	bl	c6a4 <drawRect>
    b2ac:	e59f4504 	ldr	r4, [pc, #1284]	; b7b8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x100>
    b2b0:	e3a03020 	mov	r3, #32
    b2b4:	e3a02040 	mov	r2, #64	; 0x40
    b2b8:	e3a01f95 	mov	r1, #596	; 0x254
    b2bc:	e3a00fa6 	mov	r0, #664	; 0x298
    b2c0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2c4:	eb0004f6 	bl	c6a4 <drawRect>
    b2c8:	ea00001d 	b	b344 <QueueDone>

0000b2cc <QueueF>:
    b2cc:	e59f44e8 	ldr	r4, [pc, #1256]	; b7bc <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x104>
    b2d0:	e3a03020 	mov	r3, #32
    b2d4:	e3a02020 	mov	r2, #32
    b2d8:	e3a01f8d 	mov	r1, #564	; 0x234
    b2dc:	e3a00fae 	mov	r0, #696	; 0x2b8
    b2e0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2e4:	eb0004ee 	bl	c6a4 <drawRect>
    b2e8:	e59f44cc 	ldr	r4, [pc, #1228]	; b7bc <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x104>
    b2ec:	e3a03020 	mov	r3, #32
    b2f0:	e3a02060 	mov	r2, #96	; 0x60
    b2f4:	e3a01f95 	mov	r1, #596	; 0x254
    b2f8:	e3a00fa6 	mov	r0, #664	; 0x298
    b2fc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b300:	eb0004e7 	bl	c6a4 <drawRect>
    b304:	ea00000e 	b	b344 <QueueDone>

0000b308 <QueueG>:
    b308:	e59f44b0 	ldr	r4, [pc, #1200]	; b7c0 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x108>
    b30c:	e3a03020 	mov	r3, #32
    b310:	e3a02040 	mov	r2, #64	; 0x40
    b314:	e3a01f8d 	mov	r1, #564	; 0x234
    b318:	e3a00fa6 	mov	r0, #664	; 0x298
    b31c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b320:	eb0004df 	bl	c6a4 <drawRect>
    b324:	e59f4494 	ldr	r4, [pc, #1172]	; b7c0 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop+0x108>
    b328:	e3a03020 	mov	r3, #32
    b32c:	e3a02040 	mov	r2, #64	; 0x40
    b330:	e3a01f95 	mov	r1, #596	; 0x254
    b334:	e3a00fae 	mov	r0, #696	; 0x2b8
    b338:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b33c:	eb0004d8 	bl	c6a4 <drawRect>
    b340:	eaffffff 	b	b344 <QueueDone>

0000b344 <QueueDone>:
    b344:	e8bd8010 	pop	{r4, pc}

0000b348 <tetrisDrawBlock>:
    b348:	e1a0000d 	mov	r0, sp
    b34c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b350:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b354:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    b358:	e92d1800 	push	{fp, ip}
    b35c:	e3a0b000 	mov	fp, #0
    b360:	e3a0c000 	mov	ip, #0

0000b364 <for_i_lt_4_loop>:
    b364:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000b368 <for_j_lt_4_loop>:
    b368:	e92d0070 	push	{r4, r5, r6}
    b36c:	e19720b8 	ldrh	r2, [r7, r8]
    b370:	e084400b 	add	r4, r4, fp
    b374:	e085500c 	add	r5, r5, ip
    b378:	e3a01004 	mov	r1, #4
    b37c:	e0010c91 	mul	r1, r1, ip
    b380:	e081100b 	add	r1, r1, fp
    b384:	e1a02112 	lsl	r2, r2, r1
    b388:	e3a01902 	mov	r1, #32768	; 0x8000
    b38c:	e0011002 	and	r1, r1, r2
    b390:	e3310000 	teq	r1, #0
    b394:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
    b398:	03a06000 	moveq	r6, #0
    b39c:	0a00000a 	beq	b3cc <blockHasNoData>

0000b3a0 <blockHasData>:
    b3a0:	e92d000f 	push	{r0, r1, r2, r3}
    b3a4:	e320f000 	nop	{0}
    b3a8:	e92d0030 	push	{r4, r5}
    b3ac:	ebffff47 	bl	b0d0 <tetrisGetRectForGridPosition>
    b3b0:	e8bd000f 	pop	{r0, r1, r2, r3}
    b3b4:	e320f000 	nop	{0}
    b3b8:	e28000c0 	add	r0, r0, #192	; 0xc0
    b3bc:	e2811050 	add	r1, r1, #80	; 0x50
    b3c0:	e92d004f 	push	{r0, r1, r2, r3, r6}
    b3c4:	eb0004b6 	bl	c6a4 <drawRect>
    b3c8:	e8bd000f 	pop	{r0, r1, r2, r3}

0000b3cc <blockHasNoData>:
    b3cc:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
    b3d0:	e8bd0070 	pop	{r4, r5, r6}
    b3d4:	e28cc001 	add	ip, ip, #1
    b3d8:	e35c0004 	cmp	ip, #4
    b3dc:	baffffe1 	blt	b368 <for_j_lt_4_loop>
    b3e0:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    b3e4:	e28bb001 	add	fp, fp, #1
    b3e8:	e35b0004 	cmp	fp, #4
    b3ec:	baffffdc 	blt	b364 <for_i_lt_4_loop>
    b3f0:	e8bd1800 	pop	{fp, ip}
    b3f4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b3f8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b3fc:	e1a0f00e 	mov	pc, lr

0000b400 <tetrisCheckBlockGridCollisions>:
    b400:	e1a0000d 	mov	r0, sp
    b404:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b408:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b40c:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    b410:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b414:	eb00009e 	bl	b694 <tetrisGetGridBitmaskForBlock>
    b418:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    b41c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b420:	e320f000 	nop	{0}
    b424:	e19710b8 	ldrh	r1, [r7, r8]
    b428:	e0000001 	and	r0, r0, r1
    b42c:	e3500000 	cmp	r0, #0
    b430:	13a00001 	movne	r0, #1
    b434:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b438:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b43c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    b440:	e1a0f00e 	mov	pc, lr

0000b444 <tetrisOnBlockCollision>:
    b444:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b448:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b44c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b450:	e19730b8 	ldrh	r3, [r7, r8]
    b454:	e320f000 	nop	{0}
    b458:	eb000005 	bl	b474 <writeBlockToGrid>
    b45c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b460:	ebffff25 	bl	b0fc <tetrisCreateNewBlock>
    b464:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b468:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b46c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b470:	e1a0f00e 	mov	pc, lr

0000b474 <writeBlockToGrid>:
    b474:	e1a0000d 	mov	r0, sp
    b478:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b47c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b480:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    b484:	e92d1800 	push	{fp, ip}
    b488:	e3a0b000 	mov	fp, #0
    b48c:	e3a0c000 	mov	ip, #0

0000b490 <writeBlockToGrid_for_i_lt_4_loop>:
    b490:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000b494 <writeBlockToGrid_for_j_lt_4_loop>:
    b494:	e92d0070 	push	{r4, r5, r6}
    b498:	e19720b8 	ldrh	r2, [r7, r8]
    b49c:	e084400b 	add	r4, r4, fp
    b4a0:	e085500c 	add	r5, r5, ip
    b4a4:	e3a01004 	mov	r1, #4
    b4a8:	e0010c91 	mul	r1, r1, ip
    b4ac:	e081100b 	add	r1, r1, fp
    b4b0:	e1a02112 	lsl	r2, r2, r1
    b4b4:	e3a01902 	mov	r1, #32768	; 0x8000
    b4b8:	e0011002 	and	r1, r1, r2
    b4bc:	e3310000 	teq	r1, #0
    b4c0:	0a000001 	beq	b4cc <writeBlockToGrid_blockHasNoData>

0000b4c4 <writeBlockToGrid_blockHasData>:
    b4c4:	e92d0070 	push	{r4, r5, r6}
    b4c8:	ebfffe74 	bl	aea0 <tetrisSetGridBlockColor>

0000b4cc <writeBlockToGrid_blockHasNoData>:
    b4cc:	e8bd0070 	pop	{r4, r5, r6}
    b4d0:	e28cc001 	add	ip, ip, #1
    b4d4:	e35c0004 	cmp	ip, #4
    b4d8:	baffffed 	blt	b494 <writeBlockToGrid_for_j_lt_4_loop>
    b4dc:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    b4e0:	e28bb001 	add	fp, fp, #1
    b4e4:	e35b0004 	cmp	fp, #4
    b4e8:	baffffe8 	blt	b490 <writeBlockToGrid_for_i_lt_4_loop>
    b4ec:	e8bd1800 	pop	{fp, ip}
    b4f0:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b4f4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b4f8:	e1a0f00e 	mov	pc, lr

0000b4fc <tetrisRotateBlock>:
    b4fc:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b500:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b504:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b508:	e3300000 	teq	r0, #0
    b50c:	0a000000 	beq	b514 <handleRotateLeft>
    b510:	1a000003 	bne	b524 <handleRotateRight>

0000b514 <handleRotateLeft>:
    b514:	e2888002 	add	r8, r8, #2
    b518:	e3580006 	cmp	r8, #6
    b51c:	c3a08000 	movgt	r8, #0
    b520:	ea000003 	b	b534 <handleRotateEnd>

0000b524 <handleRotateRight>:
    b524:	e2488002 	sub	r8, r8, #2
    b528:	e3580000 	cmp	r8, #0
    b52c:	b3a08006 	movlt	r8, #6
    b530:	eaffffff 	b	b534 <handleRotateEnd>

0000b534 <handleRotateEnd>:
    b534:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b538:	ebffffb0 	bl	b400 <tetrisCheckBlockGridCollisions>
    b53c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    b540:	e3300000 	teq	r0, #0
    b544:	1a000000 	bne	b54c <onRotationCollision>
    b548:	0a000004 	beq	b560 <onNoRotationCollision>

0000b54c <onRotationCollision>:
    b54c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b550:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b554:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b558:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b55c:	ea000004 	b	b574 <tetrisRotateBlockEnd>

0000b560 <onNoRotationCollision>:
    b560:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b564:	028dd014 	addeq	sp, sp, #20
    b568:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b56c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b570:	eaffffff 	b	b574 <tetrisRotateBlockEnd>

0000b574 <tetrisRotateBlockEnd>:
    b574:	e1a0f00e 	mov	pc, lr

0000b578 <tetrisTranslateBlock>:
    b578:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b57c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b580:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b584:	e0844000 	add	r4, r4, r0
    b588:	e0855001 	add	r5, r5, r1
    b58c:	e92d0003 	push	{r0, r1}
    b590:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b594:	ebffff99 	bl	b400 <tetrisCheckBlockGridCollisions>
    b598:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    b59c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b5a0:	e8bd0003 	pop	{r0, r1}
    b5a4:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b5a8:	e3330000 	teq	r3, #0
    b5ac:	1a000000 	bne	b5b4 <onTranslationCollision>
    b5b0:	0a00000d 	beq	b5ec <onNoTranslationCollision>

0000b5b4 <onTranslationCollision>:
    b5b4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b5b8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b5bc:	e3310000 	teq	r1, #0
    b5c0:	0a000000 	beq	b5c8 <onTranslationCollision_Horizontal>
    b5c4:	1a000002 	bne	b5d4 <onTranslationCollision_Vertical>

0000b5c8 <onTranslationCollision_Horizontal>:
    b5c8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b5cc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b5d0:	ea00000a 	b	b600 <tetrisTranslateBlockEnd>

0000b5d4 <onTranslationCollision_Vertical>:
    b5d4:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b5d8:	ebffff99 	bl	b444 <tetrisOnBlockCollision>
    b5dc:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b5e0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b5e4:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b5e8:	eafffcdf 	b	a96c <newBlock>

0000b5ec <onNoTranslationCollision>:
    b5ec:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b5f0:	028dd014 	addeq	sp, sp, #20
    b5f4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b5f8:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b5fc:	eaffffff 	b	b600 <tetrisTranslateBlockEnd>

0000b600 <tetrisTranslateBlockEnd>:
    b600:	e1a0f00e 	mov	pc, lr

0000b604 <tetrisBlockHasDataForGridPoint>:
    b604:	e8bd0003 	pop	{r0, r1}
    b608:	e89d01f0 	ldm	sp, {r4, r5, r6, r7, r8}
    b60c:	e1500004 	cmp	r0, r4
    b610:	b3a02000 	movlt	r2, #0
    b614:	ba00001c 	blt	b68c <tetrisBlockHasDataForGridPointEnd>
    b618:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    b61c:	e2844004 	add	r4, r4, #4
    b620:	e1500004 	cmp	r0, r4
    b624:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    b628:	a3a02000 	movge	r2, #0
    b62c:	aa000016 	bge	b68c <tetrisBlockHasDataForGridPointEnd>
    b630:	e1510005 	cmp	r1, r5
    b634:	b3a02000 	movlt	r2, #0
    b638:	ba000013 	blt	b68c <tetrisBlockHasDataForGridPointEnd>
    b63c:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
    b640:	e2855004 	add	r5, r5, #4
    b644:	e1510005 	cmp	r1, r5
    b648:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    b64c:	a3a02000 	movge	r2, #0
    b650:	aa00000d 	bge	b68c <tetrisBlockHasDataForGridPointEnd>
    b654:	e0400004 	sub	r0, r0, r4
    b658:	e0411005 	sub	r1, r1, r5
    b65c:	e52d8004 	push	{r8}		; (str r8, [sp, #-4]!)
    b660:	e19790b8 	ldrh	r9, [r7, r8]
    b664:	e3a08004 	mov	r8, #4
    b668:	e0080198 	mul	r8, r8, r1
    b66c:	e0888000 	add	r8, r8, r0
    b670:	e1a09819 	lsl	r9, r9, r8
    b674:	e3a08902 	mov	r8, #32768	; 0x8000
    b678:	e0088009 	and	r8, r8, r9
    b67c:	e3380000 	teq	r8, #0
    b680:	03a02000 	moveq	r2, #0
    b684:	13a02001 	movne	r2, #1
    b688:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)

0000b68c <tetrisBlockHasDataForGridPointEnd>:
    b68c:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    b690:	e1a0f00e 	mov	pc, lr

0000b694 <tetrisGetGridBitmaskForBlock>:
    b694:	e1a0000d 	mov	r0, sp
    b698:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b69c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    b6a0:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    b6a4:	e92d1800 	push	{fp, ip}
    b6a8:	e3a00000 	mov	r0, #0
    b6ac:	e3a0b000 	mov	fp, #0
    b6b0:	e3a0c000 	mov	ip, #0

0000b6b4 <tetrisGetGridBitmaskForBlock_for_i_lt_4_loop>:
    b6b4:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000b6b8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop>:
    b6b8:	e92d0070 	push	{r4, r5, r6}
    b6bc:	e084400b 	add	r4, r4, fp
    b6c0:	e085500c 	add	r5, r5, ip
    b6c4:	e92d1801 	push	{r0, fp, ip}
    b6c8:	e92d0030 	push	{r4, r5}
    b6cc:	ebfffe03 	bl	aee0 <tetrisGetGridBlockColor>
    b6d0:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
    b6d4:	e8bd1801 	pop	{r0, fp, ip}
    b6d8:	e3360000 	teq	r6, #0
    b6dc:	13a01004 	movne	r1, #4
    b6e0:	1001019c 	mulne	r1, ip, r1
    b6e4:	1081100b 	addne	r1, r1, fp
    b6e8:	13a02902 	movne	r2, #32768	; 0x8000
    b6ec:	11a02132 	lsrne	r2, r2, r1
    b6f0:	11800002 	orrne	r0, r0, r2
    b6f4:	e8bd0070 	pop	{r4, r5, r6}
    b6f8:	e28cc001 	add	ip, ip, #1
    b6fc:	e35c0004 	cmp	ip, #4
    b700:	baffffec 	blt	b6b8 <tetrisGetGridBitmaskForBlock_for_j_lt_4_loop>
    b704:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    b708:	e28bb001 	add	fp, fp, #1
    b70c:	e35b0004 	cmp	fp, #4
    b710:	baffffe7 	blt	b6b4 <tetrisGetGridBitmaskForBlock_for_i_lt_4_loop>
    b714:	e8bd1800 	pop	{fp, ip}
    b718:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    b71c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    b720:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    b724:	e1a0f00e 	mov	pc, lr
    b728:	00002710 	.word	0x00002710
    b72c:	00009cc0 	.word	0x00009cc0
    b730:	3f003004 	.word	0x3f003004
    b734:	000f4240 	.word	0x000f4240
    b738:	000090f0 	.word	0x000090f0
    b73c:	000093f4 	.word	0x000093f4
    b740:	00009ca0 	.word	0x00009ca0
    b744:	000034a0 	.word	0x000034a0
    b748:	00000269 	.word	0x00000269
    b74c:	00000297 	.word	0x00000297
    b750:	0000adb5 	.word	0x0000adb5
    b754:	00000299 	.word	0x00000299
    b758:	00009cd0 	.word	0x00009cd0
    b75c:	00000618 	.word	0x00000618
    b760:	0000023e 	.word	0x0000023e
    b764:	0000024a 	.word	0x0000024a
    b768:	00009ce0 	.word	0x00009ce0
    b76c:	000002a6 	.word	0x000002a6
    b770:	00009cb0 	.word	0x00009cb0
    b774:	00009080 	.word	0x00009080
    b778:	000093f4 	.word	0x000093f4
    b77c:	00009410 	.word	0x00009410
    b780:	00009430 	.word	0x00009430
    b784:	00009440 	.word	0x00009440
    b788:	00009450 	.word	0x00009450
    b78c:	00009460 	.word	0x00009460
    b790:	00009470 	.word	0x00009470
    b794:	00009480 	.word	0x00009480
    b798:	00009490 	.word	0x00009490
    b79c:	00000212 	.word	0x00000212
    b7a0:	00000286 	.word	0x00000286
    b7a4:	0000ffff 	.word	0x0000ffff
    b7a8:	0000aaaa 	.word	0x0000aaaa
    b7ac:	0000bbbb 	.word	0x0000bbbb
    b7b0:	0000cccc 	.word	0x0000cccc
    b7b4:	000002aa 	.word	0x000002aa
    b7b8:	0000dddd 	.word	0x0000dddd
    b7bc:	00112233 	.word	0x00112233
    b7c0:	00445566 	.word	0x00445566

0000b7c4 <drawPauseMenu>:
    b7c4:	e92d4010 	push	{r4, lr}
    b7c8:	e59f4d84 	ldr	r4, [pc, #3460]	; c554 <noPixel$+0x20>
    b7cc:	e3a03f7d 	mov	r3, #500	; 0x1f4
    b7d0:	e3a02f96 	mov	r2, #600	; 0x258
    b7d4:	e3a01086 	mov	r1, #134	; 0x86
    b7d8:	e3a000d0 	mov	r0, #208	; 0xd0
    b7dc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7e0:	eb0003af 	bl	c6a4 <drawRect>
    b7e4:	e3a04902 	mov	r4, #32768	; 0x8000
    b7e8:	e3a03004 	mov	r3, #4
    b7ec:	e3a02e26 	mov	r2, #608	; 0x260
    b7f0:	e3a01082 	mov	r1, #130	; 0x82
    b7f4:	e3a000cc 	mov	r0, #204	; 0xcc
    b7f8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7fc:	eb0003a8 	bl	c6a4 <drawRect>
    b800:	e3a04902 	mov	r4, #32768	; 0x8000
    b804:	e3a03004 	mov	r3, #4
    b808:	e3a02e26 	mov	r2, #608	; 0x260
    b80c:	e59f1d44 	ldr	r1, [pc, #3396]	; c558 <noPixel$+0x24>
    b810:	e3a000cc 	mov	r0, #204	; 0xcc
    b814:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b818:	eb0003a1 	bl	c6a4 <drawRect>
    b81c:	e3a04902 	mov	r4, #32768	; 0x8000
    b820:	e3a03f7d 	mov	r3, #500	; 0x1f4
    b824:	e3a02004 	mov	r2, #4
    b828:	e3a01086 	mov	r1, #134	; 0x86
    b82c:	e3a000cc 	mov	r0, #204	; 0xcc
    b830:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b834:	eb00039a 	bl	c6a4 <drawRect>
    b838:	e3a04902 	mov	r4, #32768	; 0x8000
    b83c:	e3a03f7d 	mov	r3, #500	; 0x1f4
    b840:	e3a02004 	mov	r2, #4
    b844:	e3a01086 	mov	r1, #134	; 0x86
    b848:	e3a00fca 	mov	r0, #808	; 0x328
    b84c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b850:	eb000393 	bl	c6a4 <drawRect>
    b854:	eb000213 	bl	c0a8 <drawPaused>
    b858:	e59f0cfc 	ldr	r0, [pc, #3324]	; c55c <noPixel$+0x28>
    b85c:	e3a01e1d 	mov	r1, #464	; 0x1d0
    b860:	eb0001f3 	bl	c034 <drawMenuButton>
    b864:	e59f0cf4 	ldr	r0, [pc, #3316]	; c560 <noPixel$+0x2c>
    b868:	e3a01000 	mov	r1, #0
    b86c:	e59f2cf0 	ldr	r2, [pc, #3312]	; c564 <noPixel$+0x30>
    b870:	e59f3cec 	ldr	r3, [pc, #3308]	; c564 <noPixel$+0x30>
    b874:	eb00003b 	bl	b968 <WriteSentence>
    b878:	e59f0cdc 	ldr	r0, [pc, #3292]	; c55c <noPixel$+0x28>
    b87c:	e59f1ce4 	ldr	r1, [pc, #3300]	; c568 <noPixel$+0x34>
    b880:	eb0001eb 	bl	c034 <drawMenuButton>
    b884:	e59f0ce0 	ldr	r0, [pc, #3296]	; c56c <noPixel$+0x38>
    b888:	e3a01000 	mov	r1, #0
    b88c:	e59f2cdc 	ldr	r2, [pc, #3292]	; c570 <noPixel$+0x3c>
    b890:	e3a03f8d 	mov	r3, #564	; 0x234
    b894:	eb000033 	bl	b968 <WriteSentence>
    b898:	eb000043 	bl	b9ac <setPauseMenuIndicatorRestart>
    b89c:	e8bd8010 	pop	{r4, pc}

0000b8a0 <drawMainMenu>:
    b8a0:	e92d4610 	push	{r4, r9, sl, lr}
    b8a4:	e59f0cc8 	ldr	r0, [pc, #3272]	; c574 <noPixel$+0x40>
    b8a8:	e5909014 	ldr	r9, [r0, #20]
    b8ac:	e590a018 	ldr	sl, [r0, #24]
    b8b0:	e59f0c9c 	ldr	r0, [pc, #3228]	; c554 <noPixel$+0x20>
    b8b4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    b8b8:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    b8bc:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    b8c0:	e3a00000 	mov	r0, #0
    b8c4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    b8c8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    b8cc:	eb000374 	bl	c6a4 <drawRect>
    b8d0:	e59f4ca0 	ldr	r4, [pc, #3232]	; c578 <noPixel$+0x44>
    b8d4:	e3a030c8 	mov	r3, #200	; 0xc8
    b8d8:	e3a02f96 	mov	r2, #600	; 0x258
    b8dc:	e3a01054 	mov	r1, #84	; 0x54
    b8e0:	e3a000d4 	mov	r0, #212	; 0xd4
    b8e4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b8e8:	eb00036d 	bl	c6a4 <drawRect>
    b8ec:	e59f4c84 	ldr	r4, [pc, #3204]	; c578 <noPixel$+0x44>
    b8f0:	e3a030c8 	mov	r3, #200	; 0xc8
    b8f4:	e3a020c8 	mov	r2, #200	; 0xc8
    b8f8:	e3a01f47 	mov	r1, #284	; 0x11c
    b8fc:	e3a00f67 	mov	r0, #412	; 0x19c
    b900:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b904:	eb000366 	bl	c6a4 <drawRect>
    b908:	eb00027b 	bl	c2fc <drawTitle>
    b90c:	e59f0c68 	ldr	r0, [pc, #3176]	; c57c <noPixel$+0x48>
    b910:	e3a01000 	mov	r1, #0
    b914:	e59f2c64 	ldr	r2, [pc, #3172]	; c580 <noPixel$+0x4c>
    b918:	e3a03044 	mov	r3, #68	; 0x44
    b91c:	eb000011 	bl	b968 <WriteSentence>
    b920:	e59f0c34 	ldr	r0, [pc, #3124]	; c55c <noPixel$+0x28>
    b924:	e3a01f8d 	mov	r1, #564	; 0x234
    b928:	eb0001c1 	bl	c034 <drawMenuButton>
    b92c:	e59f0c50 	ldr	r0, [pc, #3152]	; c584 <noPixel$+0x50>
    b930:	e3a01000 	mov	r1, #0
    b934:	e59f2c4c 	ldr	r2, [pc, #3148]	; c588 <noPixel$+0x54>
    b938:	e59f3c4c 	ldr	r3, [pc, #3148]	; c58c <noPixel$+0x58>
    b93c:	eb000009 	bl	b968 <WriteSentence>
    b940:	e59f0c14 	ldr	r0, [pc, #3092]	; c55c <noPixel$+0x28>
    b944:	e59f1c44 	ldr	r1, [pc, #3140]	; c590 <noPixel$+0x5c>
    b948:	eb0001b9 	bl	c034 <drawMenuButton>
    b94c:	e59f0c18 	ldr	r0, [pc, #3096]	; c56c <noPixel$+0x38>
    b950:	e3a01000 	mov	r1, #0
    b954:	e59f2c14 	ldr	r2, [pc, #3092]	; c570 <noPixel$+0x3c>
    b958:	e3a03fa6 	mov	r3, #664	; 0x298
    b95c:	eb000001 	bl	b968 <WriteSentence>
    b960:	eb000031 	bl	ba2c <setMainMenuIndicatorStart>
    b964:	e8bd8610 	pop	{r4, r9, sl, pc}

0000b968 <WriteSentence>:
    b968:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    b96c:	e1a05000 	mov	r5, r0
    b970:	e5954000 	ldr	r4, [r5]
    b974:	e2855004 	add	r5, r5, #4
    b978:	e1a06001 	mov	r6, r1
    b97c:	e1a08002 	mov	r8, r2
    b980:	e1a07003 	mov	r7, r3

0000b984 <LoadChar>:
    b984:	e4d50001 	ldrb	r0, [r5], #1
    b988:	e1a01006 	mov	r1, r6
    b98c:	e1a02007 	mov	r2, r7
    b990:	e1a03008 	mov	r3, r8
    b994:	eb0002d8 	bl	c4fc <DrawChar>
    b998:	e2888008 	add	r8, r8, #8
    b99c:	e2444001 	sub	r4, r4, #1
    b9a0:	e3540000 	cmp	r4, #0
    b9a4:	cafffff6 	bgt	b984 <LoadChar>
    b9a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000b9ac <setPauseMenuIndicatorRestart>:
    b9ac:	e92d4010 	push	{r4, lr}
    b9b0:	e59f4bdc 	ldr	r4, [pc, #3036]	; c594 <noPixel$+0x60>
    b9b4:	e3a03014 	mov	r3, #20
    b9b8:	e3a02014 	mov	r2, #20
    b9bc:	e3a01e23 	mov	r1, #560	; 0x230
    b9c0:	e3a00f71 	mov	r0, #452	; 0x1c4
    b9c4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b9c8:	eb000335 	bl	c6a4 <drawRect>
    b9cc:	e3a04000 	mov	r4, #0
    b9d0:	e3a03014 	mov	r3, #20
    b9d4:	e3a02014 	mov	r2, #20
    b9d8:	e59f1bb8 	ldr	r1, [pc, #3000]	; c598 <noPixel$+0x64>
    b9dc:	e3a00f71 	mov	r0, #452	; 0x1c4
    b9e0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b9e4:	eb00032e 	bl	c6a4 <drawRect>
    b9e8:	e8bd8010 	pop	{r4, pc}

0000b9ec <setPauseMenuIndicatorQuit>:
    b9ec:	e92d4010 	push	{r4, lr}
    b9f0:	e59f4b9c 	ldr	r4, [pc, #2972]	; c594 <noPixel$+0x60>
    b9f4:	e3a03014 	mov	r3, #20
    b9f8:	e3a02014 	mov	r2, #20
    b9fc:	e59f1b94 	ldr	r1, [pc, #2964]	; c598 <noPixel$+0x64>
    ba00:	e3a00f71 	mov	r0, #452	; 0x1c4
    ba04:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ba08:	eb000325 	bl	c6a4 <drawRect>
    ba0c:	e3a04000 	mov	r4, #0
    ba10:	e3a03014 	mov	r3, #20
    ba14:	e3a02014 	mov	r2, #20
    ba18:	e3a01e23 	mov	r1, #560	; 0x230
    ba1c:	e3a00f71 	mov	r0, #452	; 0x1c4
    ba20:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ba24:	eb00031e 	bl	c6a4 <drawRect>
    ba28:	e8bd8010 	pop	{r4, pc}

0000ba2c <setMainMenuIndicatorStart>:
    ba2c:	e92d4010 	push	{r4, lr}
    ba30:	e59f4b5c 	ldr	r4, [pc, #2908]	; c594 <noPixel$+0x60>
    ba34:	e3a03014 	mov	r3, #20
    ba38:	e3a02014 	mov	r2, #20
    ba3c:	e3a01fa5 	mov	r1, #660	; 0x294
    ba40:	e3a00f71 	mov	r0, #452	; 0x1c4
    ba44:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ba48:	eb000315 	bl	c6a4 <drawRect>
    ba4c:	e3a04000 	mov	r4, #0
    ba50:	e3a03014 	mov	r3, #20
    ba54:	e3a02014 	mov	r2, #20
    ba58:	e59f1b3c 	ldr	r1, [pc, #2876]	; c59c <noPixel$+0x68>
    ba5c:	e3a00f71 	mov	r0, #452	; 0x1c4
    ba60:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ba64:	eb00030e 	bl	c6a4 <drawRect>
    ba68:	e8bd8010 	pop	{r4, pc}

0000ba6c <setMainMenuIndicatorQuit>:
    ba6c:	e92d4010 	push	{r4, lr}
    ba70:	e59f4b1c 	ldr	r4, [pc, #2844]	; c594 <noPixel$+0x60>
    ba74:	e3a03014 	mov	r3, #20
    ba78:	e3a02014 	mov	r2, #20
    ba7c:	e59f1b18 	ldr	r1, [pc, #2840]	; c59c <noPixel$+0x68>
    ba80:	e3a00f71 	mov	r0, #452	; 0x1c4
    ba84:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ba88:	eb000305 	bl	c6a4 <drawRect>
    ba8c:	e3a04000 	mov	r4, #0
    ba90:	e3a03014 	mov	r3, #20
    ba94:	e3a02014 	mov	r2, #20
    ba98:	e3a01fa5 	mov	r1, #660	; 0x294
    ba9c:	e3a00f71 	mov	r0, #452	; 0x1c4
    baa0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    baa4:	eb0002fe 	bl	c6a4 <drawRect>
    baa8:	e8bd8010 	pop	{r4, pc}

0000baac <drawVictoryScreen>:
    baac:	e92d4010 	push	{r4, lr}
    bab0:	e59f4ae8 	ldr	r4, [pc, #2792]	; c5a0 <noPixel$+0x6c>
    bab4:	e3a0305a 	mov	r3, #90	; 0x5a
    bab8:	e3a0201e 	mov	r2, #30
    babc:	e3a010c8 	mov	r1, #200	; 0xc8
    bac0:	e3a00057 	mov	r0, #87	; 0x57
    bac4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bac8:	eb0002f5 	bl	c6a4 <drawRect>
    bacc:	e59f4acc 	ldr	r4, [pc, #2764]	; c5a0 <noPixel$+0x6c>
    bad0:	e3a0305a 	mov	r3, #90	; 0x5a
    bad4:	e3a0201e 	mov	r2, #30
    bad8:	e3a010c8 	mov	r1, #200	; 0xc8
    badc:	e3a00093 	mov	r0, #147	; 0x93
    bae0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bae4:	eb0002ee 	bl	c6a4 <drawRect>
    bae8:	e59f4ab0 	ldr	r4, [pc, #2736]	; c5a0 <noPixel$+0x6c>
    baec:	e3a0305a 	mov	r3, #90	; 0x5a
    baf0:	e3a0201e 	mov	r2, #30
    baf4:	e3a01f41 	mov	r1, #260	; 0x104
    baf8:	e3a00075 	mov	r0, #117	; 0x75
    bafc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb00:	eb0002e7 	bl	c6a4 <drawRect>
    bb04:	e59f4a94 	ldr	r4, [pc, #2708]	; c5a0 <noPixel$+0x6c>
    bb08:	e3a0305a 	mov	r3, #90	; 0x5a
    bb0c:	e3a0201e 	mov	r2, #30
    bb10:	e3a010e6 	mov	r1, #230	; 0xe6
    bb14:	e3a000bb 	mov	r0, #187	; 0xbb
    bb18:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb1c:	eb0002e0 	bl	c6a4 <drawRect>
    bb20:	e59f4a78 	ldr	r4, [pc, #2680]	; c5a0 <noPixel$+0x6c>
    bb24:	e3a0305a 	mov	r3, #90	; 0x5a
    bb28:	e3a0201e 	mov	r2, #30
    bb2c:	e3a010e6 	mov	r1, #230	; 0xe6
    bb30:	e3a000f7 	mov	r0, #247	; 0xf7
    bb34:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb38:	eb0002d9 	bl	c6a4 <drawRect>
    bb3c:	e59f4a5c 	ldr	r4, [pc, #2652]	; c5a0 <noPixel$+0x6c>
    bb40:	e3a0301e 	mov	r3, #30
    bb44:	e3a0201e 	mov	r2, #30
    bb48:	e3a010c8 	mov	r1, #200	; 0xc8
    bb4c:	e3a000d9 	mov	r0, #217	; 0xd9
    bb50:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb54:	eb0002d2 	bl	c6a4 <drawRect>
    bb58:	e59f4a40 	ldr	r4, [pc, #2624]	; c5a0 <noPixel$+0x6c>
    bb5c:	e3a0301e 	mov	r3, #30
    bb60:	e3a0201e 	mov	r2, #30
    bb64:	e3a01d05 	mov	r1, #320	; 0x140
    bb68:	e3a000d9 	mov	r0, #217	; 0xd9
    bb6c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb70:	eb0002cb 	bl	c6a4 <drawRect>
    bb74:	e59f4a24 	ldr	r4, [pc, #2596]	; c5a0 <noPixel$+0x6c>
    bb78:	e3a03078 	mov	r3, #120	; 0x78
    bb7c:	e3a0201e 	mov	r2, #30
    bb80:	e3a010c8 	mov	r1, #200	; 0xc8
    bb84:	e59f0a18 	ldr	r0, [pc, #2584]	; c5a4 <noPixel$+0x70>
    bb88:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bb8c:	eb0002c4 	bl	c6a4 <drawRect>
    bb90:	e59f4a08 	ldr	r4, [pc, #2568]	; c5a0 <noPixel$+0x6c>
    bb94:	e3a03078 	mov	r3, #120	; 0x78
    bb98:	e3a0201e 	mov	r2, #30
    bb9c:	e3a010c8 	mov	r1, #200	; 0xc8
    bba0:	e59f0a00 	ldr	r0, [pc, #2560]	; c5a8 <noPixel$+0x74>
    bba4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bba8:	eb0002bd 	bl	c6a4 <drawRect>
    bbac:	e59f49ec 	ldr	r4, [pc, #2540]	; c5a0 <noPixel$+0x6c>
    bbb0:	e3a0301e 	mov	r3, #30
    bbb4:	e3a0201e 	mov	r2, #30
    bbb8:	e3a01d05 	mov	r1, #320	; 0x140
    bbbc:	e59f09e8 	ldr	r0, [pc, #2536]	; c5ac <noPixel$+0x78>
    bbc0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bbc4:	eb0002b6 	bl	c6a4 <drawRect>
    bbc8:	e59f49d0 	ldr	r4, [pc, #2512]	; c5a0 <noPixel$+0x6c>
    bbcc:	e3a03078 	mov	r3, #120	; 0x78
    bbd0:	e3a0201e 	mov	r2, #30
    bbd4:	e3a010c8 	mov	r1, #200	; 0xc8
    bbd8:	e59f09a8 	ldr	r0, [pc, #2472]	; c588 <noPixel$+0x54>
    bbdc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bbe0:	eb0002af 	bl	c6a4 <drawRect>
    bbe4:	e59f49b4 	ldr	r4, [pc, #2484]	; c5a0 <noPixel$+0x6c>
    bbe8:	e3a03078 	mov	r3, #120	; 0x78
    bbec:	e3a0201e 	mov	r2, #30
    bbf0:	e3a010c8 	mov	r1, #200	; 0xc8
    bbf4:	e59f09b4 	ldr	r0, [pc, #2484]	; c5b0 <noPixel$+0x7c>
    bbf8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bbfc:	eb0002a8 	bl	c6a4 <drawRect>
    bc00:	e59f4998 	ldr	r4, [pc, #2456]	; c5a0 <noPixel$+0x6c>
    bc04:	e3a03078 	mov	r3, #120	; 0x78
    bc08:	e3a0201e 	mov	r2, #30
    bc0c:	e3a010c8 	mov	r1, #200	; 0xc8
    bc10:	e59f099c 	ldr	r0, [pc, #2460]	; c5b4 <noPixel$+0x80>
    bc14:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bc18:	eb0002a1 	bl	c6a4 <drawRect>
    bc1c:	e59f497c 	ldr	r4, [pc, #2428]	; c5a0 <noPixel$+0x6c>
    bc20:	e3a0301e 	mov	r3, #30
    bc24:	e3a0201e 	mov	r2, #30
    bc28:	e3a01d05 	mov	r1, #320	; 0x140
    bc2c:	e59f0984 	ldr	r0, [pc, #2436]	; c5b8 <noPixel$+0x84>
    bc30:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bc34:	eb00029a 	bl	c6a4 <drawRect>
    bc38:	e59f4960 	ldr	r4, [pc, #2400]	; c5a0 <noPixel$+0x6c>
    bc3c:	e3a0301e 	mov	r3, #30
    bc40:	e3a0201e 	mov	r2, #30
    bc44:	e3a01d05 	mov	r1, #320	; 0x140
    bc48:	e59f096c 	ldr	r0, [pc, #2412]	; c5bc <noPixel$+0x88>
    bc4c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bc50:	eb000293 	bl	c6a4 <drawRect>
    bc54:	e59f4944 	ldr	r4, [pc, #2372]	; c5a0 <noPixel$+0x6c>
    bc58:	e3a0301e 	mov	r3, #30
    bc5c:	e3a0205a 	mov	r2, #90	; 0x5a
    bc60:	e3a010c8 	mov	r1, #200	; 0xc8
    bc64:	e59f0954 	ldr	r0, [pc, #2388]	; c5c0 <noPixel$+0x8c>
    bc68:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bc6c:	eb00028c 	bl	c6a4 <drawRect>
    bc70:	e59f4928 	ldr	r4, [pc, #2344]	; c5a0 <noPixel$+0x6c>
    bc74:	e3a0301e 	mov	r3, #30
    bc78:	e3a0205a 	mov	r2, #90	; 0x5a
    bc7c:	e3a01d05 	mov	r1, #320	; 0x140
    bc80:	e59f0938 	ldr	r0, [pc, #2360]	; c5c0 <noPixel$+0x8c>
    bc84:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bc88:	eb000285 	bl	c6a4 <drawRect>
    bc8c:	e59f490c 	ldr	r4, [pc, #2316]	; c5a0 <noPixel$+0x6c>
    bc90:	e3a0305a 	mov	r3, #90	; 0x5a
    bc94:	e3a0201e 	mov	r2, #30
    bc98:	e3a010e6 	mov	r1, #230	; 0xe6
    bc9c:	e59f0920 	ldr	r0, [pc, #2336]	; c5c4 <noPixel$+0x90>
    bca0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bca4:	eb00027e 	bl	c6a4 <drawRect>
    bca8:	e59f48f0 	ldr	r4, [pc, #2288]	; c5a0 <noPixel$+0x6c>
    bcac:	e3a03096 	mov	r3, #150	; 0x96
    bcb0:	e3a0201e 	mov	r2, #30
    bcb4:	e3a010c8 	mov	r1, #200	; 0xc8
    bcb8:	e59f0908 	ldr	r0, [pc, #2312]	; c5c8 <noPixel$+0x94>
    bcbc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bcc0:	eb000277 	bl	c6a4 <drawRect>
    bcc4:	e59f48d4 	ldr	r4, [pc, #2260]	; c5a0 <noPixel$+0x6c>
    bcc8:	e3a0301e 	mov	r3, #30
    bccc:	e3a0201e 	mov	r2, #30
    bcd0:	e3a010e6 	mov	r1, #230	; 0xe6
    bcd4:	e59f08f0 	ldr	r0, [pc, #2288]	; c5cc <noPixel$+0x98>
    bcd8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bcdc:	eb000270 	bl	c6a4 <drawRect>
    bce0:	e59f48b8 	ldr	r4, [pc, #2232]	; c5a0 <noPixel$+0x6c>
    bce4:	e3a0301e 	mov	r3, #30
    bce8:	e3a0201e 	mov	r2, #30
    bcec:	e3a01f41 	mov	r1, #260	; 0x104
    bcf0:	e59f08d8 	ldr	r0, [pc, #2264]	; c5d0 <noPixel$+0x9c>
    bcf4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bcf8:	eb000269 	bl	c6a4 <drawRect>
    bcfc:	e59f489c 	ldr	r4, [pc, #2204]	; c5a0 <noPixel$+0x6c>
    bd00:	e3a0301e 	mov	r3, #30
    bd04:	e3a0201e 	mov	r2, #30
    bd08:	e59f18c4 	ldr	r1, [pc, #2244]	; c5d4 <noPixel$+0xa0>
    bd0c:	e59f08c4 	ldr	r0, [pc, #2244]	; c5d8 <noPixel$+0xa4>
    bd10:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bd14:	eb000262 	bl	c6a4 <drawRect>
    bd18:	e59f4880 	ldr	r4, [pc, #2176]	; c5a0 <noPixel$+0x6c>
    bd1c:	e3a03096 	mov	r3, #150	; 0x96
    bd20:	e3a0201e 	mov	r2, #30
    bd24:	e3a010c8 	mov	r1, #200	; 0xc8
    bd28:	e59f08ac 	ldr	r0, [pc, #2220]	; c5dc <noPixel$+0xa8>
    bd2c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bd30:	eb00025b 	bl	c6a4 <drawRect>
    bd34:	e59f4864 	ldr	r4, [pc, #2148]	; c5a0 <noPixel$+0x6c>
    bd38:	e3a0305a 	mov	r3, #90	; 0x5a
    bd3c:	e3a0201e 	mov	r2, #30
    bd40:	e3a010c8 	mov	r1, #200	; 0xc8
    bd44:	e59f0894 	ldr	r0, [pc, #2196]	; c5e0 <noPixel$+0xac>
    bd48:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bd4c:	eb000254 	bl	c6a4 <drawRect>
    bd50:	e59f4848 	ldr	r4, [pc, #2120]	; c5a0 <noPixel$+0x6c>
    bd54:	e3a0301e 	mov	r3, #30
    bd58:	e3a0201e 	mov	r2, #30
    bd5c:	e3a01d05 	mov	r1, #320	; 0x140
    bd60:	e59f0878 	ldr	r0, [pc, #2168]	; c5e0 <noPixel$+0xac>
    bd64:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bd68:	eb00024d 	bl	c6a4 <drawRect>
    bd6c:	e8bd8010 	pop	{r4, pc}

0000bd70 <drawLossScreen>:
    bd70:	e92d4010 	push	{r4, lr}
    bd74:	e59f4868 	ldr	r4, [pc, #2152]	; c5e4 <noPixel$+0xb0>
    bd78:	e3a0305a 	mov	r3, #90	; 0x5a
    bd7c:	e3a0201e 	mov	r2, #30
    bd80:	e3a010c8 	mov	r1, #200	; 0xc8
    bd84:	e3a00075 	mov	r0, #117	; 0x75
    bd88:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bd8c:	eb000244 	bl	c6a4 <drawRect>
    bd90:	e59f484c 	ldr	r4, [pc, #2124]	; c5e4 <noPixel$+0xb0>
    bd94:	e3a0305a 	mov	r3, #90	; 0x5a
    bd98:	e3a0201e 	mov	r2, #30
    bd9c:	e3a010c8 	mov	r1, #200	; 0xc8
    bda0:	e3a000b1 	mov	r0, #177	; 0xb1
    bda4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bda8:	eb00023d 	bl	c6a4 <drawRect>
    bdac:	e59f4830 	ldr	r4, [pc, #2096]	; c5e4 <noPixel$+0xb0>
    bdb0:	e3a0305a 	mov	r3, #90	; 0x5a
    bdb4:	e3a0201e 	mov	r2, #30
    bdb8:	e3a01f41 	mov	r1, #260	; 0x104
    bdbc:	e3a00093 	mov	r0, #147	; 0x93
    bdc0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bdc4:	eb000236 	bl	c6a4 <drawRect>
    bdc8:	e59f4814 	ldr	r4, [pc, #2068]	; c5e4 <noPixel$+0xb0>
    bdcc:	e3a0305a 	mov	r3, #90	; 0x5a
    bdd0:	e3a0201e 	mov	r2, #30
    bdd4:	e3a010e6 	mov	r1, #230	; 0xe6
    bdd8:	e3a000d9 	mov	r0, #217	; 0xd9
    bddc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bde0:	eb00022f 	bl	c6a4 <drawRect>
    bde4:	e59f47f8 	ldr	r4, [pc, #2040]	; c5e4 <noPixel$+0xb0>
    bde8:	e3a0305a 	mov	r3, #90	; 0x5a
    bdec:	e3a0201e 	mov	r2, #30
    bdf0:	e3a010e6 	mov	r1, #230	; 0xe6
    bdf4:	e59f07ec 	ldr	r0, [pc, #2028]	; c5e8 <noPixel$+0xb4>
    bdf8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bdfc:	eb000228 	bl	c6a4 <drawRect>
    be00:	e59f47dc 	ldr	r4, [pc, #2012]	; c5e4 <noPixel$+0xb0>
    be04:	e3a0301e 	mov	r3, #30
    be08:	e3a0201e 	mov	r2, #30
    be0c:	e3a010c8 	mov	r1, #200	; 0xc8
    be10:	e3a000f7 	mov	r0, #247	; 0xf7
    be14:	e92d001f 	push	{r0, r1, r2, r3, r4}
    be18:	eb000221 	bl	c6a4 <drawRect>
    be1c:	e59f47c0 	ldr	r4, [pc, #1984]	; c5e4 <noPixel$+0xb0>
    be20:	e3a0301e 	mov	r3, #30
    be24:	e3a0201e 	mov	r2, #30
    be28:	e3a01d05 	mov	r1, #320	; 0x140
    be2c:	e3a000f7 	mov	r0, #247	; 0xf7
    be30:	e92d001f 	push	{r0, r1, r2, r3, r4}
    be34:	eb00021a 	bl	c6a4 <drawRect>
    be38:	e59f47a4 	ldr	r4, [pc, #1956]	; c5e4 <noPixel$+0xb0>
    be3c:	e3a03078 	mov	r3, #120	; 0x78
    be40:	e3a0201e 	mov	r2, #30
    be44:	e3a010c8 	mov	r1, #200	; 0xc8
    be48:	e59f075c 	ldr	r0, [pc, #1884]	; c5ac <noPixel$+0x78>
    be4c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    be50:	eb000213 	bl	c6a4 <drawRect>
    be54:	e59f4788 	ldr	r4, [pc, #1928]	; c5e4 <noPixel$+0xb0>
    be58:	e3a03078 	mov	r3, #120	; 0x78
    be5c:	e3a0201e 	mov	r2, #30
    be60:	e3a010c8 	mov	r1, #200	; 0xc8
    be64:	e59f0780 	ldr	r0, [pc, #1920]	; c5ec <noPixel$+0xb8>
    be68:	e92d001f 	push	{r0, r1, r2, r3, r4}
    be6c:	eb00020c 	bl	c6a4 <drawRect>
    be70:	e59f476c 	ldr	r4, [pc, #1900]	; c5e4 <noPixel$+0xb0>
    be74:	e3a0301e 	mov	r3, #30
    be78:	e3a0201e 	mov	r2, #30
    be7c:	e3a01d05 	mov	r1, #320	; 0x140
    be80:	e59f0720 	ldr	r0, [pc, #1824]	; c5a8 <noPixel$+0x74>
    be84:	e92d001f 	push	{r0, r1, r2, r3, r4}
    be88:	eb000205 	bl	c6a4 <drawRect>
    be8c:	e59f4750 	ldr	r4, [pc, #1872]	; c5e4 <noPixel$+0xb0>
    be90:	e3a03096 	mov	r3, #150	; 0x96
    be94:	e3a0201e 	mov	r2, #30
    be98:	e3a010c8 	mov	r1, #200	; 0xc8
    be9c:	e59f0714 	ldr	r0, [pc, #1812]	; c5b8 <noPixel$+0x84>
    bea0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bea4:	eb0001fe 	bl	c6a4 <drawRect>
    bea8:	e59f4734 	ldr	r4, [pc, #1844]	; c5e4 <noPixel$+0xb0>
    beac:	e3a0301e 	mov	r3, #30
    beb0:	e3a0203c 	mov	r2, #60	; 0x3c
    beb4:	e3a01d05 	mov	r1, #320	; 0x140
    beb8:	e59f06f0 	ldr	r0, [pc, #1776]	; c5b0 <noPixel$+0x7c>
    bebc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bec0:	eb0001f7 	bl	c6a4 <drawRect>
    bec4:	e59f4718 	ldr	r4, [pc, #1816]	; c5e4 <noPixel$+0xb0>
    bec8:	e3a0305a 	mov	r3, #90	; 0x5a
    becc:	e3a0201e 	mov	r2, #30
    bed0:	e3a010e6 	mov	r1, #230	; 0xe6
    bed4:	e59f0714 	ldr	r0, [pc, #1812]	; c5f0 <noPixel$+0xbc>
    bed8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bedc:	eb0001f0 	bl	c6a4 <drawRect>
    bee0:	e59f46fc 	ldr	r4, [pc, #1788]	; c5e4 <noPixel$+0xb0>
    bee4:	e3a0305a 	mov	r3, #90	; 0x5a
    bee8:	e3a0201e 	mov	r2, #30
    beec:	e3a010e6 	mov	r1, #230	; 0xe6
    bef0:	e59f06cc 	ldr	r0, [pc, #1740]	; c5c4 <noPixel$+0x90>
    bef4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bef8:	eb0001e9 	bl	c6a4 <drawRect>
    befc:	e59f46e0 	ldr	r4, [pc, #1760]	; c5e4 <noPixel$+0xb0>
    bf00:	e3a0301e 	mov	r3, #30
    bf04:	e3a0201e 	mov	r2, #30
    bf08:	e3a010c8 	mov	r1, #200	; 0xc8
    bf0c:	e59f06ac 	ldr	r0, [pc, #1708]	; c5c0 <noPixel$+0x8c>
    bf10:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bf14:	eb0001e2 	bl	c6a4 <drawRect>
    bf18:	e59f46c4 	ldr	r4, [pc, #1732]	; c5e4 <noPixel$+0xb0>
    bf1c:	e3a0301e 	mov	r3, #30
    bf20:	e3a0201e 	mov	r2, #30
    bf24:	e3a01d05 	mov	r1, #320	; 0x140
    bf28:	e59f0690 	ldr	r0, [pc, #1680]	; c5c0 <noPixel$+0x8c>
    bf2c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bf30:	eb0001db 	bl	c6a4 <drawRect>
    bf34:	e59f46a8 	ldr	r4, [pc, #1704]	; c5e4 <noPixel$+0xb0>
    bf38:	e3a0301e 	mov	r3, #30
    bf3c:	e3a0205a 	mov	r2, #90	; 0x5a
    bf40:	e3a010c8 	mov	r1, #200	; 0xc8
    bf44:	e59f06a8 	ldr	r0, [pc, #1704]	; c5f4 <noPixel$+0xc0>
    bf48:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bf4c:	eb0001d4 	bl	c6a4 <drawRect>
    bf50:	e59f468c 	ldr	r4, [pc, #1676]	; c5e4 <noPixel$+0xb0>
    bf54:	e3a0301e 	mov	r3, #30
    bf58:	e3a0201e 	mov	r2, #30
    bf5c:	e3a010e6 	mov	r1, #230	; 0xe6
    bf60:	e59f068c 	ldr	r0, [pc, #1676]	; c5f4 <noPixel$+0xc0>
    bf64:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bf68:	eb0001cd 	bl	c6a4 <drawRect>
    bf6c:	e59f4670 	ldr	r4, [pc, #1648]	; c5e4 <noPixel$+0xb0>
    bf70:	e3a0301e 	mov	r3, #30
    bf74:	e3a0205a 	mov	r2, #90	; 0x5a
    bf78:	e3a01f41 	mov	r1, #260	; 0x104
    bf7c:	e59f0670 	ldr	r0, [pc, #1648]	; c5f4 <noPixel$+0xc0>
    bf80:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bf84:	eb0001c6 	bl	c6a4 <drawRect>
    bf88:	e59f4654 	ldr	r4, [pc, #1620]	; c5e4 <noPixel$+0xb0>
    bf8c:	e3a0301e 	mov	r3, #30
    bf90:	e3a0201e 	mov	r2, #30
    bf94:	e59f1638 	ldr	r1, [pc, #1592]	; c5d4 <noPixel$+0xa0>
    bf98:	e59f062c 	ldr	r0, [pc, #1580]	; c5cc <noPixel$+0x98>
    bf9c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bfa0:	eb0001bf 	bl	c6a4 <drawRect>
    bfa4:	e59f4638 	ldr	r4, [pc, #1592]	; c5e4 <noPixel$+0xb0>
    bfa8:	e3a0301e 	mov	r3, #30
    bfac:	e3a0205a 	mov	r2, #90	; 0x5a
    bfb0:	e3a01d05 	mov	r1, #320	; 0x140
    bfb4:	e59f0638 	ldr	r0, [pc, #1592]	; c5f4 <noPixel$+0xc0>
    bfb8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bfbc:	eb0001b8 	bl	c6a4 <drawRect>
    bfc0:	e59f461c 	ldr	r4, [pc, #1564]	; c5e4 <noPixel$+0xb0>
    bfc4:	e3a03096 	mov	r3, #150	; 0x96
    bfc8:	e3a0201e 	mov	r2, #30
    bfcc:	e3a010c8 	mov	r1, #200	; 0xc8
    bfd0:	e59f0620 	ldr	r0, [pc, #1568]	; c5f8 <noPixel$+0xc4>
    bfd4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bfd8:	eb0001b1 	bl	c6a4 <drawRect>
    bfdc:	e59f4600 	ldr	r4, [pc, #1536]	; c5e4 <noPixel$+0xb0>
    bfe0:	e3a0301e 	mov	r3, #30
    bfe4:	e3a0203c 	mov	r2, #60	; 0x3c
    bfe8:	e3a010c8 	mov	r1, #200	; 0xc8
    bfec:	e59f0608 	ldr	r0, [pc, #1544]	; c5fc <noPixel$+0xc8>
    bff0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    bff4:	eb0001aa 	bl	c6a4 <drawRect>
    bff8:	e59f45e4 	ldr	r4, [pc, #1508]	; c5e4 <noPixel$+0xb0>
    bffc:	e3a0301e 	mov	r3, #30
    c000:	e3a0203c 	mov	r2, #60	; 0x3c
    c004:	e3a01f41 	mov	r1, #260	; 0x104
    c008:	e59f05ec 	ldr	r0, [pc, #1516]	; c5fc <noPixel$+0xc8>
    c00c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c010:	eb0001a3 	bl	c6a4 <drawRect>
    c014:	e59f45c8 	ldr	r4, [pc, #1480]	; c5e4 <noPixel$+0xb0>
    c018:	e3a0301e 	mov	r3, #30
    c01c:	e3a0203c 	mov	r2, #60	; 0x3c
    c020:	e3a01d05 	mov	r1, #320	; 0x140
    c024:	e59f05d0 	ldr	r0, [pc, #1488]	; c5fc <noPixel$+0xc8>
    c028:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c02c:	eb00019c 	bl	c6a4 <drawRect>
    c030:	e8bd8010 	pop	{r4, pc}

0000c034 <drawMenuButton>:
    c034:	e92d4610 	push	{r4, r9, sl, lr}
    c038:	e1a09000 	mov	r9, r0
    c03c:	e1a0a001 	mov	sl, r1
    c040:	e3a04000 	mov	r4, #0
    c044:	e3a03032 	mov	r3, #50	; 0x32
    c048:	e3a02096 	mov	r2, #150	; 0x96
    c04c:	e1a0100a 	mov	r1, sl
    c050:	e1a00009 	mov	r0, r9
    c054:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c058:	eb000191 	bl	c6a4 <drawRect>
    c05c:	e2899005 	add	r9, r9, #5
    c060:	e28aa005 	add	sl, sl, #5
    c064:	e59f4594 	ldr	r4, [pc, #1428]	; c600 <noPixel$+0xcc>
    c068:	e3a03028 	mov	r3, #40	; 0x28
    c06c:	e3a0208c 	mov	r2, #140	; 0x8c
    c070:	e1a0100a 	mov	r1, sl
    c074:	e1a00009 	mov	r0, r9
    c078:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c07c:	eb000188 	bl	c6a4 <drawRect>
    c080:	e2899005 	add	r9, r9, #5
    c084:	e28aa005 	add	sl, sl, #5
    c088:	e59f4504 	ldr	r4, [pc, #1284]	; c594 <noPixel$+0x60>
    c08c:	e3a0301e 	mov	r3, #30
    c090:	e3a0201e 	mov	r2, #30
    c094:	e1a0100a 	mov	r1, sl
    c098:	e1a00009 	mov	r0, r9
    c09c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c0a0:	eb00017f 	bl	c6a4 <drawRect>
    c0a4:	e8bd8610 	pop	{r4, r9, sl, pc}

0000c0a8 <drawPaused>:
    c0a8:	e92d4010 	push	{r4, lr}
    c0ac:	e3a04000 	mov	r4, #0
    c0b0:	e3a03096 	mov	r3, #150	; 0x96
    c0b4:	e3a0201e 	mov	r2, #30
    c0b8:	e3a010ae 	mov	r1, #174	; 0xae
    c0bc:	e3a000e4 	mov	r0, #228	; 0xe4
    c0c0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c0c4:	eb000176 	bl	c6a4 <drawRect>
    c0c8:	e3a04000 	mov	r4, #0
    c0cc:	e3a0301e 	mov	r3, #30
    c0d0:	e3a0203c 	mov	r2, #60	; 0x3c
    c0d4:	e3a010ae 	mov	r1, #174	; 0xae
    c0d8:	e59f0524 	ldr	r0, [pc, #1316]	; c604 <noPixel$+0xd0>
    c0dc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c0e0:	eb00016f 	bl	c6a4 <drawRect>
    c0e4:	e3a04000 	mov	r4, #0
    c0e8:	e3a0301e 	mov	r3, #30
    c0ec:	e3a0203c 	mov	r2, #60	; 0x3c
    c0f0:	e3a010ea 	mov	r1, #234	; 0xea
    c0f4:	e59f0508 	ldr	r0, [pc, #1288]	; c604 <noPixel$+0xd0>
    c0f8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c0fc:	eb000168 	bl	c6a4 <drawRect>
    c100:	e3a04000 	mov	r4, #0
    c104:	e3a0301e 	mov	r3, #30
    c108:	e3a0201e 	mov	r2, #30
    c10c:	e3a010cc 	mov	r1, #204	; 0xcc
    c110:	e3a00e12 	mov	r0, #288	; 0x120
    c114:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c118:	eb000161 	bl	c6a4 <drawRect>
    c11c:	e3a04000 	mov	r4, #0
    c120:	e3a03078 	mov	r3, #120	; 0x78
    c124:	e3a0201e 	mov	r2, #30
    c128:	e3a010cc 	mov	r1, #204	; 0xcc
    c12c:	e3a00f52 	mov	r0, #328	; 0x148
    c130:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c134:	eb00015a 	bl	c6a4 <drawRect>
    c138:	e3a04000 	mov	r4, #0
    c13c:	e3a03078 	mov	r3, #120	; 0x78
    c140:	e3a0201e 	mov	r2, #30
    c144:	e3a010cc 	mov	r1, #204	; 0xcc
    c148:	e3a00f61 	mov	r0, #388	; 0x184
    c14c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c150:	eb000153 	bl	c6a4 <drawRect>
    c154:	e3a04000 	mov	r4, #0
    c158:	e3a0301e 	mov	r3, #30
    c15c:	e3a0201e 	mov	r2, #30
    c160:	e3a010ae 	mov	r1, #174	; 0xae
    c164:	e59f049c 	ldr	r0, [pc, #1180]	; c608 <noPixel$+0xd4>
    c168:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c16c:	eb00014c 	bl	c6a4 <drawRect>
    c170:	e3a04000 	mov	r4, #0
    c174:	e3a0301e 	mov	r3, #30
    c178:	e3a0201e 	mov	r2, #30
    c17c:	e3a010ea 	mov	r1, #234	; 0xea
    c180:	e59f0480 	ldr	r0, [pc, #1152]	; c608 <noPixel$+0xd4>
    c184:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c188:	eb000145 	bl	c6a4 <drawRect>
    c18c:	e3a04000 	mov	r4, #0
    c190:	e3a03078 	mov	r3, #120	; 0x78
    c194:	e3a0201e 	mov	r2, #30
    c198:	e3a010ae 	mov	r1, #174	; 0xae
    c19c:	e3a00f6b 	mov	r0, #428	; 0x1ac
    c1a0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c1a4:	eb00013e 	bl	c6a4 <drawRect>
    c1a8:	e3a04000 	mov	r4, #0
    c1ac:	e3a03078 	mov	r3, #120	; 0x78
    c1b0:	e3a0201e 	mov	r2, #30
    c1b4:	e3a010ae 	mov	r1, #174	; 0xae
    c1b8:	e3a00f7a 	mov	r0, #488	; 0x1e8
    c1bc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c1c0:	eb000137 	bl	c6a4 <drawRect>
    c1c4:	e3a04000 	mov	r4, #0
    c1c8:	e3a0301e 	mov	r3, #30
    c1cc:	e3a0201e 	mov	r2, #30
    c1d0:	e59f1434 	ldr	r1, [pc, #1076]	; c60c <noPixel$+0xd8>
    c1d4:	e59f0434 	ldr	r0, [pc, #1076]	; c610 <noPixel$+0xdc>
    c1d8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c1dc:	eb000130 	bl	c6a4 <drawRect>
    c1e0:	e3a04000 	mov	r4, #0
    c1e4:	e3a03096 	mov	r3, #150	; 0x96
    c1e8:	e3a0204b 	mov	r2, #75	; 0x4b
    c1ec:	e3a010ae 	mov	r1, #174	; 0xae
    c1f0:	e3a00e21 	mov	r0, #528	; 0x210
    c1f4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c1f8:	eb000129 	bl	c6a4 <drawRect>
    c1fc:	e59f4350 	ldr	r4, [pc, #848]	; c554 <noPixel$+0x20>
    c200:	e3a0301e 	mov	r3, #30
    c204:	e3a0202d 	mov	r2, #45	; 0x2d
    c208:	e3a01f42 	mov	r1, #264	; 0x108
    c20c:	e3a00e21 	mov	r0, #528	; 0x210
    c210:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c214:	eb000122 	bl	c6a4 <drawRect>
    c218:	e59f4334 	ldr	r4, [pc, #820]	; c554 <noPixel$+0x20>
    c21c:	e3a0301e 	mov	r3, #30
    c220:	e3a0202d 	mov	r2, #45	; 0x2d
    c224:	e3a010cc 	mov	r1, #204	; 0xcc
    c228:	e59f03e4 	ldr	r0, [pc, #996]	; c614 <noPixel$+0xe0>
    c22c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c230:	eb00011b 	bl	c6a4 <drawRect>
    c234:	e3a04000 	mov	r4, #0
    c238:	e3a03096 	mov	r3, #150	; 0x96
    c23c:	e3a0204b 	mov	r2, #75	; 0x4b
    c240:	e3a010ae 	mov	r1, #174	; 0xae
    c244:	e59f03cc 	ldr	r0, [pc, #972]	; c618 <noPixel$+0xe4>
    c248:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c24c:	eb000114 	bl	c6a4 <drawRect>
    c250:	e59f42fc 	ldr	r4, [pc, #764]	; c554 <noPixel$+0x20>
    c254:	e3a0301e 	mov	r3, #30
    c258:	e3a0202d 	mov	r2, #45	; 0x2d
    c25c:	e3a01f42 	mov	r1, #264	; 0x108
    c260:	e59f03b4 	ldr	r0, [pc, #948]	; c61c <noPixel$+0xe8>
    c264:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c268:	eb00010d 	bl	c6a4 <drawRect>
    c26c:	e59f42e0 	ldr	r4, [pc, #736]	; c554 <noPixel$+0x20>
    c270:	e3a0301e 	mov	r3, #30
    c274:	e3a0202d 	mov	r2, #45	; 0x2d
    c278:	e3a010cc 	mov	r1, #204	; 0xcc
    c27c:	e59f0398 	ldr	r0, [pc, #920]	; c61c <noPixel$+0xe8>
    c280:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c284:	eb000106 	bl	c6a4 <drawRect>
    c288:	e3a04000 	mov	r4, #0
    c28c:	e3a03096 	mov	r3, #150	; 0x96
    c290:	e3a0201e 	mov	r2, #30
    c294:	e3a010ae 	mov	r1, #174	; 0xae
    c298:	e59f0380 	ldr	r0, [pc, #896]	; c620 <noPixel$+0xec>
    c29c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c2a0:	eb0000ff 	bl	c6a4 <drawRect>
    c2a4:	e3a04000 	mov	r4, #0
    c2a8:	e3a0301e 	mov	r3, #30
    c2ac:	e3a0201e 	mov	r2, #30
    c2b0:	e3a010ae 	mov	r1, #174	; 0xae
    c2b4:	e3a00fb6 	mov	r0, #728	; 0x2d8
    c2b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c2bc:	eb0000f8 	bl	c6a4 <drawRect>
    c2c0:	e3a04000 	mov	r4, #0
    c2c4:	e3a0301e 	mov	r3, #30
    c2c8:	e3a0201e 	mov	r2, #30
    c2cc:	e59f1338 	ldr	r1, [pc, #824]	; c60c <noPixel$+0xd8>
    c2d0:	e3a00fb6 	mov	r0, #728	; 0x2d8
    c2d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c2d8:	eb0000f1 	bl	c6a4 <drawRect>
    c2dc:	e3a04000 	mov	r4, #0
    c2e0:	e3a0305a 	mov	r3, #90	; 0x5a
    c2e4:	e3a0201e 	mov	r2, #30
    c2e8:	e3a010cc 	mov	r1, #204	; 0xcc
    c2ec:	e59f0330 	ldr	r0, [pc, #816]	; c624 <noPixel$+0xf0>
    c2f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c2f4:	eb0000ea 	bl	c6a4 <drawRect>
    c2f8:	e8bd8010 	pop	{r4, pc}

0000c2fc <drawTitle>:
    c2fc:	e92d4010 	push	{r4, lr}
    c300:	e3a04000 	mov	r4, #0
    c304:	e3a0301e 	mov	r3, #30
    c308:	e3a0205a 	mov	r2, #90	; 0x5a
    c30c:	e3a0106d 	mov	r1, #109	; 0x6d
    c310:	e3a000e3 	mov	r0, #227	; 0xe3
    c314:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c318:	eb0000e1 	bl	c6a4 <drawRect>
    c31c:	e3a04000 	mov	r4, #0
    c320:	e3a03078 	mov	r3, #120	; 0x78
    c324:	e3a0201e 	mov	r2, #30
    c328:	e3a0108b 	mov	r1, #139	; 0x8b
    c32c:	e59f02f4 	ldr	r0, [pc, #756]	; c628 <noPixel$+0xf4>
    c330:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c334:	eb0000da 	bl	c6a4 <drawRect>
    c338:	e3a04000 	mov	r4, #0
    c33c:	e3a03096 	mov	r3, #150	; 0x96
    c340:	e3a0204b 	mov	r2, #75	; 0x4b
    c344:	e3a0106d 	mov	r1, #109	; 0x6d
    c348:	e59f02dc 	ldr	r0, [pc, #732]	; c62c <noPixel$+0xf8>
    c34c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c350:	eb0000d3 	bl	c6a4 <drawRect>
    c354:	e59f421c 	ldr	r4, [pc, #540]	; c578 <noPixel$+0x44>
    c358:	e3a0301e 	mov	r3, #30
    c35c:	e3a0202d 	mov	r2, #45	; 0x2d
    c360:	e3a0108b 	mov	r1, #139	; 0x8b
    c364:	e59f02c4 	ldr	r0, [pc, #708]	; c630 <noPixel$+0xfc>
    c368:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c36c:	eb0000cc 	bl	c6a4 <drawRect>
    c370:	e59f4200 	ldr	r4, [pc, #512]	; c578 <noPixel$+0x44>
    c374:	e3a0301e 	mov	r3, #30
    c378:	e3a0202d 	mov	r2, #45	; 0x2d
    c37c:	e3a010c7 	mov	r1, #199	; 0xc7
    c380:	e59f02a8 	ldr	r0, [pc, #680]	; c630 <noPixel$+0xfc>
    c384:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c388:	eb0000c5 	bl	c6a4 <drawRect>
    c38c:	e3a04000 	mov	r4, #0
    c390:	e3a0301e 	mov	r3, #30
    c394:	e3a0205a 	mov	r2, #90	; 0x5a
    c398:	e3a0106d 	mov	r1, #109	; 0x6d
    c39c:	e3a00f67 	mov	r0, #412	; 0x19c
    c3a0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c3a4:	eb0000be 	bl	c6a4 <drawRect>
    c3a8:	e3a04000 	mov	r4, #0
    c3ac:	e3a03078 	mov	r3, #120	; 0x78
    c3b0:	e3a0201e 	mov	r2, #30
    c3b4:	e3a0108b 	mov	r1, #139	; 0x8b
    c3b8:	e59f0274 	ldr	r0, [pc, #628]	; c634 <noPixel$+0x100>
    c3bc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c3c0:	eb0000b7 	bl	c6a4 <drawRect>
    c3c4:	e3a04000 	mov	r4, #0
    c3c8:	e3a0305a 	mov	r3, #90	; 0x5a
    c3cc:	e3a0205a 	mov	r2, #90	; 0x5a
    c3d0:	e3a0106d 	mov	r1, #109	; 0x6d
    c3d4:	e3a00c02 	mov	r0, #512	; 0x200
    c3d8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c3dc:	eb0000b0 	bl	c6a4 <drawRect>
    c3e0:	e59f4190 	ldr	r4, [pc, #400]	; c578 <noPixel$+0x44>
    c3e4:	e3a0301e 	mov	r3, #30
    c3e8:	e3a0201e 	mov	r2, #30
    c3ec:	e3a0108b 	mov	r1, #139	; 0x8b
    c3f0:	e59f0240 	ldr	r0, [pc, #576]	; c638 <noPixel$+0x104>
    c3f4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c3f8:	eb0000a9 	bl	c6a4 <drawRect>
    c3fc:	e3a04000 	mov	r4, #0
    c400:	e3a0303c 	mov	r3, #60	; 0x3c
    c404:	e3a0201e 	mov	r2, #30
    c408:	e3a010c7 	mov	r1, #199	; 0xc7
    c40c:	e3a00c02 	mov	r0, #512	; 0x200
    c410:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c414:	eb0000a2 	bl	c6a4 <drawRect>
    c418:	e3a04000 	mov	r4, #0
    c41c:	e3a0301e 	mov	r3, #30
    c420:	e3a0201e 	mov	r2, #30
    c424:	e3a010c7 	mov	r1, #199	; 0xc7
    c428:	e59f0208 	ldr	r0, [pc, #520]	; c638 <noPixel$+0x104>
    c42c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c430:	eb00009b 	bl	c6a4 <drawRect>
    c434:	e3a04000 	mov	r4, #0
    c438:	e3a0301e 	mov	r3, #30
    c43c:	e3a0201e 	mov	r2, #30
    c440:	e3a010e5 	mov	r1, #229	; 0xe5
    c444:	e3a00f8f 	mov	r0, #572	; 0x23c
    c448:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c44c:	eb000094 	bl	c6a4 <drawRect>
    c450:	e3a04000 	mov	r4, #0
    c454:	e3a0301e 	mov	r3, #30
    c458:	e3a0205a 	mov	r2, #90	; 0x5a
    c45c:	e3a0106d 	mov	r1, #109	; 0x6d
    c460:	e3a00f99 	mov	r0, #612	; 0x264
    c464:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c468:	eb00008d 	bl	c6a4 <drawRect>
    c46c:	e3a04000 	mov	r4, #0
    c470:	e3a0301e 	mov	r3, #30
    c474:	e3a0205a 	mov	r2, #90	; 0x5a
    c478:	e3a010e5 	mov	r1, #229	; 0xe5
    c47c:	e3a00f99 	mov	r0, #612	; 0x264
    c480:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c484:	eb000086 	bl	c6a4 <drawRect>
    c488:	e3a04000 	mov	r4, #0
    c48c:	e3a0305a 	mov	r3, #90	; 0x5a
    c490:	e3a0201e 	mov	r2, #30
    c494:	e3a0108b 	mov	r1, #139	; 0x8b
    c498:	e59f019c 	ldr	r0, [pc, #412]	; c63c <noPixel$+0x108>
    c49c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c4a0:	eb00007f 	bl	c6a4 <drawRect>
    c4a4:	e3a04000 	mov	r4, #0
    c4a8:	e3a03096 	mov	r3, #150	; 0x96
    c4ac:	e3a02050 	mov	r2, #80	; 0x50
    c4b0:	e3a0106d 	mov	r1, #109	; 0x6d
    c4b4:	e3a00fb2 	mov	r0, #712	; 0x2c8
    c4b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c4bc:	eb000078 	bl	c6a4 <drawRect>
    c4c0:	e59f40b0 	ldr	r4, [pc, #176]	; c578 <noPixel$+0x44>
    c4c4:	e3a0301e 	mov	r3, #30
    c4c8:	e3a02032 	mov	r2, #50	; 0x32
    c4cc:	e3a0108b 	mov	r1, #139	; 0x8b
    c4d0:	e59f0168 	ldr	r0, [pc, #360]	; c640 <noPixel$+0x10c>
    c4d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c4d8:	eb000071 	bl	c6a4 <drawRect>
    c4dc:	e59f4094 	ldr	r4, [pc, #148]	; c578 <noPixel$+0x44>
    c4e0:	e3a0301e 	mov	r3, #30
    c4e4:	e3a02032 	mov	r2, #50	; 0x32
    c4e8:	e3a010c7 	mov	r1, #199	; 0xc7
    c4ec:	e3a00fb2 	mov	r0, #712	; 0x2c8
    c4f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    c4f4:	eb00006a 	bl	c6a4 <drawRect>
    c4f8:	e8bd8010 	pop	{r4, pc}

0000c4fc <DrawChar>:
    c4fc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    c500:	e1a09001 	mov	r9, r1
    c504:	e59f4138 	ldr	r4, [pc, #312]	; c644 <noPixel$+0x110>
    c508:	e0844200 	add	r4, r4, r0, lsl #4
    c50c:	e1a06002 	mov	r6, r2

0000c510 <charLoop$>:
    c510:	e1a05003 	mov	r5, r3
    c514:	e3a08001 	mov	r8, #1
    c518:	e4d47001 	ldrb	r7, [r4], #1

0000c51c <rowLoop$>:
    c51c:	e1170008 	tst	r7, r8
    c520:	0a000003 	beq	c534 <noPixel$>
    c524:	e1a00005 	mov	r0, r5
    c528:	e1a01006 	mov	r1, r6
    c52c:	e1a02009 	mov	r2, r9
    c530:	eb000051 	bl	c67c <drawPixel>

0000c534 <noPixel$>:
    c534:	e2855001 	add	r5, r5, #1
    c538:	e1a08088 	lsl	r8, r8, #1
    c53c:	e3180c01 	tst	r8, #256	; 0x100
    c540:	0afffff5 	beq	c51c <rowLoop$>
    c544:	e2866001 	add	r6, r6, #1
    c548:	e314000f 	tst	r4, #15
    c54c:	1affffef 	bne	c510 <charLoop$>
    c550:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    c554:	0000967f 	.word	0x0000967f
    c558:	0000027a 	.word	0x0000027a
    c55c:	000001b5 	.word	0x000001b5
    c560:	0000a550 	.word	0x0000a550
    c564:	000001e3 	.word	0x000001e3
    c568:	00000221 	.word	0x00000221
    c56c:	0000a540 	.word	0x0000a540
    c570:	000001eb 	.word	0x000001eb
    c574:	00009080 	.word	0x00009080
    c578:	0000297e 	.word	0x0000297e
    c57c:	0000a4f0 	.word	0x0000a4f0
    c580:	00000172 	.word	0x00000172
    c584:	0000a530 	.word	0x0000a530
    c588:	000001e7 	.word	0x000001e7
    c58c:	00000247 	.word	0x00000247
    c590:	00000285 	.word	0x00000285
    c594:	0000ffff 	.word	0x0000ffff
    c598:	000001df 	.word	0x000001df
    c59c:	00000243 	.word	0x00000243
    c5a0:	00003707 	.word	0x00003707
    c5a4:	0000011f 	.word	0x0000011f
    c5a8:	0000015b 	.word	0x0000015b
    c5ac:	0000013d 	.word	0x0000013d
    c5b0:	00000223 	.word	0x00000223
    c5b4:	0000025f 	.word	0x0000025f
    c5b8:	00000205 	.word	0x00000205
    c5bc:	00000241 	.word	0x00000241
    c5c0:	00000287 	.word	0x00000287
    c5c4:	000002a5 	.word	0x000002a5
    c5c8:	000002eb 	.word	0x000002eb
    c5cc:	00000309 	.word	0x00000309
    c5d0:	00000327 	.word	0x00000327
    c5d4:	00000122 	.word	0x00000122
    c5d8:	00000345 	.word	0x00000345
    c5dc:	00000363 	.word	0x00000363
    c5e0:	0000038b 	.word	0x0000038b
    c5e4:	0000ff27 	.word	0x0000ff27
    c5e8:	00000115 	.word	0x00000115
    c5ec:	00000179 	.word	0x00000179
    c5f0:	00000269 	.word	0x00000269
    c5f4:	000002cd 	.word	0x000002cd
    c5f8:	00000331 	.word	0x00000331
    c5fc:	0000034f 	.word	0x0000034f
    c600:	00000d7f 	.word	0x00000d7f
    c604:	00000102 	.word	0x00000102
    c608:	00000166 	.word	0x00000166
    c60c:	00000126 	.word	0x00000126
    c610:	000001ca 	.word	0x000001ca
    c614:	0000022e 	.word	0x0000022e
    c618:	00000265 	.word	0x00000265
    c61c:	00000283 	.word	0x00000283
    c620:	000002ba 	.word	0x000002ba
    c624:	000002f6 	.word	0x000002f6
    c628:	00000101 	.word	0x00000101
    c62c:	00000147 	.word	0x00000147
    c630:	00000165 	.word	0x00000165
    c634:	000001ba 	.word	0x000001ba
    c638:	0000021e 	.word	0x0000021e
    c63c:	00000282 	.word	0x00000282
    c640:	000002e6 	.word	0x000002e6
    c644:	00009cf0 	.word	0x00009cf0

0000c648 <clearScreen>:
    c648:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    c64c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    c650:	e3a04000 	mov	r4, #0
    c654:	e3a05000 	mov	r5, #0
    c658:	e59f00d0 	ldr	r0, [pc, #208]	; c730 <waitLoop+0x10>
    c65c:	e5906014 	ldr	r6, [r0, #20]
    c660:	e5907018 	ldr	r7, [r0, #24]
    c664:	e3a08000 	mov	r8, #0
    c668:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    c66c:	eb00000c 	bl	c6a4 <drawRect>
    c670:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    c674:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    c678:	e1a0f00e 	mov	pc, lr

0000c67c <drawPixel>:
    c67c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    c680:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    c684:	e0804501 	add	r4, r0, r1, lsl #10
    c688:	e1a04084 	lsl	r4, r4, #1
    c68c:	e59f00a0 	ldr	r0, [pc, #160]	; c734 <waitLoop+0x14>
    c690:	e5900000 	ldr	r0, [r0]
    c694:	e18020b4 	strh	r2, [r0, r4]
    c698:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    c69c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    c6a0:	e1a0f00e 	mov	pc, lr

0000c6a4 <drawRect>:
    c6a4:	e1a0000d 	mov	r0, sp
    c6a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    c6ac:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    c6b0:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    c6b4:	e0866004 	add	r6, r6, r4
    c6b8:	e0877005 	add	r7, r7, r5

0000c6bc <drawRectForLoopX>:
    c6bc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000c6c0 <drawRectForLoopY>:
    c6c0:	e1a00004 	mov	r0, r4
    c6c4:	e1a01005 	mov	r1, r5
    c6c8:	e1a02008 	mov	r2, r8
    c6cc:	ebffffea 	bl	c67c <drawPixel>
    c6d0:	e2855001 	add	r5, r5, #1
    c6d4:	e1550007 	cmp	r5, r7
    c6d8:	bafffff8 	blt	c6c0 <drawRectForLoopY>
    c6dc:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    c6e0:	e2844001 	add	r4, r4, #1
    c6e4:	e1540006 	cmp	r4, r6
    c6e8:	bafffff3 	blt	c6bc <drawRectForLoopX>
    c6ec:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    c6f0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    c6f4:	e28dd014 	add	sp, sp, #20
    c6f8:	e1a0f00e 	mov	pc, lr

0000c6fc <positionToArrayOffset>:
    c6fc:	e8bd0007 	pop	{r0, r1, r2}
    c700:	e0030192 	mul	r3, r2, r1
    c704:	e0833000 	add	r3, r3, r0
    c708:	e92d0008 	stmfd	sp!, {r3}
    c70c:	e1a0f00e 	mov	pc, lr

0000c710 <startTimer>:
    c710:	e1a03000 	mov	r3, r0
    c714:	e59f001c 	ldr	r0, [pc, #28]	; c738 <waitLoop+0x18>
    c718:	e5901000 	ldr	r1, [r0]
    c71c:	e0811003 	add	r1, r1, r3

0000c720 <waitLoop>:
    c720:	e5902000 	ldr	r2, [r0]
    c724:	e1510002 	cmp	r1, r2
    c728:	8afffffc 	bhi	c720 <waitLoop>
    c72c:	e1a0f00e 	mov	pc, lr
    c730:	00009080 	.word	0x00009080
    c734:	000090e0 	.word	0x000090e0
    c738:	3f003004 	.word	0x3f003004
