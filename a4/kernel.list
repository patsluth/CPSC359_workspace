
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00073a 	b	9cf0 <main>

Disassembly of section .text:

00009cf0 <main>:
    9cf0:	e3a0d902 	mov	sp, #32768	; 0x8000
    9cf4:	eb00037b 	bl	aae8 <EnableJTAG>
    9cf8:	eb00039d 	bl	ab74 <InitFrameBuffer>

00009cfc <MainMenu>:
    9cfc:	eb0001ca 	bl	a42c <ClearScreenBlack>
    9d00:	eb0001d6 	bl	a460 <DrawMainMenu>
    9d04:	e3a09000 	mov	r9, #0

00009d08 <MainMenuPrompt>:
    9d08:	eb0004b2 	bl	afd8 <sampleSNES>
    9d0c:	e1a0a000 	mov	sl, r0
    9d10:	e3e01c01 	mvn	r1, #256	; 0x100
    9d14:	e1c00001 	bic	r0, r0, r1
    9d18:	e3500000 	cmp	r0, #0
    9d1c:	0a00000c 	beq	9d54 <MainMenuAPressed>
    9d20:	e1a0000a 	mov	r0, sl
    9d24:	e3e01010 	mvn	r1, #16
    9d28:	e1c00001 	bic	r0, r0, r1
    9d2c:	e3500000 	cmp	r0, #0
    9d30:	0a00000b 	beq	9d64 <MainMenuUpPressed>
    9d34:	e1a0000a 	mov	r0, sl
    9d38:	e3e01020 	mvn	r1, #32
    9d3c:	e1c00001 	bic	r0, r0, r1
    9d40:	e3500000 	cmp	r0, #0
    9d44:	0a00000b 	beq	9d78 <MainMenuDownPressed>
    9d48:	e59f0ce4 	ldr	r0, [pc, #3300]	; aa34 <waitLoop+0x10>
    9d4c:	eb000330 	bl	aa14 <startTimer>
    9d50:	eaffffec 	b	9d08 <MainMenuPrompt>

00009d54 <MainMenuAPressed>:
    9d54:	e3590000 	cmp	r9, #0
    9d58:	0a00000b 	beq	9d8c <StartGame>
    9d5c:	eb0001b2 	bl	a42c <ClearScreenBlack>
    9d60:	ea000021 	b	9dec <mainEnd>

00009d64 <MainMenuUpPressed>:
    9d64:	e3590000 	cmp	r9, #0
    9d68:	0affffe6 	beq	9d08 <MainMenuPrompt>
    9d6c:	e3a09000 	mov	r9, #0
    9d70:	eb00017d 	bl	a36c <SetMainMenuIndicatorStart>
    9d74:	eaffffe3 	b	9d08 <MainMenuPrompt>

00009d78 <MainMenuDownPressed>:
    9d78:	e3590001 	cmp	r9, #1
    9d7c:	0affffe1 	beq	9d08 <MainMenuPrompt>
    9d80:	e3a09001 	mov	r9, #1
    9d84:	eb000190 	bl	a3cc <SetMainMenuIndicatorQuit>
    9d88:	eaffffde 	b	9d08 <MainMenuPrompt>

00009d8c <StartGame>:
    9d8c:	eb000491 	bl	afd8 <sampleSNES>
    9d90:	e59f0ca0 	ldr	r0, [pc, #3232]	; aa38 <waitLoop+0x14>
    9d94:	e280000c 	add	r0, r0, #12
    9d98:	e59f1c9c 	ldr	r1, [pc, #3228]	; aa3c <waitLoop+0x18>

00009d9c <looop>:
    9d9c:	e3a02000 	mov	r2, #0
    9da0:	e5802000 	str	r2, [r0]
    9da4:	e2800004 	add	r0, r0, #4
    9da8:	e0412000 	sub	r2, r1, r0
    9dac:	e3320000 	teq	r2, #0
    9db0:	1afffff9 	bne	9d9c <looop>
    9db4:	eb0000b6 	bl	a094 <DrawBoard>
    9db8:	eb00000c 	bl	9df0 <PauseMenuStart>
    9dbc:	eb000292 	bl	a80c <tetrisCreateNewBlock>

00009dc0 <mainLoop>:
    9dc0:	eb0002be 	bl	a8c0 <tetrisGetMaxBlockPosition>
    9dc4:	e3a00001 	mov	r0, #1
    9dc8:	eb00029a 	bl	a838 <tetrisRotateBlock>
    9dcc:	e3a00000 	mov	r0, #0
    9dd0:	e3a01001 	mov	r1, #1
    9dd4:	eb0002a6 	bl	a874 <tetrisTranslateBlock>
    9dd8:	eb000263 	bl	a76c <tetrisUpdateGridWithBlock>
    9ddc:	eb00023c 	bl	a6d4 <tetrisDrawGrid>
    9de0:	e3a00000 	mov	r0, #0
    9de4:	eb00030a 	bl	aa14 <startTimer>
    9de8:	eafffff4 	b	9dc0 <mainLoop>

00009dec <mainEnd>:
    9dec:	eafffffe 	b	9dec <mainEnd>

00009df0 <PauseMenuStart>:
    9df0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9df4:	eb00002b 	bl	9ea8 <DrawPauseMenu>
    9df8:	e3a09000 	mov	r9, #0

00009dfc <PauseMenuPrompt>:
    9dfc:	eb000475 	bl	afd8 <sampleSNES>
    9e00:	e1a0a000 	mov	sl, r0
    9e04:	e3e01008 	mvn	r1, #8
    9e08:	e1c00001 	bic	r0, r0, r1
    9e0c:	e3500000 	cmp	r0, #0
    9e10:	0a000011 	beq	9e5c <PauseMenuStartPressed>
    9e14:	e1a0000a 	mov	r0, sl
    9e18:	e3e01c01 	mvn	r1, #256	; 0x100
    9e1c:	e1c00001 	bic	r0, r0, r1
    9e20:	e3500000 	cmp	r0, #0
    9e24:	0a00000e 	beq	9e64 <PauseMenuAPressed>
    9e28:	e1a0000a 	mov	r0, sl
    9e2c:	e3e01010 	mvn	r1, #16
    9e30:	e1c00001 	bic	r0, r0, r1
    9e34:	e3500000 	cmp	r0, #0
    9e38:	0a00000f 	beq	9e7c <PauseMenuUpPressed>
    9e3c:	e1a0000a 	mov	r0, sl
    9e40:	e3e01020 	mvn	r1, #32
    9e44:	e1c00001 	bic	r0, r0, r1
    9e48:	e3500000 	cmp	r0, #0
    9e4c:	0a00000f 	beq	9e90 <PauseMenuDownPressed>
    9e50:	e59f0bdc 	ldr	r0, [pc, #3036]	; aa34 <waitLoop+0x10>
    9e54:	eb0002ee 	bl	aa14 <startTimer>
    9e58:	eaffffe7 	b	9dfc <PauseMenuPrompt>

00009e5c <PauseMenuStartPressed>:
    9e5c:	eb00008c 	bl	a094 <DrawBoard>
    9e60:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009e64 <PauseMenuAPressed>:
    9e64:	e3590000 	cmp	r9, #0
    9e68:	e3a01000 	mov	r1, #0
    9e6c:	e59f0bcc 	ldr	r0, [pc, #3020]	; aa40 <waitLoop+0x1c>
    9e70:	e5801000 	str	r1, [r0]
    9e74:	0affffc4 	beq	9d8c <StartGame>
    9e78:	eaffff9f 	b	9cfc <MainMenu>

00009e7c <PauseMenuUpPressed>:
    9e7c:	e3590000 	cmp	r9, #0
    9e80:	0affffdd 	beq	9dfc <PauseMenuPrompt>
    9e84:	e3a09000 	mov	r9, #0
    9e88:	eb000051 	bl	9fd4 <SetPauseMenuIndicatorRestart>
    9e8c:	eaffffda 	b	9dfc <PauseMenuPrompt>

00009e90 <PauseMenuDownPressed>:
    9e90:	e3590001 	cmp	r9, #1
    9e94:	0affffd8 	beq	9dfc <PauseMenuPrompt>
    9e98:	e3a09001 	mov	r9, #1
    9e9c:	eb000064 	bl	a034 <SetPauseMenuIndicatorQuit>
    9ea0:	eaffffd5 	b	9dfc <PauseMenuPrompt>
    9ea4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009ea8 <DrawPauseMenu>:
    9ea8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9eac:	e59f0b90 	ldr	r0, [pc, #2960]	; aa44 <waitLoop+0x20>
    9eb0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9eb4:	e3a00f7d 	mov	r0, #500	; 0x1f4
    9eb8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ebc:	e3a00f96 	mov	r0, #600	; 0x258
    9ec0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ec4:	e3a00086 	mov	r0, #134	; 0x86
    9ec8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ecc:	e3a000d0 	mov	r0, #208	; 0xd0
    9ed0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ed4:	eb0002bc 	bl	a9cc <drawRect>
    9ed8:	e3a00902 	mov	r0, #32768	; 0x8000
    9edc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ee0:	e3a00004 	mov	r0, #4
    9ee4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ee8:	e3a00e26 	mov	r0, #608	; 0x260
    9eec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ef0:	e3a00082 	mov	r0, #130	; 0x82
    9ef4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ef8:	e3a000cc 	mov	r0, #204	; 0xcc
    9efc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f00:	eb0002b1 	bl	a9cc <drawRect>
    9f04:	e3a00902 	mov	r0, #32768	; 0x8000
    9f08:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f0c:	e3a00004 	mov	r0, #4
    9f10:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f14:	e3a00e26 	mov	r0, #608	; 0x260
    9f18:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f1c:	e59f0b24 	ldr	r0, [pc, #2852]	; aa48 <waitLoop+0x24>
    9f20:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f24:	e3a000cc 	mov	r0, #204	; 0xcc
    9f28:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f2c:	eb0002a6 	bl	a9cc <drawRect>
    9f30:	e3a00902 	mov	r0, #32768	; 0x8000
    9f34:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f38:	e3a00f7d 	mov	r0, #500	; 0x1f4
    9f3c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f40:	e3a00004 	mov	r0, #4
    9f44:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f48:	e3a00086 	mov	r0, #134	; 0x86
    9f4c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f50:	e3a000cc 	mov	r0, #204	; 0xcc
    9f54:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f58:	eb00029b 	bl	a9cc <drawRect>
    9f5c:	e3a00902 	mov	r0, #32768	; 0x8000
    9f60:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f64:	e3a00f7d 	mov	r0, #500	; 0x1f4
    9f68:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f6c:	e3a00004 	mov	r0, #4
    9f70:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f74:	e3a00086 	mov	r0, #134	; 0x86
    9f78:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f7c:	e3a00fca 	mov	r0, #808	; 0x328
    9f80:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f84:	eb000290 	bl	a9cc <drawRect>
    9f88:	eb000319 	bl	abf4 <drawPaused>
    9f8c:	e59f0ab8 	ldr	r0, [pc, #2744]	; aa4c <waitLoop+0x28>
    9f90:	e3a01e1d 	mov	r1, #464	; 0x1d0
    9f94:	eb00016b 	bl	a548 <drawMenuButton>
    9f98:	e59f0ab0 	ldr	r0, [pc, #2736]	; aa50 <waitLoop+0x2c>
    9f9c:	e3a01000 	mov	r1, #0
    9fa0:	e59f2aac 	ldr	r2, [pc, #2732]	; aa54 <waitLoop+0x30>
    9fa4:	e59f3aa8 	ldr	r3, [pc, #2728]	; aa54 <waitLoop+0x30>
    9fa8:	eb00018f 	bl	a5ec <WriteSentence>
    9fac:	e59f0a98 	ldr	r0, [pc, #2712]	; aa4c <waitLoop+0x28>
    9fb0:	e59f1aa0 	ldr	r1, [pc, #2720]	; aa58 <waitLoop+0x34>
    9fb4:	eb000163 	bl	a548 <drawMenuButton>
    9fb8:	e59f0a9c 	ldr	r0, [pc, #2716]	; aa5c <waitLoop+0x38>
    9fbc:	e3a01000 	mov	r1, #0
    9fc0:	e59f2a98 	ldr	r2, [pc, #2712]	; aa60 <waitLoop+0x3c>
    9fc4:	e3a03f8d 	mov	r3, #564	; 0x234
    9fc8:	eb000187 	bl	a5ec <WriteSentence>
    9fcc:	eb000000 	bl	9fd4 <SetPauseMenuIndicatorRestart>
    9fd0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009fd4 <SetPauseMenuIndicatorRestart>:
    9fd4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9fd8:	e59f0a84 	ldr	r0, [pc, #2692]	; aa64 <waitLoop+0x40>
    9fdc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fe0:	e3a00014 	mov	r0, #20
    9fe4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fe8:	e3a00014 	mov	r0, #20
    9fec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ff0:	e3a00e23 	mov	r0, #560	; 0x230
    9ff4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ff8:	e3a00f71 	mov	r0, #452	; 0x1c4
    9ffc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a000:	eb000271 	bl	a9cc <drawRect>
    a004:	e3a00000 	mov	r0, #0
    a008:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a00c:	e3a00014 	mov	r0, #20
    a010:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a014:	e3a00014 	mov	r0, #20
    a018:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a01c:	e59f0a44 	ldr	r0, [pc, #2628]	; aa68 <waitLoop+0x44>
    a020:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a024:	e3a00f71 	mov	r0, #452	; 0x1c4
    a028:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a02c:	eb000266 	bl	a9cc <drawRect>
    a030:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a034 <SetPauseMenuIndicatorQuit>:
    a034:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a038:	e59f0a24 	ldr	r0, [pc, #2596]	; aa64 <waitLoop+0x40>
    a03c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a040:	e3a00014 	mov	r0, #20
    a044:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a048:	e3a00014 	mov	r0, #20
    a04c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a050:	e59f0a10 	ldr	r0, [pc, #2576]	; aa68 <waitLoop+0x44>
    a054:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a058:	e3a00f71 	mov	r0, #452	; 0x1c4
    a05c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a060:	eb000259 	bl	a9cc <drawRect>
    a064:	e3a00000 	mov	r0, #0
    a068:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a06c:	e3a00014 	mov	r0, #20
    a070:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a074:	e3a00014 	mov	r0, #20
    a078:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a07c:	e3a00e23 	mov	r0, #560	; 0x230
    a080:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a084:	e3a00f71 	mov	r0, #452	; 0x1c4
    a088:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a08c:	eb00024e 	bl	a9cc <drawRect>
    a090:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a094 <DrawBoard>:
    a094:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a098:	eb0000e3 	bl	a42c <ClearScreenBlack>
    a09c:	e3a00a0e 	mov	r0, #57344	; 0xe000
    a0a0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0a4:	e3a00004 	mov	r0, #4
    a0a8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0ac:	e3a00fa2 	mov	r0, #648	; 0x288
    a0b0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0b4:	e3a0004c 	mov	r0, #76	; 0x4c
    a0b8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0bc:	e3a000bc 	mov	r0, #188	; 0xbc
    a0c0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0c4:	eb000240 	bl	a9cc <drawRect>
    a0c8:	e3a00a0e 	mov	r0, #57344	; 0xe000
    a0cc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0d0:	e3a00004 	mov	r0, #4
    a0d4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0d8:	e3a00fa2 	mov	r0, #648	; 0x288
    a0dc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0e0:	e3a00e2b 	mov	r0, #688	; 0x2b0
    a0e4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0e8:	e3a000bc 	mov	r0, #188	; 0xbc
    a0ec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0f0:	eb000235 	bl	a9cc <drawRect>
    a0f4:	e3a00a0e 	mov	r0, #57344	; 0xe000
    a0f8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0fc:	e3a00e26 	mov	r0, #608	; 0x260
    a100:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a104:	e3a00004 	mov	r0, #4
    a108:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a10c:	e3a00050 	mov	r0, #80	; 0x50
    a110:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a114:	e3a000bc 	mov	r0, #188	; 0xbc
    a118:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a11c:	eb00022a 	bl	a9cc <drawRect>
    a120:	e3a00a0e 	mov	r0, #57344	; 0xe000
    a124:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a128:	e3a00e26 	mov	r0, #608	; 0x260
    a12c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a130:	e3a00004 	mov	r0, #4
    a134:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a138:	e3a00050 	mov	r0, #80	; 0x50
    a13c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a140:	e3a00c02 	mov	r0, #512	; 0x200
    a144:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a148:	eb00021f 	bl	a9cc <drawRect>
    a14c:	e3a00a0e 	mov	r0, #57344	; 0xe000
    a150:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a154:	e3a00e26 	mov	r0, #608	; 0x260
    a158:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a15c:	e3a00004 	mov	r0, #4
    a160:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a164:	e3a00050 	mov	r0, #80	; 0x50
    a168:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a16c:	e3a00d0d 	mov	r0, #832	; 0x340
    a170:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a174:	eb000214 	bl	a9cc <drawRect>
    a178:	e59f08ec 	ldr	r0, [pc, #2284]	; aa6c <waitLoop+0x48>
    a17c:	e59f18ec 	ldr	r1, [pc, #2284]	; aa70 <waitLoop+0x4c>
    a180:	e59f28ec 	ldr	r2, [pc, #2284]	; aa74 <waitLoop+0x50>
    a184:	e3a030e6 	mov	r3, #230	; 0xe6
    a188:	eb000117 	bl	a5ec <WriteSentence>
    a18c:	e59f08dc 	ldr	r0, [pc, #2268]	; aa70 <waitLoop+0x4c>
    a190:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a194:	e3a00036 	mov	r0, #54	; 0x36
    a198:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a19c:	e3a00036 	mov	r0, #54	; 0x36
    a1a0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1a4:	e3a000d3 	mov	r0, #211	; 0xd3
    a1a8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1ac:	e59f08c4 	ldr	r0, [pc, #2244]	; aa78 <waitLoop+0x54>
    a1b0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1b4:	eb000204 	bl	a9cc <drawRect>
    a1b8:	e59f08bc 	ldr	r0, [pc, #2236]	; aa7c <waitLoop+0x58>
    a1bc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1c0:	e3a00032 	mov	r0, #50	; 0x32
    a1c4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1c8:	e3a00032 	mov	r0, #50	; 0x32
    a1cc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1d0:	e3a000d5 	mov	r0, #213	; 0xd5
    a1d4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1d8:	e59f08a0 	ldr	r0, [pc, #2208]	; aa80 <waitLoop+0x5c>
    a1dc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a1e0:	eb0001f9 	bl	a9cc <drawRect>
    a1e4:	e59f0898 	ldr	r0, [pc, #2200]	; aa84 <waitLoop+0x60>
    a1e8:	e59f1898 	ldr	r1, [pc, #2200]	; aa88 <waitLoop+0x64>
    a1ec:	e59f2898 	ldr	r2, [pc, #2200]	; aa8c <waitLoop+0x68>
    a1f0:	e59f3898 	ldr	r3, [pc, #2200]	; aa90 <waitLoop+0x6c>
    a1f4:	eb0000fc 	bl	a5ec <WriteSentence>
    a1f8:	e59f0888 	ldr	r0, [pc, #2184]	; aa88 <waitLoop+0x64>
    a1fc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a200:	e3a00088 	mov	r0, #136	; 0x88
    a204:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a208:	e3a00088 	mov	r0, #136	; 0x88
    a20c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a210:	e3a00e21 	mov	r0, #528	; 0x210
    a214:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a218:	e3a00fa1 	mov	r0, #644	; 0x284
    a21c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a220:	eb0001e9 	bl	a9cc <drawRect>
    a224:	e59f0850 	ldr	r0, [pc, #2128]	; aa7c <waitLoop+0x58>
    a228:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a22c:	e3a00084 	mov	r0, #132	; 0x84
    a230:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a234:	e3a00084 	mov	r0, #132	; 0x84
    a238:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a23c:	e59f0850 	ldr	r0, [pc, #2128]	; aa94 <waitLoop+0x70>
    a240:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a244:	e59f084c 	ldr	r0, [pc, #2124]	; aa98 <waitLoop+0x74>
    a248:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a24c:	eb0001de 	bl	a9cc <drawRect>
    a250:	eb000000 	bl	a258 <UpdateScore>
    a254:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a258 <UpdateScore>:
    a258:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a25c:	e59f0818 	ldr	r0, [pc, #2072]	; aa7c <waitLoop+0x58>
    a260:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a264:	e3a00014 	mov	r0, #20
    a268:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a26c:	e3a00018 	mov	r0, #24
    a270:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a274:	e3a000e4 	mov	r0, #228	; 0xe4
    a278:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a27c:	e59f0818 	ldr	r0, [pc, #2072]	; aa9c <waitLoop+0x78>
    a280:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a284:	eb0001d0 	bl	a9cc <drawRect>
    a288:	e59f07b0 	ldr	r0, [pc, #1968]	; aa40 <waitLoop+0x1c>
    a28c:	e5901000 	ldr	r1, [r0]
    a290:	e3510063 	cmp	r1, #99	; 0x63
    a294:	ca000011 	bgt	a2e0 <threeDigitScore>
    a298:	e3510009 	cmp	r1, #9
    a29c:	ca000003 	bgt	a2b0 <twoDigitScore>

0000a2a0 <oneDigitScore>:
    a2a0:	e59f07f8 	ldr	r0, [pc, #2040]	; aaa0 <waitLoop+0x7c>
    a2a4:	e2811030 	add	r1, r1, #48	; 0x30
    a2a8:	e5c01006 	strb	r1, [r0, #6]
    a2ac:	ea000010 	b	a2f4 <PrintScore>

0000a2b0 <twoDigitScore>:
    a2b0:	e59f07e8 	ldr	r0, [pc, #2024]	; aaa0 <waitLoop+0x7c>
    a2b4:	e3a02000 	mov	r2, #0

0000a2b8 <twoDigitScoreLoop>:
    a2b8:	e351000a 	cmp	r1, #10
    a2bc:	ba000002 	blt	a2cc <twoDigitScoreLoopDone>
    a2c0:	e241100a 	sub	r1, r1, #10
    a2c4:	e2822001 	add	r2, r2, #1
    a2c8:	eafffffa 	b	a2b8 <twoDigitScoreLoop>

0000a2cc <twoDigitScoreLoopDone>:
    a2cc:	e2811030 	add	r1, r1, #48	; 0x30
    a2d0:	e2822030 	add	r2, r2, #48	; 0x30
    a2d4:	e5c02005 	strb	r2, [r0, #5]
    a2d8:	e5c01006 	strb	r1, [r0, #6]
    a2dc:	ea000004 	b	a2f4 <PrintScore>

0000a2e0 <threeDigitScore>:
    a2e0:	e2411064 	sub	r1, r1, #100	; 0x64
    a2e4:	e59f07b4 	ldr	r0, [pc, #1972]	; aaa0 <waitLoop+0x7c>
    a2e8:	e3a02031 	mov	r2, #49	; 0x31
    a2ec:	e5c02004 	strb	r2, [r0, #4]
    a2f0:	eaffffee 	b	a2b0 <twoDigitScore>

0000a2f4 <PrintScore>:
    a2f4:	e59f07a4 	ldr	r0, [pc, #1956]	; aaa0 <waitLoop+0x7c>
    a2f8:	e3a01000 	mov	r1, #0
    a2fc:	e59f2798 	ldr	r2, [pc, #1944]	; aa9c <waitLoop+0x78>
    a300:	e3a030e6 	mov	r3, #230	; 0xe6
    a304:	eb0000b8 	bl	a5ec <WriteSentence>
    a308:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a30c <DrawTitle>:
    a30c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a310:	e3a00000 	mov	r0, #0
    a314:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a318:	e3a0001e 	mov	r0, #30
    a31c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a320:	e3a00064 	mov	r0, #100	; 0x64
    a324:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a328:	e3a0005e 	mov	r0, #94	; 0x5e
    a32c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a330:	e3a000de 	mov	r0, #222	; 0xde
    a334:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a338:	eb0001a3 	bl	a9cc <drawRect>
    a33c:	e3a00000 	mov	r0, #0
    a340:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a344:	e3a00096 	mov	r0, #150	; 0x96
    a348:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a34c:	e3a0001e 	mov	r0, #30
    a350:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a354:	e3a0007c 	mov	r0, #124	; 0x7c
    a358:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a35c:	e59f0740 	ldr	r0, [pc, #1856]	; aaa4 <waitLoop+0x80>
    a360:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a364:	eb000198 	bl	a9cc <drawRect>
    a368:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a36c <SetMainMenuIndicatorStart>:
    a36c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a370:	e59f06ec 	ldr	r0, [pc, #1772]	; aa64 <waitLoop+0x40>
    a374:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a378:	e3a00014 	mov	r0, #20
    a37c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a380:	e3a00014 	mov	r0, #20
    a384:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a388:	e3a00fa5 	mov	r0, #660	; 0x294
    a38c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a390:	e3a00f71 	mov	r0, #452	; 0x1c4
    a394:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a398:	eb00018b 	bl	a9cc <drawRect>
    a39c:	e3a00000 	mov	r0, #0
    a3a0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3a4:	e3a00014 	mov	r0, #20
    a3a8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3ac:	e3a00014 	mov	r0, #20
    a3b0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3b4:	e59f06ec 	ldr	r0, [pc, #1772]	; aaa8 <waitLoop+0x84>
    a3b8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3bc:	e3a00f71 	mov	r0, #452	; 0x1c4
    a3c0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3c4:	eb000180 	bl	a9cc <drawRect>
    a3c8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a3cc <SetMainMenuIndicatorQuit>:
    a3cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a3d0:	e59f068c 	ldr	r0, [pc, #1676]	; aa64 <waitLoop+0x40>
    a3d4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3d8:	e3a00014 	mov	r0, #20
    a3dc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3e0:	e3a00014 	mov	r0, #20
    a3e4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3e8:	e59f06b8 	ldr	r0, [pc, #1720]	; aaa8 <waitLoop+0x84>
    a3ec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3f0:	e3a00f71 	mov	r0, #452	; 0x1c4
    a3f4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a3f8:	eb000173 	bl	a9cc <drawRect>
    a3fc:	e3a00000 	mov	r0, #0
    a400:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a404:	e3a00014 	mov	r0, #20
    a408:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a40c:	e3a00014 	mov	r0, #20
    a410:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a414:	e3a00fa5 	mov	r0, #660	; 0x294
    a418:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a41c:	e3a00f71 	mov	r0, #452	; 0x1c4
    a420:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a424:	eb000168 	bl	a9cc <drawRect>
    a428:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a42c <ClearScreenBlack>:
    a42c:	e92d4600 	push	{r9, sl, lr}
    a430:	e59f0674 	ldr	r0, [pc, #1652]	; aaac <waitLoop+0x88>
    a434:	e5909014 	ldr	r9, [r0, #20]
    a438:	e590a018 	ldr	sl, [r0, #24]
    a43c:	e3a00000 	mov	r0, #0
    a440:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a444:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    a448:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    a44c:	e3a00000 	mov	r0, #0
    a450:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a454:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a458:	eb00015b 	bl	a9cc <drawRect>
    a45c:	e8bd8600 	pop	{r9, sl, pc}

0000a460 <DrawMainMenu>:
    a460:	e92d4600 	push	{r9, sl, lr}
    a464:	e59f0640 	ldr	r0, [pc, #1600]	; aaac <waitLoop+0x88>
    a468:	e5909014 	ldr	r9, [r0, #20]
    a46c:	e590a018 	ldr	sl, [r0, #24]
    a470:	e59f05cc 	ldr	r0, [pc, #1484]	; aa44 <waitLoop+0x20>
    a474:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a478:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    a47c:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    a480:	e3a00000 	mov	r0, #0
    a484:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a488:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a48c:	eb00014e 	bl	a9cc <drawRect>
    a490:	e59f0618 	ldr	r0, [pc, #1560]	; aab0 <waitLoop+0x8c>
    a494:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a498:	e3a000c8 	mov	r0, #200	; 0xc8
    a49c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4a0:	e3a00f96 	mov	r0, #600	; 0x258
    a4a4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4a8:	e3a00054 	mov	r0, #84	; 0x54
    a4ac:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4b0:	e3a000d4 	mov	r0, #212	; 0xd4
    a4b4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4b8:	eb000143 	bl	a9cc <drawRect>
    a4bc:	e59f05ec 	ldr	r0, [pc, #1516]	; aab0 <waitLoop+0x8c>
    a4c0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4c4:	e3a000c8 	mov	r0, #200	; 0xc8
    a4c8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4cc:	e3a000c8 	mov	r0, #200	; 0xc8
    a4d0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4d4:	e3a00f47 	mov	r0, #284	; 0x11c
    a4d8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4dc:	e3a00f67 	mov	r0, #412	; 0x19c
    a4e0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a4e4:	eb000138 	bl	a9cc <drawRect>
    a4e8:	ebffff87 	bl	a30c <DrawTitle>
    a4ec:	e59f05c0 	ldr	r0, [pc, #1472]	; aab4 <waitLoop+0x90>
    a4f0:	e3a01000 	mov	r1, #0
    a4f4:	e59f25bc 	ldr	r2, [pc, #1468]	; aab8 <waitLoop+0x94>
    a4f8:	e3a03044 	mov	r3, #68	; 0x44
    a4fc:	eb00003a 	bl	a5ec <WriteSentence>
    a500:	e59f0544 	ldr	r0, [pc, #1348]	; aa4c <waitLoop+0x28>
    a504:	e3a01f8d 	mov	r1, #564	; 0x234
    a508:	eb00000e 	bl	a548 <drawMenuButton>
    a50c:	e59f05a8 	ldr	r0, [pc, #1448]	; aabc <waitLoop+0x98>
    a510:	e3a01000 	mov	r1, #0
    a514:	e59f25a4 	ldr	r2, [pc, #1444]	; aac0 <waitLoop+0x9c>
    a518:	e59f35a4 	ldr	r3, [pc, #1444]	; aac4 <waitLoop+0xa0>
    a51c:	eb000032 	bl	a5ec <WriteSentence>
    a520:	e59f0524 	ldr	r0, [pc, #1316]	; aa4c <waitLoop+0x28>
    a524:	e59f159c 	ldr	r1, [pc, #1436]	; aac8 <waitLoop+0xa4>
    a528:	eb000006 	bl	a548 <drawMenuButton>
    a52c:	e59f0528 	ldr	r0, [pc, #1320]	; aa5c <waitLoop+0x38>
    a530:	e3a01000 	mov	r1, #0
    a534:	e59f2524 	ldr	r2, [pc, #1316]	; aa60 <waitLoop+0x3c>
    a538:	e3a03fa6 	mov	r3, #664	; 0x298
    a53c:	eb00002a 	bl	a5ec <WriteSentence>
    a540:	ebffff89 	bl	a36c <SetMainMenuIndicatorStart>
    a544:	e8bd8600 	pop	{r9, sl, pc}

0000a548 <drawMenuButton>:
    a548:	e92d4600 	push	{r9, sl, lr}
    a54c:	e1a09000 	mov	r9, r0
    a550:	e1a0a001 	mov	sl, r1
    a554:	e3a00000 	mov	r0, #0
    a558:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a55c:	e3a00032 	mov	r0, #50	; 0x32
    a560:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a564:	e3a00096 	mov	r0, #150	; 0x96
    a568:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a56c:	e1a0000a 	mov	r0, sl
    a570:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a574:	e1a00009 	mov	r0, r9
    a578:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a57c:	eb000112 	bl	a9cc <drawRect>
    a580:	e2899005 	add	r9, r9, #5
    a584:	e28aa005 	add	sl, sl, #5
    a588:	e59f053c 	ldr	r0, [pc, #1340]	; aacc <waitLoop+0xa8>
    a58c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a590:	e3a00028 	mov	r0, #40	; 0x28
    a594:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a598:	e3a0008c 	mov	r0, #140	; 0x8c
    a59c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5a0:	e1a0000a 	mov	r0, sl
    a5a4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5a8:	e1a00009 	mov	r0, r9
    a5ac:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5b0:	eb000105 	bl	a9cc <drawRect>
    a5b4:	e2899005 	add	r9, r9, #5
    a5b8:	e28aa005 	add	sl, sl, #5
    a5bc:	e59f04a0 	ldr	r0, [pc, #1184]	; aa64 <waitLoop+0x40>
    a5c0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5c4:	e3a0001e 	mov	r0, #30
    a5c8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5cc:	e3a0001e 	mov	r0, #30
    a5d0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5d4:	e1a0000a 	mov	r0, sl
    a5d8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5dc:	e1a00009 	mov	r0, r9
    a5e0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a5e4:	eb0000f8 	bl	a9cc <drawRect>
    a5e8:	e8bd8600 	pop	{r9, sl, pc}

0000a5ec <WriteSentence>:
    a5ec:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    a5f0:	e1a05000 	mov	r5, r0
    a5f4:	e5954000 	ldr	r4, [r5]
    a5f8:	e2855004 	add	r5, r5, #4
    a5fc:	e1a06001 	mov	r6, r1
    a600:	e1a08002 	mov	r8, r2
    a604:	e1a07003 	mov	r7, r3

0000a608 <LoadChar>:
    a608:	e4d50001 	ldrb	r0, [r5], #1
    a60c:	e1a01006 	mov	r1, r6
    a610:	e1a02007 	mov	r2, r7
    a614:	e1a03008 	mov	r3, r8
    a618:	eb000004 	bl	a630 <DrawChar>
    a61c:	e2888008 	add	r8, r8, #8
    a620:	e2444001 	sub	r4, r4, #1
    a624:	e3540000 	cmp	r4, #0
    a628:	cafffff6 	bgt	a608 <LoadChar>
    a62c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000a630 <DrawChar>:
    a630:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    a634:	e1a09001 	mov	r9, r1
    a638:	e59f4490 	ldr	r4, [pc, #1168]	; aad0 <waitLoop+0xac>
    a63c:	e0844200 	add	r4, r4, r0, lsl #4
    a640:	e1a06002 	mov	r6, r2

0000a644 <charLoop$>:
    a644:	e1a05003 	mov	r5, r3
    a648:	e3a08001 	mov	r8, #1
    a64c:	e4d47001 	ldrb	r7, [r4], #1

0000a650 <rowLoop$>:
    a650:	e1170008 	tst	r7, r8
    a654:	0a000003 	beq	a668 <noPixel$>
    a658:	e1a00005 	mov	r0, r5
    a65c:	e1a01006 	mov	r1, r6
    a660:	e1a02009 	mov	r2, r9
    a664:	eb0000ce 	bl	a9a4 <drawPixel>

0000a668 <noPixel$>:
    a668:	e2855001 	add	r5, r5, #1
    a66c:	e1a08088 	lsl	r8, r8, #1
    a670:	e3180c01 	tst	r8, #256	; 0x100
    a674:	0afffff5 	beq	a650 <rowLoop$>
    a678:	e2866001 	add	r6, r6, #1
    a67c:	e314000f 	tst	r4, #15
    a680:	1affffef 	bne	a644 <charLoop$>
    a684:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000a688 <tetrisSetGridBlockColor>:
    a688:	e8bd0007 	pop	{r0, r1, r2}
    a68c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a690:	e59f33a0 	ldr	r3, [pc, #928]	; aa38 <waitLoop+0x14>
    a694:	e5934000 	ldr	r4, [r3]
    a698:	e5935004 	ldr	r5, [r3, #4]
    a69c:	e5936008 	ldr	r6, [r3, #8]
    a6a0:	e283700c 	add	r7, r3, #12
    a6a4:	e0080195 	mul	r8, r5, r1
    a6a8:	e0888000 	add	r8, r8, r0
    a6ac:	e1a08108 	lsl	r8, r8, #2
    a6b0:	e7872008 	str	r2, [r7, r8]
    a6b4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a6b8:	e1a0f00e 	mov	pc, lr

0000a6bc <tetrisClearGridBlock>:
    a6bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a6c0:	e3a02000 	mov	r2, #0
    a6c4:	e92d0007 	push	{r0, r1, r2}
    a6c8:	ebffffee 	bl	a688 <tetrisSetGridBlockColor>
    a6cc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a6d0:	e1a0f00e 	mov	pc, lr

0000a6d4 <tetrisDrawGrid>:
    a6d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a6d8:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a6dc:	e59f7354 	ldr	r7, [pc, #852]	; aa38 <waitLoop+0x14>
    a6e0:	e5978000 	ldr	r8, [r7]
    a6e4:	e5979004 	ldr	r9, [r7, #4]
    a6e8:	e597a008 	ldr	sl, [r7, #8]
    a6ec:	e287b00c 	add	fp, r7, #12
    a6f0:	e3a04000 	mov	r4, #0
    a6f4:	e3a05000 	mov	r5, #0
    a6f8:	e3a06000 	mov	r6, #0

0000a6fc <for_curRow_lessThan_rows_loop>:
    a6fc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000a700 <for_curCol_lessThan_cols_loop>:
    a700:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a704:	e00c0599 	mul	ip, r9, r5
    a708:	e08cc004 	add	ip, ip, r4
    a70c:	e1a0c10c 	lsl	ip, ip, #2
    a710:	e79b600c 	ldr	r6, [fp, ip]
    a714:	e0000a94 	mul	r0, r4, sl
    a718:	e0010a95 	mul	r1, r5, sl
    a71c:	e28000c0 	add	r0, r0, #192	; 0xc0
    a720:	e2811050 	add	r1, r1, #80	; 0x50
    a724:	e24dd014 	sub	sp, sp, #20
    a728:	e58d0000 	str	r0, [sp]
    a72c:	e58d1004 	str	r1, [sp, #4]
    a730:	e58da008 	str	sl, [sp, #8]
    a734:	e58da00c 	str	sl, [sp, #12]
    a738:	e58d6010 	str	r6, [sp, #16]
    a73c:	eb0000a2 	bl	a9cc <drawRect>
    a740:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a744:	e2855001 	add	r5, r5, #1
    a748:	e1550009 	cmp	r5, r9
    a74c:	baffffeb 	blt	a700 <for_curCol_lessThan_cols_loop>
    a750:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    a754:	e2844001 	add	r4, r4, #1
    a758:	e1540008 	cmp	r4, r8
    a75c:	baffffe6 	blt	a6fc <for_curRow_lessThan_rows_loop>
    a760:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a764:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a768:	e1a0f00e 	mov	pc, lr

0000a76c <tetrisUpdateGridWithBlock>:
    a76c:	e1a0000d 	mov	r0, sp
    a770:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a774:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    a778:	e89007f0 	ldm	r0, {r4, r5, r6, r7, r8, r9, sl}
    a77c:	e1a04006 	mov	r4, r6
    a780:	e1a05007 	mov	r5, r7
    a784:	e5804000 	str	r4, [r0]
    a788:	e5805004 	str	r5, [r0, #4]
    a78c:	e92d1800 	push	{fp, ip}
    a790:	e3a0b000 	mov	fp, #0
    a794:	e3a0c000 	mov	ip, #0

0000a798 <for_i_lessThan_4_loop>:
    a798:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000a79c <for_j_lessThan_4_loop>:
    a79c:	e92d01c0 	push	{r6, r7, r8}
    a7a0:	e19920ba 	ldrh	r2, [r9, sl]
    a7a4:	e086600b 	add	r6, r6, fp
    a7a8:	e087700c 	add	r7, r7, ip
    a7ac:	e3a01004 	mov	r1, #4
    a7b0:	e0010c91 	mul	r1, r1, ip
    a7b4:	e081100b 	add	r1, r1, fp
    a7b8:	e1a02112 	lsl	r2, r2, r1
    a7bc:	e3a01902 	mov	r1, #32768	; 0x8000
    a7c0:	e0011002 	and	r1, r1, r2
    a7c4:	e3310000 	teq	r1, #0
    a7c8:	01a00006 	moveq	r0, r6
    a7cc:	01a01007 	moveq	r1, r7
    a7d0:	0bffffb9 	bleq	a6bc <tetrisClearGridBlock>
    a7d4:	192d01c0 	pushne	{r6, r7, r8}
    a7d8:	1bffffaa 	blne	a688 <tetrisSetGridBlockColor>
    a7dc:	e8bd01c0 	pop	{r6, r7, r8}
    a7e0:	e28cc001 	add	ip, ip, #1
    a7e4:	e35c0004 	cmp	ip, #4
    a7e8:	baffffeb 	blt	a79c <for_j_lessThan_4_loop>
    a7ec:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a7f0:	e28bb001 	add	fp, fp, #1
    a7f4:	e35b0004 	cmp	fp, #4
    a7f8:	baffffe6 	blt	a798 <for_i_lessThan_4_loop>
    a7fc:	e8bd1800 	pop	{fp, ip}
    a800:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    a804:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a808:	e1a0f00e 	mov	pc, lr

0000a80c <tetrisCreateNewBlock>:
    a80c:	e59f02c0 	ldr	r0, [pc, #704]	; aad4 <waitLoop+0xb0>
    a810:	e89007f0 	ldm	r0, {r4, r5, r6, r7, r8, r9, sl}

0000a814 <initializeTetrisBlock>:
    a814:	e3a04000 	mov	r4, #0
    a818:	e3a05000 	mov	r5, #0
    a81c:	e3a06000 	mov	r6, #0
    a820:	e3a07000 	mov	r7, #0
    a824:	e59f82ac 	ldr	r8, [pc, #684]	; aad8 <waitLoop+0xb4>
    a828:	e59f92ac 	ldr	r9, [pc, #684]	; aadc <waitLoop+0xb8>
    a82c:	e3a0a000 	mov	sl, #0

0000a830 <initializeTetrisBlockEnd>:
    a830:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    a834:	e1a0f00e 	mov	pc, lr

0000a838 <tetrisRotateBlock>:
    a838:	e89d07f0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl}
    a83c:	e3300000 	teq	r0, #0
    a840:	0a000000 	beq	a848 <rotateLeft>
    a844:	1a000004 	bne	a85c <rotateRight>

0000a848 <rotateLeft>:
    a848:	e28aa002 	add	sl, sl, #2
    a84c:	e35a0006 	cmp	sl, #6
    a850:	c3a0a000 	movgt	sl, #0
    a854:	e58da018 	str	sl, [sp, #24]
    a858:	ea000004 	b	a870 <tetrisRotateBlockEnd>

0000a85c <rotateRight>:
    a85c:	e24aa002 	sub	sl, sl, #2
    a860:	e35a0000 	cmp	sl, #0
    a864:	b3a0a006 	movlt	sl, #6
    a868:	e58da018 	str	sl, [sp, #24]
    a86c:	eaffffff 	b	a870 <tetrisRotateBlockEnd>

0000a870 <tetrisRotateBlockEnd>:
    a870:	e1a0f00e 	mov	pc, lr

0000a874 <tetrisTranslateBlock>:
    a874:	e1a0b00e 	mov	fp, lr
    a878:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    a87c:	e1a04006 	mov	r4, r6
    a880:	e1a05007 	mov	r5, r7
    a884:	e0866000 	add	r6, r6, r0
    a888:	e0877001 	add	r7, r7, r1
    a88c:	e58d4000 	str	r4, [sp]
    a890:	e58d5004 	str	r5, [sp, #4]
    a894:	e58d6008 	str	r6, [sp, #8]
    a898:	e58d700c 	str	r7, [sp, #12]
    a89c:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    a8a0:	e1a06004 	mov	r6, r4
    a8a4:	e1a07005 	mov	r7, r5
    a8a8:	e3a08000 	mov	r8, #0
    a8ac:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    a8b0:	ebffffad 	bl	a76c <tetrisUpdateGridWithBlock>
    a8b4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
    a8b8:	ebffffab 	bl	a76c <tetrisUpdateGridWithBlock>

0000a8bc <tetrisTranslateBlockEnd>:
    a8bc:	e1a0f00b 	mov	pc, fp

0000a8c0 <tetrisGetMaxBlockPosition>:
    a8c0:	e89d07f0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl}
    a8c4:	e92d1800 	push	{fp, ip}
    a8c8:	e3a0b001 	mov	fp, #1
    a8cc:	e3a0c001 	mov	ip, #1
    a8d0:	e1a00006 	mov	r0, r6
    a8d4:	e1a01007 	mov	r1, r7

0000a8d8 <for_i_lessThanEqual_4_loop>:
    a8d8:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000a8dc <for_j_lessThanEqual_4_loop>:
    a8dc:	e92d01c0 	push	{r6, r7, r8}
    a8e0:	e19930ba 	ldrh	r3, [r9, sl]
    a8e4:	e92d1800 	push	{fp, ip}
    a8e8:	e086600b 	add	r6, r6, fp
    a8ec:	e087700c 	add	r7, r7, ip
    a8f0:	e24bb001 	sub	fp, fp, #1
    a8f4:	e24cc001 	sub	ip, ip, #1
    a8f8:	e3a02004 	mov	r2, #4
    a8fc:	e0020c92 	mul	r2, r2, ip
    a900:	e082200b 	add	r2, r2, fp
    a904:	e1a03213 	lsl	r3, r3, r2
    a908:	e3a02902 	mov	r2, #32768	; 0x8000
    a90c:	e0022003 	and	r2, r2, r3
    a910:	e3320000 	teq	r2, #0
    a914:	0a000004 	beq	a92c <skip>
    a918:	e1500006 	cmp	r0, r6
    a91c:	b1a00006 	movlt	r0, r6
    a920:	e1510007 	cmp	r1, r7
    a924:	b1a01007 	movlt	r1, r7
    a928:	e320f000 	nop	{0}

0000a92c <skip>:
    a92c:	e8bd1800 	pop	{fp, ip}
    a930:	e8bd01c0 	pop	{r6, r7, r8}
    a934:	e28cc001 	add	ip, ip, #1
    a938:	e35c0004 	cmp	ip, #4
    a93c:	daffffe6 	ble	a8dc <for_j_lessThanEqual_4_loop>
    a940:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a944:	e28bb001 	add	fp, fp, #1
    a948:	e35b0004 	cmp	fp, #4
    a94c:	daffffe1 	ble	a8d8 <for_i_lessThanEqual_4_loop>
    a950:	e8bd1800 	pop	{fp, ip}

0000a954 <tetrisGetMaxBlockPositionEnd>:
    a954:	e1a0f00e 	mov	pc, lr

0000a958 <tetrisCheckBlockCollision>:
    a958:	e89d07f0 	ldm	sp, {r4, r5, r6, r7, r8, r9, sl}
    a95c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a960:	e357000b 	cmp	r7, #11
    a964:	a3a07000 	movge	r7, #0
    a968:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a96c:	e1a0f00e 	mov	pc, lr

0000a970 <clearScreen>:
    a970:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a974:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a978:	e3a04000 	mov	r4, #0
    a97c:	e3a05000 	mov	r5, #0
    a980:	e59f0124 	ldr	r0, [pc, #292]	; aaac <waitLoop+0x88>
    a984:	e5906014 	ldr	r6, [r0, #20]
    a988:	e5907018 	ldr	r7, [r0, #24]
    a98c:	e3a08000 	mov	r8, #0
    a990:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a994:	eb00000c 	bl	a9cc <drawRect>
    a998:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a99c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a9a0:	e1a0f00e 	mov	pc, lr

0000a9a4 <drawPixel>:
    a9a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a9a8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    a9ac:	e0804501 	add	r4, r0, r1, lsl #10
    a9b0:	e1a04084 	lsl	r4, r4, #1
    a9b4:	e59f0124 	ldr	r0, [pc, #292]	; aae0 <waitLoop+0xbc>
    a9b8:	e5900000 	ldr	r0, [r0]
    a9bc:	e18020b4 	strh	r2, [r0, r4]
    a9c0:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    a9c4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a9c8:	e1a0f00e 	mov	pc, lr

0000a9cc <drawRect>:
    a9cc:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a9d0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a9d4:	e0866004 	add	r6, r6, r4
    a9d8:	e0877005 	add	r7, r7, r5

0000a9dc <drawRectForLoopX>:
    a9dc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000a9e0 <drawRectForLoopY>:
    a9e0:	e1a00004 	mov	r0, r4
    a9e4:	e1a01005 	mov	r1, r5
    a9e8:	e1a02008 	mov	r2, r8
    a9ec:	ebffffec 	bl	a9a4 <drawPixel>
    a9f0:	e2855001 	add	r5, r5, #1
    a9f4:	e1550007 	cmp	r5, r7
    a9f8:	bafffff8 	blt	a9e0 <drawRectForLoopY>
    a9fc:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    aa00:	e2844001 	add	r4, r4, #1
    aa04:	e1540006 	cmp	r4, r6
    aa08:	bafffff3 	blt	a9dc <drawRectForLoopX>
    aa0c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    aa10:	e1a0f00e 	mov	pc, lr

0000aa14 <startTimer>:
    aa14:	e1a03000 	mov	r3, r0
    aa18:	e59f00c4 	ldr	r0, [pc, #196]	; aae4 <waitLoop+0xc0>
    aa1c:	e5901000 	ldr	r1, [r0]
    aa20:	e0811003 	add	r1, r1, r3

0000aa24 <waitLoop>:
    aa24:	e5902000 	ldr	r2, [r0]
    aa28:	e1510002 	cmp	r1, r2
    aa2c:	8afffffc 	bhi	aa24 <waitLoop>
    aa30:	e1a0f00e 	mov	pc, lr
    aa34:	00002710 	.word	0x00002710
    aa38:	00009080 	.word	0x00009080
    aa3c:	00009384 	.word	0x00009384
    aa40:	00009c40 	.word	0x00009c40
    aa44:	0000967f 	.word	0x0000967f
    aa48:	0000027a 	.word	0x0000027a
    aa4c:	000001b5 	.word	0x000001b5
    aa50:	00009c70 	.word	0x00009c70
    aa54:	000001e3 	.word	0x000001e3
    aa58:	00000221 	.word	0x00000221
    aa5c:	00009c60 	.word	0x00009c60
    aa60:	000001eb 	.word	0x000001eb
    aa64:	0000ffff 	.word	0x0000ffff
    aa68:	000001df 	.word	0x000001df
    aa6c:	00009c20 	.word	0x00009c20
    aa70:	000034a0 	.word	0x000034a0
    aa74:	00000269 	.word	0x00000269
    aa78:	00000297 	.word	0x00000297
    aa7c:	0000adb5 	.word	0x0000adb5
    aa80:	00000299 	.word	0x00000299
    aa84:	00009c44 	.word	0x00009c44
    aa88:	00000618 	.word	0x00000618
    aa8c:	0000023e 	.word	0x0000023e
    aa90:	0000024a 	.word	0x0000024a
    aa94:	00000212 	.word	0x00000212
    aa98:	00000286 	.word	0x00000286
    aa9c:	000002a6 	.word	0x000002a6
    aaa0:	00009c30 	.word	0x00009c30
    aaa4:	00000101 	.word	0x00000101
    aaa8:	00000243 	.word	0x00000243
    aaac:	00009c80 	.word	0x00009c80
    aab0:	0000297e 	.word	0x0000297e
    aab4:	00009be0 	.word	0x00009be0
    aab8:	00000172 	.word	0x00000172
    aabc:	00009c50 	.word	0x00009c50
    aac0:	000001e7 	.word	0x000001e7
    aac4:	00000247 	.word	0x00000247
    aac8:	00000285 	.word	0x00000285
    aacc:	00000d7f 	.word	0x00000d7f
    aad0:	000093e0 	.word	0x000093e0
    aad4:	00009384 	.word	0x00009384
    aad8:	001133ff 	.word	0x001133ff
    aadc:	000093b0 	.word	0x000093b0
    aae0:	00009ce0 	.word	0x00009ce0
    aae4:	3f003004 	.word	0x3f003004

0000aae8 <EnableJTAG>:
    aae8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    aaec:	e59f0064 	ldr	r0, [pc, #100]	; ab58 <dowaitloop+0xc>
    aaf0:	e0211001 	eor	r1, r1, r1
    aaf4:	e5801000 	str	r1, [r0]
    aaf8:	eb000012 	bl	ab48 <dowait>
    aafc:	e59f0058 	ldr	r0, [pc, #88]	; ab5c <dowaitloop+0x10>
    ab00:	e59f1058 	ldr	r1, [pc, #88]	; ab60 <dowaitloop+0x14>
    ab04:	e5801000 	str	r1, [r0]
    ab08:	eb00000e 	bl	ab48 <dowait>
    ab0c:	e0211001 	eor	r1, r1, r1
    ab10:	e5801000 	str	r1, [r0]
    ab14:	e59f0048 	ldr	r0, [pc, #72]	; ab64 <dowaitloop+0x18>
    ab18:	e5901000 	ldr	r1, [r0]
    ab1c:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    ab20:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    ab24:	e5801000 	str	r1, [r0]
    ab28:	e59f0038 	ldr	r0, [pc, #56]	; ab68 <dowaitloop+0x1c>
    ab2c:	e5901000 	ldr	r1, [r0]
    ab30:	e59f2034 	ldr	r2, [pc, #52]	; ab6c <dowaitloop+0x20>
    ab34:	e1c11002 	bic	r1, r1, r2
    ab38:	e59f2030 	ldr	r2, [pc, #48]	; ab70 <dowaitloop+0x24>
    ab3c:	e1811002 	orr	r1, r1, r2
    ab40:	e5801000 	str	r1, [r0]
    ab44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000ab48 <dowait>:
    ab48:	e3a02f4b 	mov	r2, #300	; 0x12c

0000ab4c <dowaitloop>:
    ab4c:	e2522001 	subs	r2, r2, #1
    ab50:	1afffffd 	bne	ab4c <dowaitloop>
    ab54:	e12fff1e 	bx	lr
    ab58:	3f200094 	.word	0x3f200094
    ab5c:	3f200098 	.word	0x3f200098
    ab60:	0bc00010 	.word	0x0bc00010
    ab64:	3f200000 	.word	0x3f200000
    ab68:	3f200008 	.word	0x3f200008
    ab6c:	00e3ffc0 	.word	0x00e3ffc0
    ab70:	0061b6c0 	.word	0x0061b6c0

0000ab74 <InitFrameBuffer>:
    ab74:	e59f2068 	ldr	r2, [pc, #104]	; abe4 <pointerWaitLoop$+0x1c>
    ab78:	e59f3068 	ldr	r3, [pc, #104]	; abe8 <pointerWaitLoop$+0x20>

0000ab7c <mBoxFullLoop$>:
    ab7c:	e5920018 	ldr	r0, [r2, #24]
    ab80:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    ab84:	1afffffc 	bne	ab7c <mBoxFullLoop$>
    ab88:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    ab8c:	e3800008 	orr	r0, r0, #8
    ab90:	e5820020 	str	r0, [r2, #32]

0000ab94 <mBoxEmptyLoop$>:
    ab94:	e5920018 	ldr	r0, [r2, #24]
    ab98:	e3100101 	tst	r0, #1073741824	; 0x40000000
    ab9c:	1afffffc 	bne	ab94 <mBoxEmptyLoop$>
    aba0:	e5920000 	ldr	r0, [r2]
    aba4:	e200100f 	and	r1, r0, #15
    aba8:	e3310008 	teq	r1, #8
    abac:	1afffff8 	bne	ab94 <mBoxEmptyLoop$>
    abb0:	e59f0030 	ldr	r0, [pc, #48]	; abe8 <pointerWaitLoop$+0x20>
    abb4:	e5901004 	ldr	r1, [r0, #4]
    abb8:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    abbc:	0a000001 	beq	abc8 <pointerWaitLoop$>
    abc0:	13a00000 	movne	r0, #0
    abc4:	112fff1e 	bxne	lr

0000abc8 <pointerWaitLoop$>:
    abc8:	e59f001c 	ldr	r0, [pc, #28]	; abec <pointerWaitLoop$+0x24>
    abcc:	e5900000 	ldr	r0, [r0]
    abd0:	e3300000 	teq	r0, #0
    abd4:	0afffffb 	beq	abc8 <pointerWaitLoop$>
    abd8:	e59f3010 	ldr	r3, [pc, #16]	; abf0 <pointerWaitLoop$+0x28>
    abdc:	e5830000 	str	r0, [r3]
    abe0:	e12fff1e 	bx	lr
    abe4:	3f00b880 	.word	0x3f00b880
    abe8:	00009c80 	.word	0x00009c80
    abec:	00009ccc 	.word	0x00009ccc
    abf0:	00009ce0 	.word	0x00009ce0

0000abf4 <drawPaused>:
    abf4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    abf8:	e3a00000 	mov	r0, #0
    abfc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac00:	e3a00096 	mov	r0, #150	; 0x96
    ac04:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac08:	e3a0001e 	mov	r0, #30
    ac0c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac10:	e3a0009a 	mov	r0, #154	; 0x9a
    ac14:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac18:	e3a000d5 	mov	r0, #213	; 0xd5
    ac1c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac20:	ebffff69 	bl	a9cc <drawRect>
    ac24:	e3a00000 	mov	r0, #0
    ac28:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac2c:	e3a0001e 	mov	r0, #30
    ac30:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac34:	e3a0003c 	mov	r0, #60	; 0x3c
    ac38:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac3c:	e3a0009a 	mov	r0, #154	; 0x9a
    ac40:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac44:	e3a000f3 	mov	r0, #243	; 0xf3
    ac48:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac4c:	ebffff5e 	bl	a9cc <drawRect>
    ac50:	e3a00000 	mov	r0, #0
    ac54:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac58:	e3a0001e 	mov	r0, #30
    ac5c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac60:	e3a0003c 	mov	r0, #60	; 0x3c
    ac64:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac68:	e3a000d6 	mov	r0, #214	; 0xd6
    ac6c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac70:	e3a000f3 	mov	r0, #243	; 0xf3
    ac74:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac78:	ebffff53 	bl	a9cc <drawRect>
    ac7c:	e3a00000 	mov	r0, #0
    ac80:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac84:	e3a0001e 	mov	r0, #30
    ac88:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac8c:	e3a0001e 	mov	r0, #30
    ac90:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac94:	e3a000b8 	mov	r0, #184	; 0xb8
    ac98:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ac9c:	e59f02f4 	ldr	r0, [pc, #756]	; af98 <drawPaused+0x3a4>
    aca0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aca4:	ebffff48 	bl	a9cc <drawRect>
    aca8:	e3a00000 	mov	r0, #0
    acac:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acb0:	e3a00078 	mov	r0, #120	; 0x78
    acb4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acb8:	e3a0001e 	mov	r0, #30
    acbc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acc0:	e3a000b8 	mov	r0, #184	; 0xb8
    acc4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acc8:	e59f02cc 	ldr	r0, [pc, #716]	; af9c <drawPaused+0x3a8>
    accc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acd0:	ebffff3d 	bl	a9cc <drawRect>
    acd4:	e3a00000 	mov	r0, #0
    acd8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acdc:	e3a00078 	mov	r0, #120	; 0x78
    ace0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ace4:	e3a0001e 	mov	r0, #30
    ace8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acec:	e3a000b8 	mov	r0, #184	; 0xb8
    acf0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acf4:	e59f02a4 	ldr	r0, [pc, #676]	; afa0 <drawPaused+0x3ac>
    acf8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acfc:	ebffff32 	bl	a9cc <drawRect>
    ad00:	e3a00000 	mov	r0, #0
    ad04:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad08:	e3a0001e 	mov	r0, #30
    ad0c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad10:	e3a0001e 	mov	r0, #30
    ad14:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad18:	e3a0009a 	mov	r0, #154	; 0x9a
    ad1c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad20:	e59f027c 	ldr	r0, [pc, #636]	; afa4 <drawPaused+0x3b0>
    ad24:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad28:	ebffff27 	bl	a9cc <drawRect>
    ad2c:	e3a00000 	mov	r0, #0
    ad30:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad34:	e3a0001e 	mov	r0, #30
    ad38:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad3c:	e3a0001e 	mov	r0, #30
    ad40:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad44:	e3a000d6 	mov	r0, #214	; 0xd6
    ad48:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad4c:	e59f0250 	ldr	r0, [pc, #592]	; afa4 <drawPaused+0x3b0>
    ad50:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad54:	ebffff1c 	bl	a9cc <drawRect>
    ad58:	e3a00000 	mov	r0, #0
    ad5c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad60:	e3a00078 	mov	r0, #120	; 0x78
    ad64:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad68:	e3a0001e 	mov	r0, #30
    ad6c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad70:	e3a0009a 	mov	r0, #154	; 0x9a
    ad74:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad78:	e59f0228 	ldr	r0, [pc, #552]	; afa8 <drawPaused+0x3b4>
    ad7c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad80:	ebffff11 	bl	a9cc <drawRect>
    ad84:	e3a00000 	mov	r0, #0
    ad88:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad8c:	e3a00078 	mov	r0, #120	; 0x78
    ad90:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad94:	e3a0001e 	mov	r0, #30
    ad98:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ad9c:	e3a0009a 	mov	r0, #154	; 0x9a
    ada0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ada4:	e59f0200 	ldr	r0, [pc, #512]	; afac <drawPaused+0x3b8>
    ada8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adac:	ebffff06 	bl	a9cc <drawRect>
    adb0:	e3a00000 	mov	r0, #0
    adb4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adb8:	e3a0001e 	mov	r0, #30
    adbc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adc0:	e3a0001e 	mov	r0, #30
    adc4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adc8:	e59f01e0 	ldr	r0, [pc, #480]	; afb0 <drawPaused+0x3bc>
    adcc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    add0:	e59f01dc 	ldr	r0, [pc, #476]	; afb4 <drawPaused+0x3c0>
    add4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    add8:	ebfffefb 	bl	a9cc <drawRect>
    addc:	e3a00000 	mov	r0, #0
    ade0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ade4:	e3a00096 	mov	r0, #150	; 0x96
    ade8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adec:	e3a0005a 	mov	r0, #90	; 0x5a
    adf0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adf4:	e3a0009a 	mov	r0, #154	; 0x9a
    adf8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    adfc:	e59f01b4 	ldr	r0, [pc, #436]	; afb8 <drawPaused+0x3c4>
    ae00:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae04:	ebfffef0 	bl	a9cc <drawRect>
    ae08:	e59f01ac 	ldr	r0, [pc, #428]	; afbc <drawPaused+0x3c8>
    ae0c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae10:	e3a0001e 	mov	r0, #30
    ae14:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae18:	e3a0003c 	mov	r0, #60	; 0x3c
    ae1c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae20:	e3a000f4 	mov	r0, #244	; 0xf4
    ae24:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae28:	e59f0188 	ldr	r0, [pc, #392]	; afb8 <drawPaused+0x3c4>
    ae2c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae30:	ebfffee5 	bl	a9cc <drawRect>
    ae34:	e59f0180 	ldr	r0, [pc, #384]	; afbc <drawPaused+0x3c8>
    ae38:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae3c:	e3a0001e 	mov	r0, #30
    ae40:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae44:	e3a0003c 	mov	r0, #60	; 0x3c
    ae48:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae4c:	e3a000b8 	mov	r0, #184	; 0xb8
    ae50:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae54:	e59f0164 	ldr	r0, [pc, #356]	; afc0 <drawPaused+0x3cc>
    ae58:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae5c:	ebfffeda 	bl	a9cc <drawRect>
    ae60:	e3a00000 	mov	r0, #0
    ae64:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae68:	e3a00096 	mov	r0, #150	; 0x96
    ae6c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae70:	e3a0005a 	mov	r0, #90	; 0x5a
    ae74:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae78:	e3a0009a 	mov	r0, #154	; 0x9a
    ae7c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae80:	e59f013c 	ldr	r0, [pc, #316]	; afc4 <drawPaused+0x3d0>
    ae84:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae88:	ebfffecf 	bl	a9cc <drawRect>
    ae8c:	e59f0128 	ldr	r0, [pc, #296]	; afbc <drawPaused+0x3c8>
    ae90:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae94:	e3a0001e 	mov	r0, #30
    ae98:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    ae9c:	e3a0003c 	mov	r0, #60	; 0x3c
    aea0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aea4:	e3a000f4 	mov	r0, #244	; 0xf4
    aea8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aeac:	e59f0114 	ldr	r0, [pc, #276]	; afc8 <drawPaused+0x3d4>
    aeb0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aeb4:	ebfffec4 	bl	a9cc <drawRect>
    aeb8:	e59f00fc 	ldr	r0, [pc, #252]	; afbc <drawPaused+0x3c8>
    aebc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aec0:	e3a0001e 	mov	r0, #30
    aec4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aec8:	e3a0003c 	mov	r0, #60	; 0x3c
    aecc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aed0:	e3a000b8 	mov	r0, #184	; 0xb8
    aed4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aed8:	e59f00e8 	ldr	r0, [pc, #232]	; afc8 <drawPaused+0x3d4>
    aedc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aee0:	ebfffeb9 	bl	a9cc <drawRect>
    aee4:	e3a00000 	mov	r0, #0
    aee8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aeec:	e3a00096 	mov	r0, #150	; 0x96
    aef0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aef4:	e3a0001e 	mov	r0, #30
    aef8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    aefc:	e3a0009a 	mov	r0, #154	; 0x9a
    af00:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af04:	e59f00c0 	ldr	r0, [pc, #192]	; afcc <drawPaused+0x3d8>
    af08:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af0c:	ebfffeae 	bl	a9cc <drawRect>
    af10:	e3a00000 	mov	r0, #0
    af14:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af18:	e3a0001e 	mov	r0, #30
    af1c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af20:	e3a0001e 	mov	r0, #30
    af24:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af28:	e3a0009a 	mov	r0, #154	; 0x9a
    af2c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af30:	e59f0098 	ldr	r0, [pc, #152]	; afd0 <drawPaused+0x3dc>
    af34:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af38:	ebfffea3 	bl	a9cc <drawRect>
    af3c:	e3a00000 	mov	r0, #0
    af40:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af44:	e3a0001e 	mov	r0, #30
    af48:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af4c:	e3a0001e 	mov	r0, #30
    af50:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af54:	e59f0054 	ldr	r0, [pc, #84]	; afb0 <drawPaused+0x3bc>
    af58:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af5c:	e59f006c 	ldr	r0, [pc, #108]	; afd0 <drawPaused+0x3dc>
    af60:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af64:	ebfffe98 	bl	a9cc <drawRect>
    af68:	e3a00000 	mov	r0, #0
    af6c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af70:	e3a0005a 	mov	r0, #90	; 0x5a
    af74:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af78:	e3a0001e 	mov	r0, #30
    af7c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af80:	e3a000b8 	mov	r0, #184	; 0xb8
    af84:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af88:	e59f0044 	ldr	r0, [pc, #68]	; afd4 <drawPaused+0x3e0>
    af8c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    af90:	ebfffe8d 	bl	a9cc <drawRect>
    af94:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    af98:	00000111 	.word	0x00000111
    af9c:	00000139 	.word	0x00000139
    afa0:	00000175 	.word	0x00000175
    afa4:	00000157 	.word	0x00000157
    afa8:	0000019d 	.word	0x0000019d
    afac:	000001d9 	.word	0x000001d9
    afb0:	00000112 	.word	0x00000112
    afb4:	000001bb 	.word	0x000001bb
    afb8:	00000201 	.word	0x00000201
    afbc:	0000967f 	.word	0x0000967f
    afc0:	0000021f 	.word	0x0000021f
    afc4:	00000265 	.word	0x00000265
    afc8:	00000283 	.word	0x00000283
    afcc:	000002c9 	.word	0x000002c9
    afd0:	000002e7 	.word	0x000002e7
    afd4:	00000305 	.word	0x00000305

0000afd8 <sampleSNES>:
    afd8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}

0000afdc <initSNES>:
    afdc:	e3a00001 	mov	r0, #1
    afe0:	eb000048 	bl	b108 <setCLOCKFunction>
    afe4:	e3a00001 	mov	r0, #1
    afe8:	eb00003d 	bl	b0e4 <setLATCHFunction>
    afec:	e3a00000 	mov	r0, #0
    aff0:	eb000034 	bl	b0c8 <setDATAFunction>

0000aff4 <startSamplingSNESButtons>:
    aff4:	e3a0000b 	mov	r0, #11
    aff8:	e3a01001 	mov	r1, #1
    affc:	eb000056 	bl	b15c <writeGPIO>
    b000:	e3a00009 	mov	r0, #9
    b004:	e3a01001 	mov	r1, #1
    b008:	eb000053 	bl	b15c <writeGPIO>
    b00c:	e3a0000c 	mov	r0, #12
    b010:	eb000019 	bl	b07c <startTimer>
    b014:	e3a00009 	mov	r0, #9
    b018:	e3a01000 	mov	r1, #0
    b01c:	eb00004e 	bl	b15c <writeGPIO>
    b020:	e3a08000 	mov	r8, #0
    b024:	e3a07000 	mov	r7, #0

0000b028 <pulseLoop>:
    b028:	e3a00006 	mov	r0, #6
    b02c:	eb000012 	bl	b07c <startTimer>
    b030:	e3a0000b 	mov	r0, #11
    b034:	e3a01000 	mov	r1, #0
    b038:	eb000047 	bl	b15c <writeGPIO>
    b03c:	e3a00006 	mov	r0, #6
    b040:	eb00000d 	bl	b07c <startTimer>
    b044:	e3a0000a 	mov	r0, #10
    b048:	e3a01000 	mov	r1, #0
    b04c:	eb000036 	bl	b12c <readGPIO>
    b050:	e1a00710 	lsl	r0, r0, r7
    b054:	e1888000 	orr	r8, r8, r0
    b058:	e3a0000b 	mov	r0, #11
    b05c:	e3a01001 	mov	r1, #1
    b060:	eb00003d 	bl	b15c <writeGPIO>
    b064:	e2877001 	add	r7, r7, #1
    b068:	e3570010 	cmp	r7, #16
    b06c:	baffffed 	blt	b028 <pulseLoop>

0000b070 <pulseLoopEnd>:
    b070:	e1a00008 	mov	r0, r8

0000b074 <mainEnd>:
    b074:	eaffffff 	b	b078 <killProgram>

0000b078 <killProgram>:
    b078:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000b07c <startTimer>:
    b07c:	e1a03000 	mov	r3, r0
    b080:	e59f0128 	ldr	r0, [pc, #296]	; b1b0 <newButtonPress+0x14>
    b084:	e5901000 	ldr	r1, [r0]
    b088:	e0811003 	add	r1, r1, r3

0000b08c <waitLoop>:
    b08c:	e5902000 	ldr	r2, [r0]
    b090:	e1510002 	cmp	r1, r2
    b094:	8afffffc 	bhi	b08c <waitLoop>
    b098:	e1a0f00e 	mov	pc, lr

0000b09c <setGPIOFunction>:
    b09c:	e59f3110 	ldr	r3, [pc, #272]	; b1b4 <newButtonPress+0x18>
    b0a0:	e3a04004 	mov	r4, #4
    b0a4:	e0000094 	mul	r0, r4, r0
    b0a8:	e7934000 	ldr	r4, [r3, r0]
    b0ac:	e3a05007 	mov	r5, #7
    b0b0:	e1a05215 	lsl	r5, r5, r2
    b0b4:	e1c33005 	bic	r3, r3, r5
    b0b8:	e1a01211 	lsl	r1, r1, r2
    b0bc:	e1844001 	orr	r4, r4, r1
    b0c0:	e7834000 	str	r4, [r3, r0]
    b0c4:	e1a0f00e 	mov	pc, lr

0000b0c8 <setDATAFunction>:
    b0c8:	e59f10e4 	ldr	r1, [pc, #228]	; b1b4 <newButtonPress+0x18>
    b0cc:	e5912004 	ldr	r2, [r1, #4]
    b0d0:	e3a03007 	mov	r3, #7
    b0d4:	e1c22003 	bic	r2, r2, r3
    b0d8:	e1822000 	orr	r2, r2, r0
    b0dc:	e5812004 	str	r2, [r1, #4]
    b0e0:	e1a0f00e 	mov	pc, lr

0000b0e4 <setLATCHFunction>:
    b0e4:	e59f10c8 	ldr	r1, [pc, #200]	; b1b4 <newButtonPress+0x18>
    b0e8:	e5912000 	ldr	r2, [r1]
    b0ec:	e3a03007 	mov	r3, #7
    b0f0:	e1a03d83 	lsl	r3, r3, #27
    b0f4:	e1c22003 	bic	r2, r2, r3
    b0f8:	e1a00d80 	lsl	r0, r0, #27
    b0fc:	e1822000 	orr	r2, r2, r0
    b100:	e5812000 	str	r2, [r1]
    b104:	e1a0f00e 	mov	pc, lr

0000b108 <setCLOCKFunction>:
    b108:	e59f10a4 	ldr	r1, [pc, #164]	; b1b4 <newButtonPress+0x18>
    b10c:	e5912004 	ldr	r2, [r1, #4]
    b110:	e3a03007 	mov	r3, #7
    b114:	e1a03183 	lsl	r3, r3, #3
    b118:	e1c22003 	bic	r2, r2, r3
    b11c:	e1a00180 	lsl	r0, r0, #3
    b120:	e1822000 	orr	r2, r2, r0
    b124:	e5812004 	str	r2, [r1, #4]
    b128:	e1a0f00e 	mov	pc, lr

0000b12c <readGPIO>:
    b12c:	e59f1080 	ldr	r1, [pc, #128]	; b1b4 <newButtonPress+0x18>
    b130:	e3500020 	cmp	r0, #32
    b134:	b5912034 	ldrlt	r2, [r1, #52]	; 0x34
    b138:	a5912038 	ldrge	r2, [r1, #56]	; 0x38
    b13c:	a2400020 	subge	r0, r0, #32
    b140:	e3a03001 	mov	r3, #1
    b144:	e1a03013 	lsl	r3, r3, r0
    b148:	e0022003 	and	r2, r2, r3
    b14c:	e3320000 	teq	r2, #0
    b150:	03a00000 	moveq	r0, #0
    b154:	13a00001 	movne	r0, #1
    b158:	e1a0f00e 	mov	pc, lr

0000b15c <writeGPIO>:
    b15c:	e3310000 	teq	r1, #0
    b160:	e59f104c 	ldr	r1, [pc, #76]	; b1b4 <newButtonPress+0x18>
    b164:	1281201c 	addne	r2, r1, #28
    b168:	02812028 	addeq	r2, r1, #40	; 0x28
    b16c:	e3500020 	cmp	r0, #32
    b170:	a2400020 	subge	r0, r0, #32
    b174:	e3a01001 	mov	r1, #1
    b178:	e1a01011 	lsl	r1, r1, r0
    b17c:	b5821000 	strlt	r1, [r2]
    b180:	a5821004 	strge	r1, [r2, #4]
    b184:	e1a0f00e 	mov	pc, lr

0000b188 <areAnySNESButtonsPressed>:
    b188:	e59f1028 	ldr	r1, [pc, #40]	; b1b8 <newButtonPress+0x1c>
    b18c:	e0411000 	sub	r1, r1, r0
    b190:	e1500009 	cmp	r0, r9
    b194:	1a000000 	bne	b19c <newButtonPress>
    b198:	e3a01000 	mov	r1, #0

0000b19c <newButtonPress>:
    b19c:	e3310000 	teq	r1, #0
    b1a0:	03a01000 	moveq	r1, #0
    b1a4:	13a01001 	movne	r1, #1
    b1a8:	e1a09000 	mov	r9, r0
    b1ac:	e1a0f00e 	mov	pc, lr
    b1b0:	3f003004 	.word	0x3f003004
    b1b4:	3f200000 	.word	0x3f200000
    b1b8:	0000ffff 	.word	0x0000ffff
