
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0006f5 	b	9bdc <main>

Disassembly of section .text:

00009ad0 <EnableJTAG>:
    9ad0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9ad4:	e59f0064 	ldr	r0, [pc, #100]	; 9b40 <dowaitloop+0xc>
    9ad8:	e0211001 	eor	r1, r1, r1
    9adc:	e5801000 	str	r1, [r0]
    9ae0:	eb000012 	bl	9b30 <dowait>
    9ae4:	e59f0058 	ldr	r0, [pc, #88]	; 9b44 <dowaitloop+0x10>
    9ae8:	e59f1058 	ldr	r1, [pc, #88]	; 9b48 <dowaitloop+0x14>
    9aec:	e5801000 	str	r1, [r0]
    9af0:	eb00000e 	bl	9b30 <dowait>
    9af4:	e0211001 	eor	r1, r1, r1
    9af8:	e5801000 	str	r1, [r0]
    9afc:	e59f0048 	ldr	r0, [pc, #72]	; 9b4c <dowaitloop+0x18>
    9b00:	e5901000 	ldr	r1, [r0]
    9b04:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    9b08:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9b0c:	e5801000 	str	r1, [r0]
    9b10:	e59f0038 	ldr	r0, [pc, #56]	; 9b50 <dowaitloop+0x1c>
    9b14:	e5901000 	ldr	r1, [r0]
    9b18:	e59f2034 	ldr	r2, [pc, #52]	; 9b54 <dowaitloop+0x20>
    9b1c:	e1c11002 	bic	r1, r1, r2
    9b20:	e59f2030 	ldr	r2, [pc, #48]	; 9b58 <dowaitloop+0x24>
    9b24:	e1811002 	orr	r1, r1, r2
    9b28:	e5801000 	str	r1, [r0]
    9b2c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009b30 <dowait>:
    9b30:	e3a02f4b 	mov	r2, #300	; 0x12c

00009b34 <dowaitloop>:
    9b34:	e2522001 	subs	r2, r2, #1
    9b38:	1afffffd 	bne	9b34 <dowaitloop>
    9b3c:	e12fff1e 	bx	lr
    9b40:	3f200094 	.word	0x3f200094
    9b44:	3f200098 	.word	0x3f200098
    9b48:	0bc00010 	.word	0x0bc00010
    9b4c:	3f200000 	.word	0x3f200000
    9b50:	3f200008 	.word	0x3f200008
    9b54:	00e3ffc0 	.word	0x00e3ffc0
    9b58:	0061b6c0 	.word	0x0061b6c0

00009b5c <InitFrameBuffer>:
    9b5c:	e59f2068 	ldr	r2, [pc, #104]	; 9bcc <pointerWaitLoop$+0x1c>
    9b60:	e59f3068 	ldr	r3, [pc, #104]	; 9bd0 <pointerWaitLoop$+0x20>

00009b64 <mBoxFullLoop$>:
    9b64:	e5920018 	ldr	r0, [r2, #24]
    9b68:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    9b6c:	1afffffc 	bne	9b64 <mBoxFullLoop$>
    9b70:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    9b74:	e3800008 	orr	r0, r0, #8
    9b78:	e5820020 	str	r0, [r2, #32]

00009b7c <mBoxEmptyLoop$>:
    9b7c:	e5920018 	ldr	r0, [r2, #24]
    9b80:	e3100101 	tst	r0, #1073741824	; 0x40000000
    9b84:	1afffffc 	bne	9b7c <mBoxEmptyLoop$>
    9b88:	e5920000 	ldr	r0, [r2]
    9b8c:	e200100f 	and	r1, r0, #15
    9b90:	e3310008 	teq	r1, #8
    9b94:	1afffff8 	bne	9b7c <mBoxEmptyLoop$>
    9b98:	e59f0030 	ldr	r0, [pc, #48]	; 9bd0 <pointerWaitLoop$+0x20>
    9b9c:	e5901004 	ldr	r1, [r0, #4]
    9ba0:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    9ba4:	0a000001 	beq	9bb0 <pointerWaitLoop$>
    9ba8:	13a00000 	movne	r0, #0
    9bac:	112fff1e 	bxne	lr

00009bb0 <pointerWaitLoop$>:
    9bb0:	e59f001c 	ldr	r0, [pc, #28]	; 9bd4 <pointerWaitLoop$+0x24>
    9bb4:	e5900000 	ldr	r0, [r0]
    9bb8:	e3300000 	teq	r0, #0
    9bbc:	0afffffb 	beq	9bb0 <pointerWaitLoop$>
    9bc0:	e59f3010 	ldr	r3, [pc, #16]	; 9bd8 <pointerWaitLoop$+0x28>
    9bc4:	e5830000 	str	r0, [r3]
    9bc8:	e12fff1e 	bx	lr
    9bcc:	3f00b880 	.word	0x3f00b880
    9bd0:	00009080 	.word	0x00009080
    9bd4:	000090cc 	.word	0x000090cc
    9bd8:	000090e0 	.word	0x000090e0

00009bdc <main>:
    9bdc:	e3a0d902 	mov	sp, #32768	; 0x8000
    9be0:	ebffffba 	bl	9ad0 <EnableJTAG>
    9be4:	ebffffdc 	bl	9b5c <InitFrameBuffer>
    9be8:	e59f0394 	ldr	r0, [pc, #916]	; 9f84 <waitLoop+0x10>
    9bec:	e280000c 	add	r0, r0, #12
    9bf0:	e59f1390 	ldr	r1, [pc, #912]	; 9f88 <waitLoop+0x14>

00009bf4 <looop>:
    9bf4:	e3a02000 	mov	r2, #0
    9bf8:	e5802000 	str	r2, [r0]
    9bfc:	e2800004 	add	r0, r0, #4
    9c00:	e0412000 	sub	r2, r1, r0
    9c04:	e3520000 	cmp	r2, #0
    9c08:	cafffff9 	bgt	9bf4 <looop>
    9c0c:	e59f0370 	ldr	r0, [pc, #880]	; 9f84 <waitLoop+0x10>
    9c10:	e280000c 	add	r0, r0, #12
    9c14:	e59f2370 	ldr	r2, [pc, #880]	; 9f8c <waitLoop+0x18>
    9c18:	e580203c 	str	r2, [r0, #60]	; 0x3c
    9c1c:	e5802040 	str	r2, [r0, #64]	; 0x40
    9c20:	e5802044 	str	r2, [r0, #68]	; 0x44
    9c24:	e58020b4 	str	r2, [r0, #180]	; 0xb4
    9c28:	e59f0360 	ldr	r0, [pc, #864]	; 9f90 <waitLoop+0x1c>
    9c2c:	e5909014 	ldr	r9, [r0, #20]
    9c30:	e590a018 	ldr	sl, [r0, #24]
    9c34:	e1a0000d 	mov	r0, sp
    9c38:	e24dd014 	sub	sp, sp, #20
    9c3c:	e3a01000 	mov	r1, #0
    9c40:	e58d1000 	str	r1, [sp]
    9c44:	e3a01000 	mov	r1, #0
    9c48:	e58d1004 	str	r1, [sp, #4]
    9c4c:	e58d9008 	str	r9, [sp, #8]
    9c50:	e58da00c 	str	sl, [sp, #12]
    9c54:	e3a02000 	mov	r2, #0
    9c58:	e58d2010 	str	r2, [sp, #16]
    9c5c:	eb0000aa 	bl	9f0c <drawRect>
    9c60:	e28dd014 	add	sp, sp, #20

00009c64 <mainLoop>:
    9c64:	e59f0328 	ldr	r0, [pc, #808]	; 9f94 <waitLoop+0x20>
    9c68:	e5901000 	ldr	r1, [r0]
    9c6c:	e5902004 	ldr	r2, [r0, #4]
    9c70:	e5903008 	ldr	r3, [r0, #8]
    9c74:	e590400c 	ldr	r4, [r0, #12]
    9c78:	e5905010 	ldr	r5, [r0, #16]
    9c7c:	e5906014 	ldr	r6, [r0, #20]
    9c80:	e5907018 	ldr	r7, [r0, #24]
    9c84:	e92d00ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7}
    9c88:	e5801008 	str	r1, [r0, #8]
    9c8c:	e580200c 	str	r2, [r0, #12]
    9c90:	e3a05000 	mov	r5, #0
    9c94:	e5805010 	str	r5, [r0, #16]
    9c98:	e8bd00ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
    9c9c:	eb00003f 	bl	9da0 <tetrisUpdateGridWithCurrentBlock>
    9ca0:	e5803008 	str	r3, [r0, #8]
    9ca4:	e580400c 	str	r4, [r0, #12]
    9ca8:	e5805010 	str	r5, [r0, #16]
    9cac:	eb00003b 	bl	9da0 <tetrisUpdateGridWithCurrentBlock>
    9cb0:	eb000080 	bl	9eb8 <tetrisRotateBlockTest2>
    9cb4:	eb000013 	bl	9d08 <drawTetrisGrid>
    9cb8:	e3a000ff 	mov	r0, #255	; 0xff
    9cbc:	eb0000a8 	bl	9f64 <startTimer>
    9cc0:	eaffffe7 	b	9c64 <mainLoop>

00009cc4 <mainEnd>:
    9cc4:	eafffffe 	b	9cc4 <mainEnd>

00009cc8 <tetrisSetGridBlockColor>:
    9cc8:	e59d0000 	ldr	r0, [sp]
    9ccc:	e59d1004 	ldr	r1, [sp, #4]
    9cd0:	e59d2008 	ldr	r2, [sp, #8]
    9cd4:	e28dd00c 	add	sp, sp, #12
    9cd8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9cdc:	e92d0070 	push	{r4, r5, r6}
    9ce0:	e59f429c 	ldr	r4, [pc, #668]	; 9f84 <waitLoop+0x10>
    9ce4:	e5945008 	ldr	r5, [r4, #8]
    9ce8:	e284400c 	add	r4, r4, #12
    9cec:	e0060195 	mul	r6, r5, r1
    9cf0:	e0866000 	add	r6, r6, r0
    9cf4:	e1a06106 	lsl	r6, r6, #2
    9cf8:	e7842006 	str	r2, [r4, r6]
    9cfc:	e8bd0070 	pop	{r4, r5, r6}
    9d00:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9d04:	e1a0f00e 	mov	pc, lr

00009d08 <drawTetrisGrid>:
    9d08:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9d0c:	e92d007f 	push	{r0, r1, r2, r3, r4, r5, r6}
    9d10:	e59f026c 	ldr	r0, [pc, #620]	; 9f84 <waitLoop+0x10>
    9d14:	e5901000 	ldr	r1, [r0]
    9d18:	e5902004 	ldr	r2, [r0, #4]
    9d1c:	e5903008 	ldr	r3, [r0, #8]
    9d20:	e280600c 	add	r6, r0, #12
    9d24:	e3a04000 	mov	r4, #0
    9d28:	e3a05000 	mov	r5, #0

00009d2c <for_curRow_lessThan_rows_loop>:
    9d2c:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

00009d30 <for_curCol_lessThan_cols_loop>:
    9d30:	e92d007e 	push	{r1, r2, r3, r4, r5, r6}
    9d34:	e24dd014 	sub	sp, sp, #20
    9d38:	e1a00004 	mov	r0, r4
    9d3c:	e0000093 	mul	r0, r3, r0
    9d40:	e58d0000 	str	r0, [sp]
    9d44:	e1a00005 	mov	r0, r5
    9d48:	e0000093 	mul	r0, r3, r0
    9d4c:	e58d0004 	str	r0, [sp, #4]
    9d50:	e58d3008 	str	r3, [sp, #8]
    9d54:	e58d300c 	str	r3, [sp, #12]
    9d58:	e0010591 	mul	r1, r1, r5
    9d5c:	e0811004 	add	r1, r1, r4
    9d60:	e1a01101 	lsl	r1, r1, #2
    9d64:	e7960001 	ldr	r0, [r6, r1]
    9d68:	e58d0010 	str	r0, [sp, #16]
    9d6c:	eb000066 	bl	9f0c <drawRect>
    9d70:	e28dd014 	add	sp, sp, #20
    9d74:	e8bd007e 	pop	{r1, r2, r3, r4, r5, r6}
    9d78:	e2855001 	add	r5, r5, #1
    9d7c:	e1550002 	cmp	r5, r2
    9d80:	baffffea 	blt	9d30 <for_curCol_lessThan_cols_loop>
    9d84:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    9d88:	e2844001 	add	r4, r4, #1
    9d8c:	e1540001 	cmp	r4, r1
    9d90:	baffffe5 	blt	9d2c <for_curRow_lessThan_rows_loop>
    9d94:	e8bd007f 	pop	{r0, r1, r2, r3, r4, r5, r6}
    9d98:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9d9c:	e1a0f00e 	mov	pc, lr

00009da0 <tetrisUpdateGridWithCurrentBlock>:
    9da0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9da4:	e92d1fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9da8:	e59f01e4 	ldr	r0, [pc, #484]	; 9f94 <waitLoop+0x20>
    9dac:	e5901000 	ldr	r1, [r0]
    9db0:	e5902004 	ldr	r2, [r0, #4]
    9db4:	e5903008 	ldr	r3, [r0, #8]
    9db8:	e590400c 	ldr	r4, [r0, #12]
    9dbc:	e5905010 	ldr	r5, [r0, #16]
    9dc0:	e5906014 	ldr	r6, [r0, #20]
    9dc4:	e5907018 	ldr	r7, [r0, #24]
    9dc8:	e3360000 	teq	r6, #0
    9dcc:	0a000000 	beq	9dd4 <initializeBlock>
    9dd0:	1a000005 	bne	9dec <initializeBlockEnd>

00009dd4 <initializeBlock>:
    9dd4:	e3a03000 	mov	r3, #0
    9dd8:	e3a04000 	mov	r4, #0
    9ddc:	e59f61b4 	ldr	r6, [pc, #436]	; 9f98 <waitLoop+0x24>
    9de0:	e5806014 	str	r6, [r0, #20]
    9de4:	e3a07000 	mov	r7, #0
    9de8:	e5807018 	str	r7, [r0, #24]

00009dec <initializeBlockEnd>:
    9dec:	e1a01003 	mov	r1, r3
    9df0:	e1a02004 	mov	r2, r4
    9df4:	e5801000 	str	r1, [r0]
    9df8:	e5802004 	str	r2, [r0, #4]
    9dfc:	e19680b7 	ldrh	r8, [r6, r7]
    9e00:	e3a09000 	mov	r9, #0
    9e04:	e3a0a000 	mov	sl, #0

00009e08 <for_i_lessThan_4_loop>:
    9e08:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)

00009e0c <for_j_lessThan_4_loop>:
    9e0c:	e92d0138 	push	{r3, r4, r5, r8}
    9e10:	e0833009 	add	r3, r3, r9
    9e14:	e084400a 	add	r4, r4, sl
    9e18:	e3a0c004 	mov	ip, #4
    9e1c:	e00c0a9c 	mul	ip, ip, sl
    9e20:	e08cc009 	add	ip, ip, r9
    9e24:	e1a08c18 	lsl	r8, r8, ip
    9e28:	e3a0c902 	mov	ip, #32768	; 0x8000
    9e2c:	e00cc008 	and	ip, ip, r8
    9e30:	e33c0000 	teq	ip, #0
    9e34:	13a0c001 	movne	ip, #1
    9e38:	03a05000 	moveq	r5, #0
    9e3c:	e24dd00c 	sub	sp, sp, #12
    9e40:	e58d3000 	str	r3, [sp]
    9e44:	e58d4004 	str	r4, [sp, #4]
    9e48:	e58d5008 	str	r5, [sp, #8]
    9e4c:	ebffff9d 	bl	9cc8 <tetrisSetGridBlockColor>
    9e50:	e8bd0138 	pop	{r3, r4, r5, r8}
    9e54:	e28aa001 	add	sl, sl, #1
    9e58:	e35a0004 	cmp	sl, #4
    9e5c:	baffffea 	blt	9e0c <for_j_lessThan_4_loop>
    9e60:	e49da004 	pop	{sl}		; (ldr sl, [sp], #4)
    9e64:	e2899001 	add	r9, r9, #1
    9e68:	e3590004 	cmp	r9, #4
    9e6c:	baffffe5 	blt	9e08 <for_i_lessThan_4_loop>
    9e70:	e8bd1fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9e74:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9e78:	e1a0f00e 	mov	pc, lr

00009e7c <tetrisRotateBlockTest>:
    9e7c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9e80:	e92d003f 	push	{r0, r1, r2, r3, r4, r5}
    9e84:	e59f0110 	ldr	r0, [pc, #272]	; 9f9c <waitLoop+0x28>
    9e88:	e1d001b4 	ldrh	r0, [r0, #20]
    9e8c:	e3a0100f 	mov	r1, #15
    9e90:	e0015000 	and	r5, r1, r0
    9e94:	e1a00220 	lsr	r0, r0, #4
    9e98:	e0014000 	and	r4, r1, r0
    9e9c:	e1a00220 	lsr	r0, r0, #4
    9ea0:	e0013000 	and	r3, r1, r0
    9ea4:	e1a00220 	lsr	r0, r0, #4
    9ea8:	e0012000 	and	r2, r1, r0
    9eac:	e8bd003f 	pop	{r0, r1, r2, r3, r4, r5}
    9eb0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9eb4:	e1a0f00e 	mov	pc, lr

00009eb8 <tetrisRotateBlockTest2>:
    9eb8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9ebc:	e92d0007 	push	{r0, r1, r2}
    9ec0:	e59f00cc 	ldr	r0, [pc, #204]	; 9f94 <waitLoop+0x20>
    9ec4:	e5902018 	ldr	r2, [r0, #24]
    9ec8:	e2822002 	add	r2, r2, #2
    9ecc:	e3520006 	cmp	r2, #6
    9ed0:	c3a02000 	movgt	r2, #0
    9ed4:	e5802018 	str	r2, [r0, #24]
    9ed8:	e8bd0007 	pop	{r0, r1, r2}
    9edc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9ee0:	e1a0f00e 	mov	pc, lr

00009ee4 <drawPixel>:
    9ee4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9ee8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    9eec:	e0804501 	add	r4, r0, r1, lsl #10
    9ef0:	e1a04084 	lsl	r4, r4, #1
    9ef4:	e59f00a4 	ldr	r0, [pc, #164]	; 9fa0 <waitLoop+0x2c>
    9ef8:	e5900000 	ldr	r0, [r0]
    9efc:	e18020b4 	strh	r2, [r0, r4]
    9f00:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    9f04:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9f08:	e1a0f00e 	mov	pc, lr

00009f0c <drawRect>:
    9f0c:	e59d3000 	ldr	r3, [sp]
    9f10:	e59d4004 	ldr	r4, [sp, #4]
    9f14:	e59d5008 	ldr	r5, [sp, #8]
    9f18:	e59d600c 	ldr	r6, [sp, #12]
    9f1c:	e59d7010 	ldr	r7, [sp, #16]
    9f20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9f24:	e0855003 	add	r5, r5, r3
    9f28:	e0866004 	add	r6, r6, r4

00009f2c <drawRectForLoopX>:
    9f2c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)

00009f30 <drawRectForLoopY>:
    9f30:	e1a00003 	mov	r0, r3
    9f34:	e1a01004 	mov	r1, r4
    9f38:	e1a02007 	mov	r2, r7
    9f3c:	ebffffe8 	bl	9ee4 <drawPixel>
    9f40:	e2844001 	add	r4, r4, #1
    9f44:	e1540006 	cmp	r4, r6
    9f48:	bafffff8 	blt	9f30 <drawRectForLoopY>
    9f4c:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    9f50:	e2833001 	add	r3, r3, #1
    9f54:	e1530005 	cmp	r3, r5
    9f58:	bafffff3 	blt	9f2c <drawRectForLoopX>
    9f5c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9f60:	e1a0f00e 	mov	pc, lr

00009f64 <startTimer>:
    9f64:	e1a03000 	mov	r3, r0
    9f68:	e59f0034 	ldr	r0, [pc, #52]	; 9fa4 <waitLoop+0x30>
    9f6c:	e5901000 	ldr	r1, [r0]
    9f70:	e0811003 	add	r1, r1, r3

00009f74 <waitLoop>:
    9f74:	e5902000 	ldr	r2, [r0]
    9f78:	e1510002 	cmp	r1, r2
    9f7c:	8afffffc 	bhi	9f74 <waitLoop>
    9f80:	e1a0f00e 	mov	pc, lr
    9f84:	000090f0 	.word	0x000090f0
    9f88:	00009a5c 	.word	0x00009a5c
    9f8c:	00ffabcc 	.word	0x00ffabcc
    9f90:	00009080 	.word	0x00009080
    9f94:	00009a80 	.word	0x00009a80
    9f98:	00009ac0 	.word	0x00009ac0
    9f9c:	00009a60 	.word	0x00009a60
    9fa0:	000090e0 	.word	0x000090e0
    9fa4:	3f003004 	.word	0x3f003004
