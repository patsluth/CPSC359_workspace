
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00073e 	b	9d00 <main>

Disassembly of section .text:

00009d00 <main>:
    9d00:	e3a0d902 	mov	sp, #32768	; 0x8000
    9d04:	eb0002f1 	bl	a8d0 <EnableJTAG>
    9d08:	eb000313 	bl	a95c <InitFrameBuffer>

00009d0c <MainMenu>:
    9d0c:	eb000109 	bl	a138 <ClearScreenBlack>
    9d10:	eb0003e1 	bl	ac9c <drawMainMenu>
    9d14:	e3a09000 	mov	r9, #0

00009d18 <MainMenuPrompt>:
    9d18:	e59f0afc 	ldr	r0, [pc, #2812]	; a81c <waitLoop+0x10>
    9d1c:	eb0002b6 	bl	a7fc <startTimer>
    9d20:	eb00032d 	bl	a9dc <sampleSNES>
    9d24:	e1a0a000 	mov	sl, r0
    9d28:	e3e01c01 	mvn	r1, #256	; 0x100
    9d2c:	e1c00001 	bic	r0, r0, r1
    9d30:	e3500000 	cmp	r0, #0
    9d34:	0a00000a 	beq	9d64 <MainMenuAPressed>
    9d38:	e1a0000a 	mov	r0, sl
    9d3c:	e3e01010 	mvn	r1, #16
    9d40:	e1c00001 	bic	r0, r0, r1
    9d44:	e3500000 	cmp	r0, #0
    9d48:	0a000009 	beq	9d74 <MainMenuUpPressed>
    9d4c:	e1a0000a 	mov	r0, sl
    9d50:	e3e01020 	mvn	r1, #32
    9d54:	e1c00001 	bic	r0, r0, r1
    9d58:	e3500000 	cmp	r0, #0
    9d5c:	0a00000b 	beq	9d90 <MainMenuDownPressed>
    9d60:	eaffffec 	b	9d18 <MainMenuPrompt>

00009d64 <MainMenuAPressed>:
    9d64:	e3590000 	cmp	r9, #0
    9d68:	0a00000f 	beq	9dac <StartGame>
    9d6c:	eb0000f1 	bl	a138 <ClearScreenBlack>
    9d70:	ea00001f 	b	9df4 <mainEnd>

00009d74 <MainMenuUpPressed>:
    9d74:	e3590000 	cmp	r9, #0
    9d78:	0affffe6 	beq	9d18 <MainMenuPrompt>
    9d7c:	e3a09000 	mov	r9, #0
    9d80:	eb000428 	bl	ae28 <setMainMenuIndicatorStart>
    9d84:	e3a00801 	mov	r0, #65536	; 0x10000
    9d88:	eb00029b 	bl	a7fc <startTimer>
    9d8c:	eaffffe1 	b	9d18 <MainMenuPrompt>

00009d90 <MainMenuDownPressed>:
    9d90:	e3590001 	cmp	r9, #1
    9d94:	0affffdf 	beq	9d18 <MainMenuPrompt>
    9d98:	e3a09001 	mov	r9, #1
    9d9c:	eb000431 	bl	ae68 <setMainMenuIndicatorQuit>
    9da0:	e3a00801 	mov	r0, #65536	; 0x10000
    9da4:	eb000294 	bl	a7fc <startTimer>
    9da8:	eaffffda 	b	9d18 <MainMenuPrompt>

00009dac <StartGame>:
    9dac:	eb00030a 	bl	a9dc <sampleSNES>
    9db0:	eb0000ed 	bl	a16c <tetrisInitGrid>
    9db4:	eb000041 	bl	9ec0 <DrawBoard>
    9db8:	eb00000e 	bl	9df8 <PauseMenuStart>
    9dbc:	eb0001b7 	bl	a4a0 <tetrisCreateNewBlock>

00009dc0 <mainLoop>:
    9dc0:	eb000148 	bl	a2e8 <tetrisDrawGrid>
    9dc4:	eb000187 	bl	a3e8 <tetrisDrawBlock>

00009dc8 <applyUserTranslation>:
    9dc8:	e3a00001 	mov	r0, #1
    9dcc:	e3a01000 	mov	r1, #0
    9dd0:	eb000234 	bl	a6a8 <tetrisTranslateBlock>

00009dd4 <applyGravityTranslation>:
    9dd4:	e3a00000 	mov	r0, #0
    9dd8:	e3a01001 	mov	r1, #1
    9ddc:	eb000231 	bl	a6a8 <tetrisTranslateBlock>

00009de0 <applyUserRotation>:
    9de0:	e3a00000 	mov	r0, #0
    9de4:	eb000210 	bl	a62c <tetrisRotateBlock>
    9de8:	e59f0a30 	ldr	r0, [pc, #2608]	; a820 <waitLoop+0x14>
    9dec:	eb000282 	bl	a7fc <startTimer>
    9df0:	eafffff2 	b	9dc0 <mainLoop>

00009df4 <mainEnd>:
    9df4:	eafffffe 	b	9df4 <mainEnd>

00009df8 <PauseMenuStart>:
    9df8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9dfc:	eb00036f 	bl	abc0 <drawPauseMenu>
    9e00:	e3a09000 	mov	r9, #0

00009e04 <PauseMenuPrompt>:
    9e04:	e59f0a10 	ldr	r0, [pc, #2576]	; a81c <waitLoop+0x10>
    9e08:	eb00027b 	bl	a7fc <startTimer>
    9e0c:	eb0002f2 	bl	a9dc <sampleSNES>
    9e10:	e1a0a000 	mov	sl, r0
    9e14:	e3e01008 	mvn	r1, #8
    9e18:	e1c00001 	bic	r0, r0, r1
    9e1c:	e3500000 	cmp	r0, #0
    9e20:	0a00000f 	beq	9e64 <PauseMenuStartPressed>
    9e24:	e1a0000a 	mov	r0, sl
    9e28:	e3e01c01 	mvn	r1, #256	; 0x100
    9e2c:	e1c00001 	bic	r0, r0, r1
    9e30:	e3500000 	cmp	r0, #0
    9e34:	0a00000c 	beq	9e6c <PauseMenuAPressed>
    9e38:	e1a0000a 	mov	r0, sl
    9e3c:	e3e01010 	mvn	r1, #16
    9e40:	e1c00001 	bic	r0, r0, r1
    9e44:	e3500000 	cmp	r0, #0
    9e48:	0a00000d 	beq	9e84 <PauseMenuUpPressed>
    9e4c:	e1a0000a 	mov	r0, sl
    9e50:	e3e01020 	mvn	r1, #32
    9e54:	e1c00001 	bic	r0, r0, r1
    9e58:	e3500000 	cmp	r0, #0
    9e5c:	0a00000f 	beq	9ea0 <PauseMenuDownPressed>
    9e60:	eaffffe7 	b	9e04 <PauseMenuPrompt>

00009e64 <PauseMenuStartPressed>:
    9e64:	eb000015 	bl	9ec0 <DrawBoard>
    9e68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009e6c <PauseMenuAPressed>:
    9e6c:	e3590000 	cmp	r9, #0
    9e70:	e3a01000 	mov	r1, #0
    9e74:	e59f09a8 	ldr	r0, [pc, #2472]	; a824 <waitLoop+0x18>
    9e78:	e5801000 	str	r1, [r0]
    9e7c:	0affffca 	beq	9dac <StartGame>
    9e80:	eaffffa1 	b	9d0c <MainMenu>

00009e84 <PauseMenuUpPressed>:
    9e84:	e3590000 	cmp	r9, #0
    9e88:	0affffdd 	beq	9e04 <PauseMenuPrompt>
    9e8c:	e3a09000 	mov	r9, #0
    9e90:	eb0003c4 	bl	ada8 <setPauseMenuIndicatorRestart>
    9e94:	e3a00801 	mov	r0, #65536	; 0x10000
    9e98:	eb000257 	bl	a7fc <startTimer>
    9e9c:	eaffffd8 	b	9e04 <PauseMenuPrompt>

00009ea0 <PauseMenuDownPressed>:
    9ea0:	e3590001 	cmp	r9, #1
    9ea4:	0affffd6 	beq	9e04 <PauseMenuPrompt>
    9ea8:	e3a09001 	mov	r9, #1
    9eac:	eb0003cd 	bl	ade8 <setPauseMenuIndicatorQuit>
    9eb0:	e3a00801 	mov	r0, #65536	; 0x10000
    9eb4:	eb000250 	bl	a7fc <startTimer>
    9eb8:	eaffffd1 	b	9e04 <PauseMenuPrompt>
    9ebc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009ec0 <DrawBoard>:
    9ec0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9ec4:	eb00009b 	bl	a138 <ClearScreenBlack>
    9ec8:	e3a00a0e 	mov	r0, #57344	; 0xe000
    9ecc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ed0:	e3a00004 	mov	r0, #4
    9ed4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ed8:	e3a00fa2 	mov	r0, #648	; 0x288
    9edc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ee0:	e3a0004c 	mov	r0, #76	; 0x4c
    9ee4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ee8:	e3a000bc 	mov	r0, #188	; 0xbc
    9eec:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ef0:	eb000226 	bl	a790 <drawRect>
    9ef4:	e3a00a0e 	mov	r0, #57344	; 0xe000
    9ef8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9efc:	e3a00004 	mov	r0, #4
    9f00:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f04:	e3a00fa2 	mov	r0, #648	; 0x288
    9f08:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f0c:	e3a00e2b 	mov	r0, #688	; 0x2b0
    9f10:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f14:	e3a000bc 	mov	r0, #188	; 0xbc
    9f18:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f1c:	eb00021b 	bl	a790 <drawRect>
    9f20:	e3a00a0e 	mov	r0, #57344	; 0xe000
    9f24:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f28:	e3a00e26 	mov	r0, #608	; 0x260
    9f2c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f30:	e3a00004 	mov	r0, #4
    9f34:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f38:	e3a00050 	mov	r0, #80	; 0x50
    9f3c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f40:	e3a000bc 	mov	r0, #188	; 0xbc
    9f44:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f48:	eb000210 	bl	a790 <drawRect>
    9f4c:	e3a00a0e 	mov	r0, #57344	; 0xe000
    9f50:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f54:	e3a00e26 	mov	r0, #608	; 0x260
    9f58:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f5c:	e3a00004 	mov	r0, #4
    9f60:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f64:	e3a00050 	mov	r0, #80	; 0x50
    9f68:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f6c:	e3a00c02 	mov	r0, #512	; 0x200
    9f70:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f74:	eb000205 	bl	a790 <drawRect>
    9f78:	e3a00a0e 	mov	r0, #57344	; 0xe000
    9f7c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f80:	e3a00e26 	mov	r0, #608	; 0x260
    9f84:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f88:	e3a00004 	mov	r0, #4
    9f8c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f90:	e3a00050 	mov	r0, #80	; 0x50
    9f94:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9f98:	e3a00d0d 	mov	r0, #832	; 0x340
    9f9c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fa0:	eb0001fa 	bl	a790 <drawRect>
    9fa4:	e59f087c 	ldr	r0, [pc, #2172]	; a828 <waitLoop+0x1c>
    9fa8:	e59f187c 	ldr	r1, [pc, #2172]	; a82c <waitLoop+0x20>
    9fac:	e59f287c 	ldr	r2, [pc, #2172]	; a830 <waitLoop+0x24>
    9fb0:	e3a030e6 	mov	r3, #230	; 0xe6
    9fb4:	eb00036a 	bl	ad64 <WriteSentence>
    9fb8:	e59f086c 	ldr	r0, [pc, #2156]	; a82c <waitLoop+0x20>
    9fbc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fc0:	e3a00036 	mov	r0, #54	; 0x36
    9fc4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fc8:	e3a00036 	mov	r0, #54	; 0x36
    9fcc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fd0:	e3a000d3 	mov	r0, #211	; 0xd3
    9fd4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fd8:	e59f0854 	ldr	r0, [pc, #2132]	; a834 <waitLoop+0x28>
    9fdc:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fe0:	eb0001ea 	bl	a790 <drawRect>
    9fe4:	e59f084c 	ldr	r0, [pc, #2124]	; a838 <waitLoop+0x2c>
    9fe8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9fec:	e3a00032 	mov	r0, #50	; 0x32
    9ff0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ff4:	e3a00032 	mov	r0, #50	; 0x32
    9ff8:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    9ffc:	e3a000d5 	mov	r0, #213	; 0xd5
    a000:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a004:	e59f0830 	ldr	r0, [pc, #2096]	; a83c <waitLoop+0x30>
    a008:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a00c:	eb0001df 	bl	a790 <drawRect>
    a010:	e59f0828 	ldr	r0, [pc, #2088]	; a840 <waitLoop+0x34>
    a014:	e59f1828 	ldr	r1, [pc, #2088]	; a844 <waitLoop+0x38>
    a018:	e59f2828 	ldr	r2, [pc, #2088]	; a848 <waitLoop+0x3c>
    a01c:	e59f3828 	ldr	r3, [pc, #2088]	; a84c <waitLoop+0x40>
    a020:	eb00034f 	bl	ad64 <WriteSentence>
    a024:	e59f0818 	ldr	r0, [pc, #2072]	; a844 <waitLoop+0x38>
    a028:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a02c:	e3a00088 	mov	r0, #136	; 0x88
    a030:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a034:	e3a00088 	mov	r0, #136	; 0x88
    a038:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a03c:	e3a00e21 	mov	r0, #528	; 0x210
    a040:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a044:	e3a00fa1 	mov	r0, #644	; 0x284
    a048:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a04c:	eb0001cf 	bl	a790 <drawRect>
    a050:	e59f07e0 	ldr	r0, [pc, #2016]	; a838 <waitLoop+0x2c>
    a054:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a058:	e3a00084 	mov	r0, #132	; 0x84
    a05c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a060:	e3a00084 	mov	r0, #132	; 0x84
    a064:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a068:	e59f07e0 	ldr	r0, [pc, #2016]	; a850 <waitLoop+0x44>
    a06c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a070:	e59f07dc 	ldr	r0, [pc, #2012]	; a854 <waitLoop+0x48>
    a074:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a078:	eb0001c4 	bl	a790 <drawRect>
    a07c:	eb000000 	bl	a084 <UpdateScore>
    a080:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a084 <UpdateScore>:
    a084:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a088:	e59f07a8 	ldr	r0, [pc, #1960]	; a838 <waitLoop+0x2c>
    a08c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a090:	e3a00014 	mov	r0, #20
    a094:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a098:	e3a00018 	mov	r0, #24
    a09c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0a0:	e3a000e4 	mov	r0, #228	; 0xe4
    a0a4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0a8:	e59f07a8 	ldr	r0, [pc, #1960]	; a858 <waitLoop+0x4c>
    a0ac:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a0b0:	eb0001b6 	bl	a790 <drawRect>
    a0b4:	e59f0768 	ldr	r0, [pc, #1896]	; a824 <waitLoop+0x18>
    a0b8:	e5901000 	ldr	r1, [r0]
    a0bc:	e3510063 	cmp	r1, #99	; 0x63
    a0c0:	ca000011 	bgt	a10c <threeDigitScore>
    a0c4:	e3510009 	cmp	r1, #9
    a0c8:	ca000003 	bgt	a0dc <twoDigitScore>

0000a0cc <oneDigitScore>:
    a0cc:	e59f0788 	ldr	r0, [pc, #1928]	; a85c <waitLoop+0x50>
    a0d0:	e2811030 	add	r1, r1, #48	; 0x30
    a0d4:	e5c01006 	strb	r1, [r0, #6]
    a0d8:	ea000010 	b	a120 <PrintScore>

0000a0dc <twoDigitScore>:
    a0dc:	e59f0778 	ldr	r0, [pc, #1912]	; a85c <waitLoop+0x50>
    a0e0:	e3a02000 	mov	r2, #0

0000a0e4 <twoDigitScoreLoop>:
    a0e4:	e351000a 	cmp	r1, #10
    a0e8:	ba000002 	blt	a0f8 <twoDigitScoreLoopDone>
    a0ec:	e241100a 	sub	r1, r1, #10
    a0f0:	e2822001 	add	r2, r2, #1
    a0f4:	eafffffa 	b	a0e4 <twoDigitScoreLoop>

0000a0f8 <twoDigitScoreLoopDone>:
    a0f8:	e2811030 	add	r1, r1, #48	; 0x30
    a0fc:	e2822030 	add	r2, r2, #48	; 0x30
    a100:	e5c02005 	strb	r2, [r0, #5]
    a104:	e5c01006 	strb	r1, [r0, #6]
    a108:	ea000004 	b	a120 <PrintScore>

0000a10c <threeDigitScore>:
    a10c:	e2411064 	sub	r1, r1, #100	; 0x64
    a110:	e59f0744 	ldr	r0, [pc, #1860]	; a85c <waitLoop+0x50>
    a114:	e3a02031 	mov	r2, #49	; 0x31
    a118:	e5c02004 	strb	r2, [r0, #4]
    a11c:	eaffffee 	b	a0dc <twoDigitScore>

0000a120 <PrintScore>:
    a120:	e59f0734 	ldr	r0, [pc, #1844]	; a85c <waitLoop+0x50>
    a124:	e3a01000 	mov	r1, #0
    a128:	e59f2728 	ldr	r2, [pc, #1832]	; a858 <waitLoop+0x4c>
    a12c:	e3a030e6 	mov	r3, #230	; 0xe6
    a130:	eb00030b 	bl	ad64 <WriteSentence>
    a134:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a138 <ClearScreenBlack>:
    a138:	e92d4600 	push	{r9, sl, lr}
    a13c:	e59f071c 	ldr	r0, [pc, #1820]	; a860 <waitLoop+0x54>
    a140:	e5909014 	ldr	r9, [r0, #20]
    a144:	e590a018 	ldr	sl, [r0, #24]
    a148:	e3a00000 	mov	r0, #0
    a14c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a150:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    a154:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    a158:	e3a00000 	mov	r0, #0
    a15c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a160:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a164:	eb000189 	bl	a790 <drawRect>
    a168:	e8bd8600 	pop	{r9, sl, pc}

0000a16c <tetrisInitGrid>:
    a16c:	e59f06f0 	ldr	r0, [pc, #1776]	; a864 <waitLoop+0x58>
    a170:	e280100c 	add	r1, r0, #12
    a174:	e59f26ec 	ldr	r2, [pc, #1772]	; a868 <waitLoop+0x5c>
    a178:	e3a03000 	mov	r3, #0

0000a17c <forEach_block_in_tetrisGrid_loop>:
    a17c:	e5813000 	str	r3, [r1]
    a180:	e2811004 	add	r1, r1, #4
    a184:	e1510002 	cmp	r1, r2
    a188:	aa000000 	bge	a190 <forEach_block_in_tetrisGrid_loopEnd>
    a18c:	bafffffa 	blt	a17c <forEach_block_in_tetrisGrid_loop>

0000a190 <forEach_block_in_tetrisGrid_loopEnd>:
    a190:	e1a0f00e 	mov	pc, lr

0000a194 <tetrisSetGridBlockColor>:
    a194:	e8bd0007 	pop	{r0, r1, r2}
    a198:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a19c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a1a0:	e59f36bc 	ldr	r3, [pc, #1724]	; a864 <waitLoop+0x58>
    a1a4:	e8930070 	ldm	r3, {r4, r5, r6}
    a1a8:	e283700c 	add	r7, r3, #12
    a1ac:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
    a1b0:	e92d0013 	push	{r0, r1, r4}
    a1b4:	eb00018b 	bl	a7e8 <positionToArrayOffset>
    a1b8:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)
    a1bc:	e1a08108 	lsl	r8, r8, #2
    a1c0:	e49d2004 	pop	{r2}		; (ldr r2, [sp], #4)
    a1c4:	e7872008 	str	r2, [r7, r8]
    a1c8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a1cc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a1d0:	e1a0f00e 	mov	pc, lr

0000a1d4 <tetrisGetGridBlockColor>:
    a1d4:	e8bd0006 	pop	{r1, r2}
    a1d8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a1dc:	e92d03f0 	push	{r4, r5, r6, r7, r8, r9}
    a1e0:	e59f367c 	ldr	r3, [pc, #1660]	; a864 <waitLoop+0x58>
    a1e4:	e8930070 	ldm	r3, {r4, r5, r6}
    a1e8:	e283700c 	add	r7, r3, #12
    a1ec:	e3e094ff 	mvn	r9, #-16777216	; 0xff000000
    a1f0:	e3510000 	cmp	r1, #0
    a1f4:	ba00000a 	blt	a224 <tetrisGetGridBlockColorEnd>
    a1f8:	e1510004 	cmp	r1, r4
    a1fc:	aa000008 	bge	a224 <tetrisGetGridBlockColorEnd>
    a200:	e3520000 	cmp	r2, #0
    a204:	ba000006 	blt	a224 <tetrisGetGridBlockColorEnd>
    a208:	e1520005 	cmp	r2, r5
    a20c:	aa000004 	bge	a224 <tetrisGetGridBlockColorEnd>

0000a210 <tetrisGetGridBlockColor_validInput>:
    a210:	e92d0016 	push	{r1, r2, r4}
    a214:	eb000173 	bl	a7e8 <positionToArrayOffset>
    a218:	e49d8004 	pop	{r8}		; (ldr r8, [sp], #4)
    a21c:	e1a08108 	lsl	r8, r8, #2
    a220:	e7979008 	ldr	r9, [r7, r8]

0000a224 <tetrisGetGridBlockColorEnd>:
    a224:	e1a00009 	mov	r0, r9
    a228:	e8bd03f0 	pop	{r4, r5, r6, r7, r8, r9}
    a22c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a230:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a234:	e1a0f00e 	mov	pc, lr

0000a238 <tetrisClearGridBlock>:
    a238:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a23c:	e3a02000 	mov	r2, #0
    a240:	e92d0007 	push	{r0, r1, r2}
    a244:	ebffffd2 	bl	a194 <tetrisSetGridBlockColor>
    a248:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a24c:	e1a0f00e 	mov	pc, lr

0000a250 <tetrisGetGridBitmaskForBlock>:
    a250:	e1a0000d 	mov	r0, sp
    a254:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a258:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a25c:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    a260:	e92d1800 	push	{fp, ip}
    a264:	e3a00000 	mov	r0, #0
    a268:	e3a0b000 	mov	fp, #0
    a26c:	e3a0c000 	mov	ip, #0

0000a270 <tetrisGetGridBitmaskForBlock_for_i_lessThan_4_loop>:
    a270:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000a274 <tetrisGetGridBitmaskForBlock_for_j_lessThan_4_loop>:
    a274:	e92d0030 	push	{r4, r5}
    a278:	e084400b 	add	r4, r4, fp
    a27c:	e085500c 	add	r5, r5, ip
    a280:	e92d1801 	push	{r0, fp, ip}
    a284:	e92d0030 	push	{r4, r5}
    a288:	ebffffd1 	bl	a1d4 <tetrisGetGridBlockColor>
    a28c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    a290:	e8bd1801 	pop	{r0, fp, ip}
    a294:	e3330000 	teq	r3, #0
    a298:	0a000005 	beq	a2b4 <poop>
    a29c:	e3a01004 	mov	r1, #4
    a2a0:	e001019c 	mul	r1, ip, r1
    a2a4:	e081100b 	add	r1, r1, fp
    a2a8:	e3a02902 	mov	r2, #32768	; 0x8000
    a2ac:	e1a02132 	lsr	r2, r2, r1
    a2b0:	e1800002 	orr	r0, r0, r2

0000a2b4 <poop>:
    a2b4:	e8bd0030 	pop	{r4, r5}
    a2b8:	e28cc001 	add	ip, ip, #1
    a2bc:	e35c0004 	cmp	ip, #4
    a2c0:	baffffeb 	blt	a274 <tetrisGetGridBitmaskForBlock_for_j_lessThan_4_loop>
    a2c4:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a2c8:	e28bb001 	add	fp, fp, #1
    a2cc:	e35b0004 	cmp	fp, #4
    a2d0:	baffffe6 	blt	a270 <tetrisGetGridBitmaskForBlock_for_i_lessThan_4_loop>
    a2d4:	e8bd1800 	pop	{fp, ip}
    a2d8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a2dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a2e0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a2e4:	e1a0f00e 	mov	pc, lr

0000a2e8 <tetrisDrawGrid>:
    a2e8:	e1a0000d 	mov	r0, sp
    a2ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a2f0:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a2f4:	e59f7568 	ldr	r7, [pc, #1384]	; a864 <waitLoop+0x58>
    a2f8:	e8970700 	ldm	r7, {r8, r9, sl}
    a2fc:	e287b00c 	add	fp, r7, #12
    a300:	e1a07000 	mov	r7, r0
    a304:	e3a04000 	mov	r4, #0
    a308:	e3a05000 	mov	r5, #0
    a30c:	e3a06000 	mov	r6, #0

0000a310 <for_curCol_lessThan_cols_loop>:
    a310:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000a314 <for_curRow_lessThan_rows_loop>:
    a314:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a318:	e320f000 	nop	{0}
    a31c:	e320f000 	nop	{0}
    a320:	e8971fc0 	ldm	r7, {r6, r7, r8, r9, sl, fp, ip}
    a324:	e92d1fc0 	push	{r6, r7, r8, r9, sl, fp, ip}
    a328:	e1a00004 	mov	r0, r4
    a32c:	e1a01005 	mov	r1, r5
    a330:	eb00007d 	bl	a52c <tetrisBlockBitForGridPoint>
    a334:	e1a00004 	mov	r0, r4
    a338:	e1a01005 	mov	r1, r5
    a33c:	eb000060 	bl	a4c4 <tetrisBlockContainsPoint>
    a340:	e8bd1fc0 	pop	{r6, r7, r8, r9, sl, fp, ip}
    a344:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a348:	e92d1ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a34c:	e3300000 	teq	r0, #0
    a350:	e92d0130 	push	{r4, r5, r8}
    a354:	eb000123 	bl	a7e8 <positionToArrayOffset>
    a358:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a35c:	e1a0c10c 	lsl	ip, ip, #2
    a360:	e79b600c 	ldr	r6, [fp, ip]
    a364:	e320f000 	nop	{0}
    a368:	e92d000f 	push	{r0, r1, r2, r3}
    a36c:	e92d0030 	push	{r4, r5}
    a370:	eb000011 	bl	a3bc <tetrisGetRectForGridPosition>
    a374:	e8bd000f 	pop	{r0, r1, r2, r3}
    a378:	e320f000 	nop	{0}
    a37c:	e28000c0 	add	r0, r0, #192	; 0xc0
    a380:	e2811050 	add	r1, r1, #80	; 0x50
    a384:	e92d004f 	push	{r0, r1, r2, r3, r6}
    a388:	eb000100 	bl	a790 <drawRect>
    a38c:	e8bd000f 	pop	{r0, r1, r2, r3}

0000a390 <skippy>:
    a390:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a394:	e2855001 	add	r5, r5, #1
    a398:	e1550009 	cmp	r5, r9
    a39c:	baffffdc 	blt	a314 <for_curRow_lessThan_rows_loop>
    a3a0:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    a3a4:	e2844001 	add	r4, r4, #1
    a3a8:	e1540008 	cmp	r4, r8
    a3ac:	baffffd7 	blt	a310 <for_curCol_lessThan_cols_loop>
    a3b0:	e8bd1ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a3b4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a3b8:	e1a0f00e 	mov	pc, lr

0000a3bc <tetrisGetRectForGridPosition>:
    a3bc:	e8bd0003 	pop	{r0, r1}
    a3c0:	e92d00f0 	push	{r4, r5, r6, r7}
    a3c4:	e59f4498 	ldr	r4, [pc, #1176]	; a864 <waitLoop+0x58>
    a3c8:	e89400e0 	ldm	r4, {r5, r6, r7}
    a3cc:	e1a02007 	mov	r2, r7
    a3d0:	e1a03007 	mov	r3, r7
    a3d4:	e0000092 	mul	r0, r2, r0
    a3d8:	e0010193 	mul	r1, r3, r1
    a3dc:	e8bd00f0 	pop	{r4, r5, r6, r7}
    a3e0:	e92d000f 	push	{r0, r1, r2, r3}
    a3e4:	e1a0f00e 	mov	pc, lr

0000a3e8 <tetrisDrawBlock>:
    a3e8:	e1a0000d 	mov	r0, sp
    a3ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a3f0:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a3f4:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    a3f8:	e92d1800 	push	{fp, ip}
    a3fc:	e3a0b000 	mov	fp, #0
    a400:	e3a0c000 	mov	ip, #0

0000a404 <for_i_lessThan_4_loop>:
    a404:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000a408 <for_j_lessThan_4_loop>:
    a408:	e92d0070 	push	{r4, r5, r6}
    a40c:	e19720b8 	ldrh	r2, [r7, r8]
    a410:	e084400b 	add	r4, r4, fp
    a414:	e085500c 	add	r5, r5, ip
    a418:	e3a01004 	mov	r1, #4
    a41c:	e0010c91 	mul	r1, r1, ip
    a420:	e081100b 	add	r1, r1, fp
    a424:	e1a02112 	lsl	r2, r2, r1
    a428:	e3a01902 	mov	r1, #32768	; 0x8000
    a42c:	e0011002 	and	r1, r1, r2
    a430:	e3310000 	teq	r1, #0
    a434:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
    a438:	03a06000 	moveq	r6, #0
    a43c:	0a00000a 	beq	a46c <blockHasNoData>

0000a440 <blockHasData>:
    a440:	e92d000f 	push	{r0, r1, r2, r3}
    a444:	e320f000 	nop	{0}
    a448:	e92d0030 	push	{r4, r5}
    a44c:	ebffffda 	bl	a3bc <tetrisGetRectForGridPosition>
    a450:	e8bd000f 	pop	{r0, r1, r2, r3}
    a454:	e320f000 	nop	{0}
    a458:	e28000c0 	add	r0, r0, #192	; 0xc0
    a45c:	e2811050 	add	r1, r1, #80	; 0x50
    a460:	e92d004f 	push	{r0, r1, r2, r3, r6}
    a464:	eb0000c9 	bl	a790 <drawRect>
    a468:	e8bd000f 	pop	{r0, r1, r2, r3}

0000a46c <blockHasNoData>:
    a46c:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
    a470:	e8bd0070 	pop	{r4, r5, r6}
    a474:	e28cc001 	add	ip, ip, #1
    a478:	e35c0004 	cmp	ip, #4
    a47c:	baffffe1 	blt	a408 <for_j_lessThan_4_loop>
    a480:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a484:	e28bb001 	add	fp, fp, #1
    a488:	e35b0004 	cmp	fp, #4
    a48c:	baffffdc 	blt	a404 <for_i_lessThan_4_loop>
    a490:	e8bd1800 	pop	{fp, ip}
    a494:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a498:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a49c:	e1a0f00e 	mov	pc, lr

0000a4a0 <tetrisCreateNewBlock>:
    a4a0:	e59f03c4 	ldr	r0, [pc, #964]	; a86c <waitLoop+0x60>
    a4a4:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}

0000a4a8 <initializeTetrisBlock>:
    a4a8:	e3a04000 	mov	r4, #0
    a4ac:	e3a05000 	mov	r5, #0
    a4b0:	e59f63b8 	ldr	r6, [pc, #952]	; a870 <waitLoop+0x64>
    a4b4:	e59f73b8 	ldr	r7, [pc, #952]	; a874 <waitLoop+0x68>
    a4b8:	e3a08000 	mov	r8, #0

0000a4bc <initializeTetrisBlockEnd>:
    a4bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a4c0:	e1a0f00e 	mov	pc, lr

0000a4c4 <tetrisBlockContainsPoint>:
    a4c4:	e1a0300d 	mov	r3, sp
    a4c8:	e3a02001 	mov	r2, #1
    a4cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a4d0:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a4d4:	e89301f0 	ldm	r3, {r4, r5, r6, r7, r8}
    a4d8:	e1500004 	cmp	r0, r4
    a4dc:	b3a02000 	movlt	r2, #0
    a4e0:	ba00000c 	blt	a518 <tetrisBlockDoesNotContainPoint>
    a4e4:	e2844004 	add	r4, r4, #4
    a4e8:	e1500004 	cmp	r0, r4
    a4ec:	a3a02000 	movge	r2, #0
    a4f0:	aa000008 	bge	a518 <tetrisBlockDoesNotContainPoint>
    a4f4:	e1510005 	cmp	r1, r5
    a4f8:	b3a02000 	movlt	r2, #0
    a4fc:	ba000005 	blt	a518 <tetrisBlockDoesNotContainPoint>
    a500:	e2855004 	add	r5, r5, #4
    a504:	e1510005 	cmp	r1, r5
    a508:	a3a02000 	movge	r2, #0
    a50c:	aa000001 	bge	a518 <tetrisBlockDoesNotContainPoint>

0000a510 <tetrisBlockDoesContainPoint>:
    a510:	e320f000 	nop	{0}
    a514:	e3a00001 	mov	r0, #1

0000a518 <tetrisBlockDoesNotContainPoint>:
    a518:	e3a00000 	mov	r0, #0

0000a51c <tetrisBlockContainsPointEnd>:
    a51c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a520:	e1a00002 	mov	r0, r2
    a524:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a528:	e1a0f00e 	mov	pc, lr

0000a52c <tetrisBlockBitForGridPoint>:
    a52c:	e1a0f00e 	mov	pc, lr

0000a530 <tetrisCheckBlockGridCollisions>:
    a530:	e1a0000d 	mov	r0, sp
    a534:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a538:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a53c:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    a540:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a544:	ebffff41 	bl	a250 <tetrisGetGridBitmaskForBlock>
    a548:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    a54c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a550:	e320f000 	nop	{0}
    a554:	e19710b8 	ldrh	r1, [r7, r8]
    a558:	e0000001 	and	r0, r0, r1
    a55c:	e3500000 	cmp	r0, #0
    a560:	13a00001 	movne	r0, #1
    a564:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a568:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a56c:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    a570:	e1a0f00e 	mov	pc, lr

0000a574 <tetrisOnBlockCollision>:
    a574:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a57c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a580:	e19730b8 	ldrh	r3, [r7, r8]
    a584:	e320f000 	nop	{0}
    a588:	eb000005 	bl	a5a4 <writeBlockToGrid>
    a58c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a590:	ebffffc2 	bl	a4a0 <tetrisCreateNewBlock>
    a594:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a598:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a59c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a5a0:	e1a0f00e 	mov	pc, lr

0000a5a4 <writeBlockToGrid>:
    a5a4:	e1a0000d 	mov	r0, sp
    a5a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a5ac:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a5b0:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    a5b4:	e92d1800 	push	{fp, ip}
    a5b8:	e3a0b000 	mov	fp, #0
    a5bc:	e3a0c000 	mov	ip, #0

0000a5c0 <writeBlockToGrid_for_i_lessThan_4_loop>:
    a5c0:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)

0000a5c4 <writeBlockToGrid_for_j_lessThan_4_loop>:
    a5c4:	e92d0070 	push	{r4, r5, r6}
    a5c8:	e19720b8 	ldrh	r2, [r7, r8]
    a5cc:	e084400b 	add	r4, r4, fp
    a5d0:	e085500c 	add	r5, r5, ip
    a5d4:	e3a01004 	mov	r1, #4
    a5d8:	e0010c91 	mul	r1, r1, ip
    a5dc:	e081100b 	add	r1, r1, fp
    a5e0:	e1a02112 	lsl	r2, r2, r1
    a5e4:	e3a01902 	mov	r1, #32768	; 0x8000
    a5e8:	e0011002 	and	r1, r1, r2
    a5ec:	e3310000 	teq	r1, #0
    a5f0:	0a000001 	beq	a5fc <writeBlockToGrid_blockHasNoData>

0000a5f4 <writeBlockToGrid_blockHasData>:
    a5f4:	e92d0070 	push	{r4, r5, r6}
    a5f8:	ebfffee5 	bl	a194 <tetrisSetGridBlockColor>

0000a5fc <writeBlockToGrid_blockHasNoData>:
    a5fc:	e8bd0070 	pop	{r4, r5, r6}
    a600:	e28cc001 	add	ip, ip, #1
    a604:	e35c0004 	cmp	ip, #4
    a608:	baffffed 	blt	a5c4 <writeBlockToGrid_for_j_lessThan_4_loop>
    a60c:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
    a610:	e28bb001 	add	fp, fp, #1
    a614:	e35b0004 	cmp	fp, #4
    a618:	baffffe8 	blt	a5c0 <writeBlockToGrid_for_i_lessThan_4_loop>
    a61c:	e8bd1800 	pop	{fp, ip}
    a620:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a624:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a628:	e1a0f00e 	mov	pc, lr

0000a62c <tetrisRotateBlock>:
    a62c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a630:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a634:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a638:	e3300000 	teq	r0, #0
    a63c:	0a000000 	beq	a644 <handleRotateLeft>
    a640:	1a000003 	bne	a654 <handleRotateRight>

0000a644 <handleRotateLeft>:
    a644:	e2888002 	add	r8, r8, #2
    a648:	e3580006 	cmp	r8, #6
    a64c:	c3a08000 	movgt	r8, #0
    a650:	ea000003 	b	a664 <handleRotateEnd>

0000a654 <handleRotateRight>:
    a654:	e2488002 	sub	r8, r8, #2
    a658:	e3580000 	cmp	r8, #0
    a65c:	b3a08006 	movlt	r8, #6
    a660:	eaffffff 	b	a664 <handleRotateEnd>

0000a664 <handleRotateEnd>:
    a664:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a668:	ebffffb0 	bl	a530 <tetrisCheckBlockGridCollisions>
    a66c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    a670:	e3300000 	teq	r0, #0
    a674:	1a000000 	bne	a67c <onRotationCollision>
    a678:	0a000004 	beq	a690 <onNoRotationCollision>

0000a67c <onRotationCollision>:
    a67c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a680:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a684:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a688:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a68c:	ea000004 	b	a6a4 <tetrisRotateBlockEnd>

0000a690 <onNoRotationCollision>:
    a690:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a694:	028dd014 	addeq	sp, sp, #20
    a698:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a69c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a6a0:	eaffffff 	b	a6a4 <tetrisRotateBlockEnd>

0000a6a4 <tetrisRotateBlockEnd>:
    a6a4:	e1a0f00e 	mov	pc, lr

0000a6a8 <tetrisTranslateBlock>:
    a6a8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a6ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a6b0:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a6b4:	e0844000 	add	r4, r4, r0
    a6b8:	e0855001 	add	r5, r5, r1
    a6bc:	e92d0003 	push	{r0, r1}
    a6c0:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a6c4:	ebffff99 	bl	a530 <tetrisCheckBlockGridCollisions>
    a6c8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
    a6cc:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a6d0:	e8bd0003 	pop	{r0, r1}
    a6d4:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a6d8:	e3330000 	teq	r3, #0
    a6dc:	1a000000 	bne	a6e4 <onTranslationCollision>
    a6e0:	0a00000d 	beq	a71c <onNoTranslationCollision>

0000a6e4 <onTranslationCollision>:
    a6e4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a6e8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a6ec:	e3310000 	teq	r1, #0
    a6f0:	0a000000 	beq	a6f8 <onTranslationCollision_Horizontal>
    a6f4:	1a000002 	bne	a704 <onTranslationCollision_Vertical>

0000a6f8 <onTranslationCollision_Horizontal>:
    a6f8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a6fc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a700:	ea00000a 	b	a730 <tetrisTranslateBlockEnd>

0000a704 <onTranslationCollision_Vertical>:
    a704:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a708:	ebffff99 	bl	a574 <tetrisOnBlockCollision>
    a70c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a710:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a714:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a718:	ea000004 	b	a730 <tetrisTranslateBlockEnd>

0000a71c <onNoTranslationCollision>:
    a71c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a720:	028dd014 	addeq	sp, sp, #20
    a724:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a728:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a72c:	eaffffff 	b	a730 <tetrisTranslateBlockEnd>

0000a730 <tetrisTranslateBlockEnd>:
    a730:	e1a0f00e 	mov	pc, lr

0000a734 <clearScreen>:
    a734:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a738:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a73c:	e3a04000 	mov	r4, #0
    a740:	e3a05000 	mov	r5, #0
    a744:	e59f0114 	ldr	r0, [pc, #276]	; a860 <waitLoop+0x54>
    a748:	e5906014 	ldr	r6, [r0, #20]
    a74c:	e5907018 	ldr	r7, [r0, #24]
    a750:	e3a08000 	mov	r8, #0
    a754:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a758:	eb00000c 	bl	a790 <drawRect>
    a75c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a760:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a764:	e1a0f00e 	mov	pc, lr

0000a768 <drawPixel>:
    a768:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a76c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    a770:	e0804501 	add	r4, r0, r1, lsl #10
    a774:	e1a04084 	lsl	r4, r4, #1
    a778:	e59f00f8 	ldr	r0, [pc, #248]	; a878 <waitLoop+0x6c>
    a77c:	e5900000 	ldr	r0, [r0]
    a780:	e18020b4 	strh	r2, [r0, r4]
    a784:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    a788:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a78c:	e1a0f00e 	mov	pc, lr

0000a790 <drawRect>:
    a790:	e1a0000d 	mov	r0, sp
    a794:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a798:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    a79c:	e89001f0 	ldm	r0, {r4, r5, r6, r7, r8}
    a7a0:	e0866004 	add	r6, r6, r4
    a7a4:	e0877005 	add	r7, r7, r5

0000a7a8 <drawRectForLoopX>:
    a7a8:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)

0000a7ac <drawRectForLoopY>:
    a7ac:	e1a00004 	mov	r0, r4
    a7b0:	e1a01005 	mov	r1, r5
    a7b4:	e1a02008 	mov	r2, r8
    a7b8:	ebffffea 	bl	a768 <drawPixel>
    a7bc:	e2855001 	add	r5, r5, #1
    a7c0:	e1550007 	cmp	r5, r7
    a7c4:	bafffff8 	blt	a7ac <drawRectForLoopY>
    a7c8:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
    a7cc:	e2844001 	add	r4, r4, #1
    a7d0:	e1540006 	cmp	r4, r6
    a7d4:	bafffff3 	blt	a7a8 <drawRectForLoopX>
    a7d8:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    a7dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    a7e0:	e28dd014 	add	sp, sp, #20
    a7e4:	e1a0f00e 	mov	pc, lr

0000a7e8 <positionToArrayOffset>:
    a7e8:	e8bd0007 	pop	{r0, r1, r2}
    a7ec:	e0030192 	mul	r3, r2, r1
    a7f0:	e0833000 	add	r3, r3, r0
    a7f4:	e92d0008 	stmfd	sp!, {r3}
    a7f8:	e1a0f00e 	mov	pc, lr

0000a7fc <startTimer>:
    a7fc:	e1a03000 	mov	r3, r0
    a800:	e59f0074 	ldr	r0, [pc, #116]	; a87c <waitLoop+0x70>
    a804:	e5901000 	ldr	r1, [r0]
    a808:	e0811003 	add	r1, r1, r3

0000a80c <waitLoop>:
    a80c:	e5902000 	ldr	r2, [r0]
    a810:	e1510002 	cmp	r1, r2
    a814:	8afffffc 	bhi	a80c <waitLoop>
    a818:	e1a0f00e 	mov	pc, lr
    a81c:	00002710 	.word	0x00002710
    a820:	000fffff 	.word	0x000fffff
    a824:	000093f0 	.word	0x000093f0
    a828:	00009410 	.word	0x00009410
    a82c:	000034a0 	.word	0x000034a0
    a830:	00000269 	.word	0x00000269
    a834:	00000297 	.word	0x00000297
    a838:	0000adb5 	.word	0x0000adb5
    a83c:	00000299 	.word	0x00000299
    a840:	00009400 	.word	0x00009400
    a844:	00000618 	.word	0x00000618
    a848:	0000023e 	.word	0x0000023e
    a84c:	0000024a 	.word	0x0000024a
    a850:	00000212 	.word	0x00000212
    a854:	00000286 	.word	0x00000286
    a858:	000002a6 	.word	0x000002a6
    a85c:	000093e0 	.word	0x000093e0
    a860:	00009420 	.word	0x00009420
    a864:	00009080 	.word	0x00009080
    a868:	00009384 	.word	0x00009384
    a86c:	00009384 	.word	0x00009384
    a870:	009999ff 	.word	0x009999ff
    a874:	000093c0 	.word	0x000093c0
    a878:	00009480 	.word	0x00009480
    a87c:	3f003004 	.word	0x3f003004

0000a880 <randomNumber>:
    a880:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    a884:	e59f1040 	ldr	r1, [pc, #64]	; a8cc <top+0x34>
    a888:	e5914000 	ldr	r4, [r1]
    a88c:	e5915000 	ldr	r5, [r1]
    a890:	e5916000 	ldr	r6, [r1]
    a894:	e5912000 	ldr	r2, [r1]

0000a898 <top>:
    a898:	e1a07004 	mov	r7, r4
    a89c:	e0277587 	eor	r7, r7, r7, lsl #11
    a8a0:	e0277427 	eor	r7, r7, r7, lsr #8
    a8a4:	e1a04005 	mov	r4, r5
    a8a8:	e1a05006 	mov	r5, r6
    a8ac:	e1a06002 	mov	r6, r2
    a8b0:	e02229a2 	eor	r2, r2, r2, lsr #19
    a8b4:	e0222007 	eor	r2, r2, r7
    a8b8:	e3e01007 	mvn	r1, #7
    a8bc:	e1c20001 	bic	r0, r2, r1
    a8c0:	e3500007 	cmp	r0, #7
    a8c4:	0afffff3 	beq	a898 <top>
    a8c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    a8cc:	3f003004 	.word	0x3f003004

0000a8d0 <EnableJTAG>:
    a8d0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    a8d4:	e59f0064 	ldr	r0, [pc, #100]	; a940 <dowaitloop+0xc>
    a8d8:	e0211001 	eor	r1, r1, r1
    a8dc:	e5801000 	str	r1, [r0]
    a8e0:	eb000012 	bl	a930 <dowait>
    a8e4:	e59f0058 	ldr	r0, [pc, #88]	; a944 <dowaitloop+0x10>
    a8e8:	e59f1058 	ldr	r1, [pc, #88]	; a948 <dowaitloop+0x14>
    a8ec:	e5801000 	str	r1, [r0]
    a8f0:	eb00000e 	bl	a930 <dowait>
    a8f4:	e0211001 	eor	r1, r1, r1
    a8f8:	e5801000 	str	r1, [r0]
    a8fc:	e59f0048 	ldr	r0, [pc, #72]	; a94c <dowaitloop+0x18>
    a900:	e5901000 	ldr	r1, [r0]
    a904:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    a908:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    a90c:	e5801000 	str	r1, [r0]
    a910:	e59f0038 	ldr	r0, [pc, #56]	; a950 <dowaitloop+0x1c>
    a914:	e5901000 	ldr	r1, [r0]
    a918:	e59f2034 	ldr	r2, [pc, #52]	; a954 <dowaitloop+0x20>
    a91c:	e1c11002 	bic	r1, r1, r2
    a920:	e59f2030 	ldr	r2, [pc, #48]	; a958 <dowaitloop+0x24>
    a924:	e1811002 	orr	r1, r1, r2
    a928:	e5801000 	str	r1, [r0]
    a92c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000a930 <dowait>:
    a930:	e3a02f4b 	mov	r2, #300	; 0x12c

0000a934 <dowaitloop>:
    a934:	e2522001 	subs	r2, r2, #1
    a938:	1afffffd 	bne	a934 <dowaitloop>
    a93c:	e12fff1e 	bx	lr
    a940:	3f200094 	.word	0x3f200094
    a944:	3f200098 	.word	0x3f200098
    a948:	0bc00010 	.word	0x0bc00010
    a94c:	3f200000 	.word	0x3f200000
    a950:	3f200008 	.word	0x3f200008
    a954:	00e3ffc0 	.word	0x00e3ffc0
    a958:	0061b6c0 	.word	0x0061b6c0

0000a95c <InitFrameBuffer>:
    a95c:	e59f2068 	ldr	r2, [pc, #104]	; a9cc <pointerWaitLoop$+0x1c>
    a960:	e59f3068 	ldr	r3, [pc, #104]	; a9d0 <pointerWaitLoop$+0x20>

0000a964 <mBoxFullLoop$>:
    a964:	e5920018 	ldr	r0, [r2, #24]
    a968:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    a96c:	1afffffc 	bne	a964 <mBoxFullLoop$>
    a970:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    a974:	e3800008 	orr	r0, r0, #8
    a978:	e5820020 	str	r0, [r2, #32]

0000a97c <mBoxEmptyLoop$>:
    a97c:	e5920018 	ldr	r0, [r2, #24]
    a980:	e3100101 	tst	r0, #1073741824	; 0x40000000
    a984:	1afffffc 	bne	a97c <mBoxEmptyLoop$>
    a988:	e5920000 	ldr	r0, [r2]
    a98c:	e200100f 	and	r1, r0, #15
    a990:	e3310008 	teq	r1, #8
    a994:	1afffff8 	bne	a97c <mBoxEmptyLoop$>
    a998:	e59f0030 	ldr	r0, [pc, #48]	; a9d0 <pointerWaitLoop$+0x20>
    a99c:	e5901004 	ldr	r1, [r0, #4]
    a9a0:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    a9a4:	0a000001 	beq	a9b0 <pointerWaitLoop$>
    a9a8:	13a00000 	movne	r0, #0
    a9ac:	112fff1e 	bxne	lr

0000a9b0 <pointerWaitLoop$>:
    a9b0:	e59f001c 	ldr	r0, [pc, #28]	; a9d4 <pointerWaitLoop$+0x24>
    a9b4:	e5900000 	ldr	r0, [r0]
    a9b8:	e3300000 	teq	r0, #0
    a9bc:	0afffffb 	beq	a9b0 <pointerWaitLoop$>
    a9c0:	e59f3010 	ldr	r3, [pc, #16]	; a9d8 <pointerWaitLoop$+0x28>
    a9c4:	e5830000 	str	r0, [r3]
    a9c8:	e12fff1e 	bx	lr
    a9cc:	3f00b880 	.word	0x3f00b880
    a9d0:	00009420 	.word	0x00009420
    a9d4:	0000946c 	.word	0x0000946c
    a9d8:	00009480 	.word	0x00009480

0000a9dc <sampleSNES>:
    a9dc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}

0000a9e0 <initSNES>:
    a9e0:	e3a00001 	mov	r0, #1
    a9e4:	eb000048 	bl	ab0c <setCLOCKFunction>
    a9e8:	e3a00001 	mov	r0, #1
    a9ec:	eb00003d 	bl	aae8 <setLATCHFunction>
    a9f0:	e3a00000 	mov	r0, #0
    a9f4:	eb000034 	bl	aacc <setDATAFunction>

0000a9f8 <startSamplingSNESButtons>:
    a9f8:	e3a0000b 	mov	r0, #11
    a9fc:	e3a01001 	mov	r1, #1
    aa00:	eb000056 	bl	ab60 <writeGPIO>
    aa04:	e3a00009 	mov	r0, #9
    aa08:	e3a01001 	mov	r1, #1
    aa0c:	eb000053 	bl	ab60 <writeGPIO>
    aa10:	e3a0000c 	mov	r0, #12
    aa14:	eb000019 	bl	aa80 <startTimer>
    aa18:	e3a00009 	mov	r0, #9
    aa1c:	e3a01000 	mov	r1, #0
    aa20:	eb00004e 	bl	ab60 <writeGPIO>
    aa24:	e3a08000 	mov	r8, #0
    aa28:	e3a07000 	mov	r7, #0

0000aa2c <pulseLoop>:
    aa2c:	e3a00006 	mov	r0, #6
    aa30:	eb000012 	bl	aa80 <startTimer>
    aa34:	e3a0000b 	mov	r0, #11
    aa38:	e3a01000 	mov	r1, #0
    aa3c:	eb000047 	bl	ab60 <writeGPIO>
    aa40:	e3a00006 	mov	r0, #6
    aa44:	eb00000d 	bl	aa80 <startTimer>
    aa48:	e3a0000a 	mov	r0, #10
    aa4c:	e3a01000 	mov	r1, #0
    aa50:	eb000036 	bl	ab30 <readGPIO>
    aa54:	e1a00710 	lsl	r0, r0, r7
    aa58:	e1888000 	orr	r8, r8, r0
    aa5c:	e3a0000b 	mov	r0, #11
    aa60:	e3a01001 	mov	r1, #1
    aa64:	eb00003d 	bl	ab60 <writeGPIO>
    aa68:	e2877001 	add	r7, r7, #1
    aa6c:	e3570010 	cmp	r7, #16
    aa70:	baffffed 	blt	aa2c <pulseLoop>

0000aa74 <pulseLoopEnd>:
    aa74:	e1a00008 	mov	r0, r8

0000aa78 <mainEnd>:
    aa78:	eaffffff 	b	aa7c <killProgram>

0000aa7c <killProgram>:
    aa7c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000aa80 <startTimer>:
    aa80:	e1a03000 	mov	r3, r0
    aa84:	e59f0128 	ldr	r0, [pc, #296]	; abb4 <newButtonPress+0x14>
    aa88:	e5901000 	ldr	r1, [r0]
    aa8c:	e0811003 	add	r1, r1, r3

0000aa90 <waitLoop>:
    aa90:	e5902000 	ldr	r2, [r0]
    aa94:	e1510002 	cmp	r1, r2
    aa98:	8afffffc 	bhi	aa90 <waitLoop>
    aa9c:	e1a0f00e 	mov	pc, lr

0000aaa0 <setGPIOFunction>:
    aaa0:	e59f3110 	ldr	r3, [pc, #272]	; abb8 <newButtonPress+0x18>
    aaa4:	e3a04004 	mov	r4, #4
    aaa8:	e0000094 	mul	r0, r4, r0
    aaac:	e7934000 	ldr	r4, [r3, r0]
    aab0:	e3a05007 	mov	r5, #7
    aab4:	e1a05215 	lsl	r5, r5, r2
    aab8:	e1c33005 	bic	r3, r3, r5
    aabc:	e1a01211 	lsl	r1, r1, r2
    aac0:	e1844001 	orr	r4, r4, r1
    aac4:	e7834000 	str	r4, [r3, r0]
    aac8:	e1a0f00e 	mov	pc, lr

0000aacc <setDATAFunction>:
    aacc:	e59f10e4 	ldr	r1, [pc, #228]	; abb8 <newButtonPress+0x18>
    aad0:	e5912004 	ldr	r2, [r1, #4]
    aad4:	e3a03007 	mov	r3, #7
    aad8:	e1c22003 	bic	r2, r2, r3
    aadc:	e1822000 	orr	r2, r2, r0
    aae0:	e5812004 	str	r2, [r1, #4]
    aae4:	e1a0f00e 	mov	pc, lr

0000aae8 <setLATCHFunction>:
    aae8:	e59f10c8 	ldr	r1, [pc, #200]	; abb8 <newButtonPress+0x18>
    aaec:	e5912000 	ldr	r2, [r1]
    aaf0:	e3a03007 	mov	r3, #7
    aaf4:	e1a03d83 	lsl	r3, r3, #27
    aaf8:	e1c22003 	bic	r2, r2, r3
    aafc:	e1a00d80 	lsl	r0, r0, #27
    ab00:	e1822000 	orr	r2, r2, r0
    ab04:	e5812000 	str	r2, [r1]
    ab08:	e1a0f00e 	mov	pc, lr

0000ab0c <setCLOCKFunction>:
    ab0c:	e59f10a4 	ldr	r1, [pc, #164]	; abb8 <newButtonPress+0x18>
    ab10:	e5912004 	ldr	r2, [r1, #4]
    ab14:	e3a03007 	mov	r3, #7
    ab18:	e1a03183 	lsl	r3, r3, #3
    ab1c:	e1c22003 	bic	r2, r2, r3
    ab20:	e1a00180 	lsl	r0, r0, #3
    ab24:	e1822000 	orr	r2, r2, r0
    ab28:	e5812004 	str	r2, [r1, #4]
    ab2c:	e1a0f00e 	mov	pc, lr

0000ab30 <readGPIO>:
    ab30:	e59f1080 	ldr	r1, [pc, #128]	; abb8 <newButtonPress+0x18>
    ab34:	e3500020 	cmp	r0, #32
    ab38:	b5912034 	ldrlt	r2, [r1, #52]	; 0x34
    ab3c:	a5912038 	ldrge	r2, [r1, #56]	; 0x38
    ab40:	a2400020 	subge	r0, r0, #32
    ab44:	e3a03001 	mov	r3, #1
    ab48:	e1a03013 	lsl	r3, r3, r0
    ab4c:	e0022003 	and	r2, r2, r3
    ab50:	e3320000 	teq	r2, #0
    ab54:	03a00000 	moveq	r0, #0
    ab58:	13a00001 	movne	r0, #1
    ab5c:	e1a0f00e 	mov	pc, lr

0000ab60 <writeGPIO>:
    ab60:	e3310000 	teq	r1, #0
    ab64:	e59f104c 	ldr	r1, [pc, #76]	; abb8 <newButtonPress+0x18>
    ab68:	1281201c 	addne	r2, r1, #28
    ab6c:	02812028 	addeq	r2, r1, #40	; 0x28
    ab70:	e3500020 	cmp	r0, #32
    ab74:	a2400020 	subge	r0, r0, #32
    ab78:	e3a01001 	mov	r1, #1
    ab7c:	e1a01011 	lsl	r1, r1, r0
    ab80:	b5821000 	strlt	r1, [r2]
    ab84:	a5821004 	strge	r1, [r2, #4]
    ab88:	e1a0f00e 	mov	pc, lr

0000ab8c <areAnySNESButtonsPressed>:
    ab8c:	e59f1028 	ldr	r1, [pc, #40]	; abbc <newButtonPress+0x1c>
    ab90:	e0411000 	sub	r1, r1, r0
    ab94:	e1500009 	cmp	r0, r9
    ab98:	1a000000 	bne	aba0 <newButtonPress>
    ab9c:	e3a01000 	mov	r1, #0

0000aba0 <newButtonPress>:
    aba0:	e3310000 	teq	r1, #0
    aba4:	03a01000 	moveq	r1, #0
    aba8:	13a01001 	movne	r1, #1
    abac:	e1a09000 	mov	r9, r0
    abb0:	e1a0f00e 	mov	pc, lr
    abb4:	3f003004 	.word	0x3f003004
    abb8:	3f200000 	.word	0x3f200000
    abbc:	0000ffff 	.word	0x0000ffff

0000abc0 <drawPauseMenu>:
    abc0:	e92d4010 	push	{r4, lr}
    abc4:	e59f4d84 	ldr	r4, [pc, #3460]	; b950 <noPixel$+0x20>
    abc8:	e3a03f7d 	mov	r3, #500	; 0x1f4
    abcc:	e3a02f96 	mov	r2, #600	; 0x258
    abd0:	e3a01086 	mov	r1, #134	; 0x86
    abd4:	e3a000d0 	mov	r0, #208	; 0xd0
    abd8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    abdc:	ebfffeeb 	bl	a790 <drawRect>
    abe0:	e3a04902 	mov	r4, #32768	; 0x8000
    abe4:	e3a03004 	mov	r3, #4
    abe8:	e3a02e26 	mov	r2, #608	; 0x260
    abec:	e3a01082 	mov	r1, #130	; 0x82
    abf0:	e3a000cc 	mov	r0, #204	; 0xcc
    abf4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    abf8:	ebfffee4 	bl	a790 <drawRect>
    abfc:	e3a04902 	mov	r4, #32768	; 0x8000
    ac00:	e3a03004 	mov	r3, #4
    ac04:	e3a02e26 	mov	r2, #608	; 0x260
    ac08:	e59f1d44 	ldr	r1, [pc, #3396]	; b954 <noPixel$+0x24>
    ac0c:	e3a000cc 	mov	r0, #204	; 0xcc
    ac10:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ac14:	ebfffedd 	bl	a790 <drawRect>
    ac18:	e3a04902 	mov	r4, #32768	; 0x8000
    ac1c:	e3a03f7d 	mov	r3, #500	; 0x1f4
    ac20:	e3a02004 	mov	r2, #4
    ac24:	e3a01086 	mov	r1, #134	; 0x86
    ac28:	e3a000cc 	mov	r0, #204	; 0xcc
    ac2c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ac30:	ebfffed6 	bl	a790 <drawRect>
    ac34:	e3a04902 	mov	r4, #32768	; 0x8000
    ac38:	e3a03f7d 	mov	r3, #500	; 0x1f4
    ac3c:	e3a02004 	mov	r2, #4
    ac40:	e3a01086 	mov	r1, #134	; 0x86
    ac44:	e3a00fca 	mov	r0, #808	; 0x328
    ac48:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ac4c:	ebfffecf 	bl	a790 <drawRect>
    ac50:	eb000213 	bl	b4a4 <drawPaused>
    ac54:	e59f0cfc 	ldr	r0, [pc, #3324]	; b958 <noPixel$+0x28>
    ac58:	e3a01e1d 	mov	r1, #464	; 0x1d0
    ac5c:	eb0001f3 	bl	b430 <drawMenuButton>
    ac60:	e59f0cf4 	ldr	r0, [pc, #3316]	; b95c <noPixel$+0x2c>
    ac64:	e3a01000 	mov	r1, #0
    ac68:	e59f2cf0 	ldr	r2, [pc, #3312]	; b960 <noPixel$+0x30>
    ac6c:	e59f3cec 	ldr	r3, [pc, #3308]	; b960 <noPixel$+0x30>
    ac70:	eb00003b 	bl	ad64 <WriteSentence>
    ac74:	e59f0cdc 	ldr	r0, [pc, #3292]	; b958 <noPixel$+0x28>
    ac78:	e59f1ce4 	ldr	r1, [pc, #3300]	; b964 <noPixel$+0x34>
    ac7c:	eb0001eb 	bl	b430 <drawMenuButton>
    ac80:	e59f0ce0 	ldr	r0, [pc, #3296]	; b968 <noPixel$+0x38>
    ac84:	e3a01000 	mov	r1, #0
    ac88:	e59f2cdc 	ldr	r2, [pc, #3292]	; b96c <noPixel$+0x3c>
    ac8c:	e3a03f8d 	mov	r3, #564	; 0x234
    ac90:	eb000033 	bl	ad64 <WriteSentence>
    ac94:	eb000043 	bl	ada8 <setPauseMenuIndicatorRestart>
    ac98:	e8bd8010 	pop	{r4, pc}

0000ac9c <drawMainMenu>:
    ac9c:	e92d4610 	push	{r4, r9, sl, lr}
    aca0:	e59f0cc8 	ldr	r0, [pc, #3272]	; b970 <noPixel$+0x40>
    aca4:	e5909014 	ldr	r9, [r0, #20]
    aca8:	e590a018 	ldr	sl, [r0, #24]
    acac:	e59f0c9c 	ldr	r0, [pc, #3228]	; b950 <noPixel$+0x20>
    acb0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acb4:	e52da004 	push	{sl}		; (str sl, [sp, #-4]!)
    acb8:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
    acbc:	e3a00000 	mov	r0, #0
    acc0:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acc4:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
    acc8:	ebfffeb0 	bl	a790 <drawRect>
    accc:	e59f4ca0 	ldr	r4, [pc, #3232]	; b974 <noPixel$+0x44>
    acd0:	e3a030c8 	mov	r3, #200	; 0xc8
    acd4:	e3a02f96 	mov	r2, #600	; 0x258
    acd8:	e3a01054 	mov	r1, #84	; 0x54
    acdc:	e3a000d4 	mov	r0, #212	; 0xd4
    ace0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ace4:	ebfffea9 	bl	a790 <drawRect>
    ace8:	e59f4c84 	ldr	r4, [pc, #3204]	; b974 <noPixel$+0x44>
    acec:	e3a030c8 	mov	r3, #200	; 0xc8
    acf0:	e3a020c8 	mov	r2, #200	; 0xc8
    acf4:	e3a01f47 	mov	r1, #284	; 0x11c
    acf8:	e3a00f67 	mov	r0, #412	; 0x19c
    acfc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ad00:	ebfffea2 	bl	a790 <drawRect>
    ad04:	eb00027b 	bl	b6f8 <drawTitle>
    ad08:	e59f0c68 	ldr	r0, [pc, #3176]	; b978 <noPixel$+0x48>
    ad0c:	e3a01000 	mov	r1, #0
    ad10:	e59f2c64 	ldr	r2, [pc, #3172]	; b97c <noPixel$+0x4c>
    ad14:	e3a03044 	mov	r3, #68	; 0x44
    ad18:	eb000011 	bl	ad64 <WriteSentence>
    ad1c:	e59f0c34 	ldr	r0, [pc, #3124]	; b958 <noPixel$+0x28>
    ad20:	e3a01f8d 	mov	r1, #564	; 0x234
    ad24:	eb0001c1 	bl	b430 <drawMenuButton>
    ad28:	e59f0c50 	ldr	r0, [pc, #3152]	; b980 <noPixel$+0x50>
    ad2c:	e3a01000 	mov	r1, #0
    ad30:	e59f2c4c 	ldr	r2, [pc, #3148]	; b984 <noPixel$+0x54>
    ad34:	e59f3c4c 	ldr	r3, [pc, #3148]	; b988 <noPixel$+0x58>
    ad38:	eb000009 	bl	ad64 <WriteSentence>
    ad3c:	e59f0c14 	ldr	r0, [pc, #3092]	; b958 <noPixel$+0x28>
    ad40:	e59f1c44 	ldr	r1, [pc, #3140]	; b98c <noPixel$+0x5c>
    ad44:	eb0001b9 	bl	b430 <drawMenuButton>
    ad48:	e59f0c18 	ldr	r0, [pc, #3096]	; b968 <noPixel$+0x38>
    ad4c:	e3a01000 	mov	r1, #0
    ad50:	e59f2c14 	ldr	r2, [pc, #3092]	; b96c <noPixel$+0x3c>
    ad54:	e3a03fa6 	mov	r3, #664	; 0x298
    ad58:	eb000001 	bl	ad64 <WriteSentence>
    ad5c:	eb000031 	bl	ae28 <setMainMenuIndicatorStart>
    ad60:	e8bd8610 	pop	{r4, r9, sl, pc}

0000ad64 <WriteSentence>:
    ad64:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    ad68:	e1a05000 	mov	r5, r0
    ad6c:	e5954000 	ldr	r4, [r5]
    ad70:	e2855004 	add	r5, r5, #4
    ad74:	e1a06001 	mov	r6, r1
    ad78:	e1a08002 	mov	r8, r2
    ad7c:	e1a07003 	mov	r7, r3

0000ad80 <LoadChar>:
    ad80:	e4d50001 	ldrb	r0, [r5], #1
    ad84:	e1a01006 	mov	r1, r6
    ad88:	e1a02007 	mov	r2, r7
    ad8c:	e1a03008 	mov	r3, r8
    ad90:	eb0002d8 	bl	b8f8 <DrawChar>
    ad94:	e2888008 	add	r8, r8, #8
    ad98:	e2444001 	sub	r4, r4, #1
    ad9c:	e3540000 	cmp	r4, #0
    ada0:	cafffff6 	bgt	ad80 <LoadChar>
    ada4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000ada8 <setPauseMenuIndicatorRestart>:
    ada8:	e92d4010 	push	{r4, lr}
    adac:	e59f4bdc 	ldr	r4, [pc, #3036]	; b990 <noPixel$+0x60>
    adb0:	e3a03014 	mov	r3, #20
    adb4:	e3a02014 	mov	r2, #20
    adb8:	e3a01e23 	mov	r1, #560	; 0x230
    adbc:	e3a00f71 	mov	r0, #452	; 0x1c4
    adc0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    adc4:	ebfffe71 	bl	a790 <drawRect>
    adc8:	e3a04000 	mov	r4, #0
    adcc:	e3a03014 	mov	r3, #20
    add0:	e3a02014 	mov	r2, #20
    add4:	e59f1bb8 	ldr	r1, [pc, #3000]	; b994 <noPixel$+0x64>
    add8:	e3a00f71 	mov	r0, #452	; 0x1c4
    addc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ade0:	ebfffe6a 	bl	a790 <drawRect>
    ade4:	e8bd8010 	pop	{r4, pc}

0000ade8 <setPauseMenuIndicatorQuit>:
    ade8:	e92d4010 	push	{r4, lr}
    adec:	e59f4b9c 	ldr	r4, [pc, #2972]	; b990 <noPixel$+0x60>
    adf0:	e3a03014 	mov	r3, #20
    adf4:	e3a02014 	mov	r2, #20
    adf8:	e59f1b94 	ldr	r1, [pc, #2964]	; b994 <noPixel$+0x64>
    adfc:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae00:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ae04:	ebfffe61 	bl	a790 <drawRect>
    ae08:	e3a04000 	mov	r4, #0
    ae0c:	e3a03014 	mov	r3, #20
    ae10:	e3a02014 	mov	r2, #20
    ae14:	e3a01e23 	mov	r1, #560	; 0x230
    ae18:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae1c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ae20:	ebfffe5a 	bl	a790 <drawRect>
    ae24:	e8bd8010 	pop	{r4, pc}

0000ae28 <setMainMenuIndicatorStart>:
    ae28:	e92d4010 	push	{r4, lr}
    ae2c:	e59f4b5c 	ldr	r4, [pc, #2908]	; b990 <noPixel$+0x60>
    ae30:	e3a03014 	mov	r3, #20
    ae34:	e3a02014 	mov	r2, #20
    ae38:	e3a01fa5 	mov	r1, #660	; 0x294
    ae3c:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae40:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ae44:	ebfffe51 	bl	a790 <drawRect>
    ae48:	e3a04000 	mov	r4, #0
    ae4c:	e3a03014 	mov	r3, #20
    ae50:	e3a02014 	mov	r2, #20
    ae54:	e59f1b3c 	ldr	r1, [pc, #2876]	; b998 <noPixel$+0x68>
    ae58:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae5c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ae60:	ebfffe4a 	bl	a790 <drawRect>
    ae64:	e8bd8010 	pop	{r4, pc}

0000ae68 <setMainMenuIndicatorQuit>:
    ae68:	e92d4010 	push	{r4, lr}
    ae6c:	e59f4b1c 	ldr	r4, [pc, #2844]	; b990 <noPixel$+0x60>
    ae70:	e3a03014 	mov	r3, #20
    ae74:	e3a02014 	mov	r2, #20
    ae78:	e59f1b18 	ldr	r1, [pc, #2840]	; b998 <noPixel$+0x68>
    ae7c:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae80:	e92d001f 	push	{r0, r1, r2, r3, r4}
    ae84:	ebfffe41 	bl	a790 <drawRect>
    ae88:	e3a04000 	mov	r4, #0
    ae8c:	e3a03014 	mov	r3, #20
    ae90:	e3a02014 	mov	r2, #20
    ae94:	e3a01fa5 	mov	r1, #660	; 0x294
    ae98:	e3a00f71 	mov	r0, #452	; 0x1c4
    ae9c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    aea0:	ebfffe3a 	bl	a790 <drawRect>
    aea4:	e8bd8010 	pop	{r4, pc}

0000aea8 <drawVictoryScreen>:
    aea8:	e92d4010 	push	{r4, lr}
    aeac:	e59f4ae8 	ldr	r4, [pc, #2792]	; b99c <noPixel$+0x6c>
    aeb0:	e3a0305a 	mov	r3, #90	; 0x5a
    aeb4:	e3a0201e 	mov	r2, #30
    aeb8:	e3a010c8 	mov	r1, #200	; 0xc8
    aebc:	e3a00057 	mov	r0, #87	; 0x57
    aec0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    aec4:	ebfffe31 	bl	a790 <drawRect>
    aec8:	e59f4acc 	ldr	r4, [pc, #2764]	; b99c <noPixel$+0x6c>
    aecc:	e3a0305a 	mov	r3, #90	; 0x5a
    aed0:	e3a0201e 	mov	r2, #30
    aed4:	e3a010c8 	mov	r1, #200	; 0xc8
    aed8:	e3a00093 	mov	r0, #147	; 0x93
    aedc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    aee0:	ebfffe2a 	bl	a790 <drawRect>
    aee4:	e59f4ab0 	ldr	r4, [pc, #2736]	; b99c <noPixel$+0x6c>
    aee8:	e3a0305a 	mov	r3, #90	; 0x5a
    aeec:	e3a0201e 	mov	r2, #30
    aef0:	e3a01f41 	mov	r1, #260	; 0x104
    aef4:	e3a00075 	mov	r0, #117	; 0x75
    aef8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    aefc:	ebfffe23 	bl	a790 <drawRect>
    af00:	e59f4a94 	ldr	r4, [pc, #2708]	; b99c <noPixel$+0x6c>
    af04:	e3a0305a 	mov	r3, #90	; 0x5a
    af08:	e3a0201e 	mov	r2, #30
    af0c:	e3a010e6 	mov	r1, #230	; 0xe6
    af10:	e3a000bb 	mov	r0, #187	; 0xbb
    af14:	e92d001f 	push	{r0, r1, r2, r3, r4}
    af18:	ebfffe1c 	bl	a790 <drawRect>
    af1c:	e59f4a78 	ldr	r4, [pc, #2680]	; b99c <noPixel$+0x6c>
    af20:	e3a0305a 	mov	r3, #90	; 0x5a
    af24:	e3a0201e 	mov	r2, #30
    af28:	e3a010e6 	mov	r1, #230	; 0xe6
    af2c:	e3a000f7 	mov	r0, #247	; 0xf7
    af30:	e92d001f 	push	{r0, r1, r2, r3, r4}
    af34:	ebfffe15 	bl	a790 <drawRect>
    af38:	e59f4a5c 	ldr	r4, [pc, #2652]	; b99c <noPixel$+0x6c>
    af3c:	e3a0301e 	mov	r3, #30
    af40:	e3a0201e 	mov	r2, #30
    af44:	e3a010c8 	mov	r1, #200	; 0xc8
    af48:	e3a000d9 	mov	r0, #217	; 0xd9
    af4c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    af50:	ebfffe0e 	bl	a790 <drawRect>
    af54:	e59f4a40 	ldr	r4, [pc, #2624]	; b99c <noPixel$+0x6c>
    af58:	e3a0301e 	mov	r3, #30
    af5c:	e3a0201e 	mov	r2, #30
    af60:	e3a01d05 	mov	r1, #320	; 0x140
    af64:	e3a000d9 	mov	r0, #217	; 0xd9
    af68:	e92d001f 	push	{r0, r1, r2, r3, r4}
    af6c:	ebfffe07 	bl	a790 <drawRect>
    af70:	e59f4a24 	ldr	r4, [pc, #2596]	; b99c <noPixel$+0x6c>
    af74:	e3a03078 	mov	r3, #120	; 0x78
    af78:	e3a0201e 	mov	r2, #30
    af7c:	e3a010c8 	mov	r1, #200	; 0xc8
    af80:	e59f0a18 	ldr	r0, [pc, #2584]	; b9a0 <noPixel$+0x70>
    af84:	e92d001f 	push	{r0, r1, r2, r3, r4}
    af88:	ebfffe00 	bl	a790 <drawRect>
    af8c:	e59f4a08 	ldr	r4, [pc, #2568]	; b99c <noPixel$+0x6c>
    af90:	e3a03078 	mov	r3, #120	; 0x78
    af94:	e3a0201e 	mov	r2, #30
    af98:	e3a010c8 	mov	r1, #200	; 0xc8
    af9c:	e59f0a00 	ldr	r0, [pc, #2560]	; b9a4 <noPixel$+0x74>
    afa0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    afa4:	ebfffdf9 	bl	a790 <drawRect>
    afa8:	e59f49ec 	ldr	r4, [pc, #2540]	; b99c <noPixel$+0x6c>
    afac:	e3a0301e 	mov	r3, #30
    afb0:	e3a0201e 	mov	r2, #30
    afb4:	e3a01d05 	mov	r1, #320	; 0x140
    afb8:	e59f09e8 	ldr	r0, [pc, #2536]	; b9a8 <noPixel$+0x78>
    afbc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    afc0:	ebfffdf2 	bl	a790 <drawRect>
    afc4:	e59f49d0 	ldr	r4, [pc, #2512]	; b99c <noPixel$+0x6c>
    afc8:	e3a03078 	mov	r3, #120	; 0x78
    afcc:	e3a0201e 	mov	r2, #30
    afd0:	e3a010c8 	mov	r1, #200	; 0xc8
    afd4:	e59f09a8 	ldr	r0, [pc, #2472]	; b984 <noPixel$+0x54>
    afd8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    afdc:	ebfffdeb 	bl	a790 <drawRect>
    afe0:	e59f49b4 	ldr	r4, [pc, #2484]	; b99c <noPixel$+0x6c>
    afe4:	e3a03078 	mov	r3, #120	; 0x78
    afe8:	e3a0201e 	mov	r2, #30
    afec:	e3a010c8 	mov	r1, #200	; 0xc8
    aff0:	e59f09b4 	ldr	r0, [pc, #2484]	; b9ac <noPixel$+0x7c>
    aff4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    aff8:	ebfffde4 	bl	a790 <drawRect>
    affc:	e59f4998 	ldr	r4, [pc, #2456]	; b99c <noPixel$+0x6c>
    b000:	e3a03078 	mov	r3, #120	; 0x78
    b004:	e3a0201e 	mov	r2, #30
    b008:	e3a010c8 	mov	r1, #200	; 0xc8
    b00c:	e59f099c 	ldr	r0, [pc, #2460]	; b9b0 <noPixel$+0x80>
    b010:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b014:	ebfffddd 	bl	a790 <drawRect>
    b018:	e59f497c 	ldr	r4, [pc, #2428]	; b99c <noPixel$+0x6c>
    b01c:	e3a0301e 	mov	r3, #30
    b020:	e3a0201e 	mov	r2, #30
    b024:	e3a01d05 	mov	r1, #320	; 0x140
    b028:	e59f0984 	ldr	r0, [pc, #2436]	; b9b4 <noPixel$+0x84>
    b02c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b030:	ebfffdd6 	bl	a790 <drawRect>
    b034:	e59f4960 	ldr	r4, [pc, #2400]	; b99c <noPixel$+0x6c>
    b038:	e3a0301e 	mov	r3, #30
    b03c:	e3a0201e 	mov	r2, #30
    b040:	e3a01d05 	mov	r1, #320	; 0x140
    b044:	e59f096c 	ldr	r0, [pc, #2412]	; b9b8 <noPixel$+0x88>
    b048:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b04c:	ebfffdcf 	bl	a790 <drawRect>
    b050:	e59f4944 	ldr	r4, [pc, #2372]	; b99c <noPixel$+0x6c>
    b054:	e3a0301e 	mov	r3, #30
    b058:	e3a0205a 	mov	r2, #90	; 0x5a
    b05c:	e3a010c8 	mov	r1, #200	; 0xc8
    b060:	e59f0954 	ldr	r0, [pc, #2388]	; b9bc <noPixel$+0x8c>
    b064:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b068:	ebfffdc8 	bl	a790 <drawRect>
    b06c:	e59f4928 	ldr	r4, [pc, #2344]	; b99c <noPixel$+0x6c>
    b070:	e3a0301e 	mov	r3, #30
    b074:	e3a0205a 	mov	r2, #90	; 0x5a
    b078:	e3a01d05 	mov	r1, #320	; 0x140
    b07c:	e59f0938 	ldr	r0, [pc, #2360]	; b9bc <noPixel$+0x8c>
    b080:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b084:	ebfffdc1 	bl	a790 <drawRect>
    b088:	e59f490c 	ldr	r4, [pc, #2316]	; b99c <noPixel$+0x6c>
    b08c:	e3a0305a 	mov	r3, #90	; 0x5a
    b090:	e3a0201e 	mov	r2, #30
    b094:	e3a010e6 	mov	r1, #230	; 0xe6
    b098:	e59f0920 	ldr	r0, [pc, #2336]	; b9c0 <noPixel$+0x90>
    b09c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b0a0:	ebfffdba 	bl	a790 <drawRect>
    b0a4:	e59f48f0 	ldr	r4, [pc, #2288]	; b99c <noPixel$+0x6c>
    b0a8:	e3a03096 	mov	r3, #150	; 0x96
    b0ac:	e3a0201e 	mov	r2, #30
    b0b0:	e3a010c8 	mov	r1, #200	; 0xc8
    b0b4:	e59f0908 	ldr	r0, [pc, #2312]	; b9c4 <noPixel$+0x94>
    b0b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b0bc:	ebfffdb3 	bl	a790 <drawRect>
    b0c0:	e59f48d4 	ldr	r4, [pc, #2260]	; b99c <noPixel$+0x6c>
    b0c4:	e3a0301e 	mov	r3, #30
    b0c8:	e3a0201e 	mov	r2, #30
    b0cc:	e3a010e6 	mov	r1, #230	; 0xe6
    b0d0:	e59f08f0 	ldr	r0, [pc, #2288]	; b9c8 <noPixel$+0x98>
    b0d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b0d8:	ebfffdac 	bl	a790 <drawRect>
    b0dc:	e59f48b8 	ldr	r4, [pc, #2232]	; b99c <noPixel$+0x6c>
    b0e0:	e3a0301e 	mov	r3, #30
    b0e4:	e3a0201e 	mov	r2, #30
    b0e8:	e3a01f41 	mov	r1, #260	; 0x104
    b0ec:	e59f08d8 	ldr	r0, [pc, #2264]	; b9cc <noPixel$+0x9c>
    b0f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b0f4:	ebfffda5 	bl	a790 <drawRect>
    b0f8:	e59f489c 	ldr	r4, [pc, #2204]	; b99c <noPixel$+0x6c>
    b0fc:	e3a0301e 	mov	r3, #30
    b100:	e3a0201e 	mov	r2, #30
    b104:	e59f18c4 	ldr	r1, [pc, #2244]	; b9d0 <noPixel$+0xa0>
    b108:	e59f08c4 	ldr	r0, [pc, #2244]	; b9d4 <noPixel$+0xa4>
    b10c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b110:	ebfffd9e 	bl	a790 <drawRect>
    b114:	e59f4880 	ldr	r4, [pc, #2176]	; b99c <noPixel$+0x6c>
    b118:	e3a03096 	mov	r3, #150	; 0x96
    b11c:	e3a0201e 	mov	r2, #30
    b120:	e3a010c8 	mov	r1, #200	; 0xc8
    b124:	e59f08ac 	ldr	r0, [pc, #2220]	; b9d8 <noPixel$+0xa8>
    b128:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b12c:	ebfffd97 	bl	a790 <drawRect>
    b130:	e59f4864 	ldr	r4, [pc, #2148]	; b99c <noPixel$+0x6c>
    b134:	e3a0305a 	mov	r3, #90	; 0x5a
    b138:	e3a0201e 	mov	r2, #30
    b13c:	e3a010c8 	mov	r1, #200	; 0xc8
    b140:	e59f0894 	ldr	r0, [pc, #2196]	; b9dc <noPixel$+0xac>
    b144:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b148:	ebfffd90 	bl	a790 <drawRect>
    b14c:	e59f4848 	ldr	r4, [pc, #2120]	; b99c <noPixel$+0x6c>
    b150:	e3a0301e 	mov	r3, #30
    b154:	e3a0201e 	mov	r2, #30
    b158:	e3a01d05 	mov	r1, #320	; 0x140
    b15c:	e59f0878 	ldr	r0, [pc, #2168]	; b9dc <noPixel$+0xac>
    b160:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b164:	ebfffd89 	bl	a790 <drawRect>
    b168:	e8bd8010 	pop	{r4, pc}

0000b16c <drawLossScreen>:
    b16c:	e92d4010 	push	{r4, lr}
    b170:	e59f4868 	ldr	r4, [pc, #2152]	; b9e0 <noPixel$+0xb0>
    b174:	e3a0305a 	mov	r3, #90	; 0x5a
    b178:	e3a0201e 	mov	r2, #30
    b17c:	e3a010c8 	mov	r1, #200	; 0xc8
    b180:	e3a00075 	mov	r0, #117	; 0x75
    b184:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b188:	ebfffd80 	bl	a790 <drawRect>
    b18c:	e59f484c 	ldr	r4, [pc, #2124]	; b9e0 <noPixel$+0xb0>
    b190:	e3a0305a 	mov	r3, #90	; 0x5a
    b194:	e3a0201e 	mov	r2, #30
    b198:	e3a010c8 	mov	r1, #200	; 0xc8
    b19c:	e3a000b1 	mov	r0, #177	; 0xb1
    b1a0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b1a4:	ebfffd79 	bl	a790 <drawRect>
    b1a8:	e59f4830 	ldr	r4, [pc, #2096]	; b9e0 <noPixel$+0xb0>
    b1ac:	e3a0305a 	mov	r3, #90	; 0x5a
    b1b0:	e3a0201e 	mov	r2, #30
    b1b4:	e3a01f41 	mov	r1, #260	; 0x104
    b1b8:	e3a00093 	mov	r0, #147	; 0x93
    b1bc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b1c0:	ebfffd72 	bl	a790 <drawRect>
    b1c4:	e59f4814 	ldr	r4, [pc, #2068]	; b9e0 <noPixel$+0xb0>
    b1c8:	e3a0305a 	mov	r3, #90	; 0x5a
    b1cc:	e3a0201e 	mov	r2, #30
    b1d0:	e3a010e6 	mov	r1, #230	; 0xe6
    b1d4:	e3a000d9 	mov	r0, #217	; 0xd9
    b1d8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b1dc:	ebfffd6b 	bl	a790 <drawRect>
    b1e0:	e59f47f8 	ldr	r4, [pc, #2040]	; b9e0 <noPixel$+0xb0>
    b1e4:	e3a0305a 	mov	r3, #90	; 0x5a
    b1e8:	e3a0201e 	mov	r2, #30
    b1ec:	e3a010e6 	mov	r1, #230	; 0xe6
    b1f0:	e59f07ec 	ldr	r0, [pc, #2028]	; b9e4 <noPixel$+0xb4>
    b1f4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b1f8:	ebfffd64 	bl	a790 <drawRect>
    b1fc:	e59f47dc 	ldr	r4, [pc, #2012]	; b9e0 <noPixel$+0xb0>
    b200:	e3a0301e 	mov	r3, #30
    b204:	e3a0201e 	mov	r2, #30
    b208:	e3a010c8 	mov	r1, #200	; 0xc8
    b20c:	e3a000f7 	mov	r0, #247	; 0xf7
    b210:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b214:	ebfffd5d 	bl	a790 <drawRect>
    b218:	e59f47c0 	ldr	r4, [pc, #1984]	; b9e0 <noPixel$+0xb0>
    b21c:	e3a0301e 	mov	r3, #30
    b220:	e3a0201e 	mov	r2, #30
    b224:	e3a01d05 	mov	r1, #320	; 0x140
    b228:	e3a000f7 	mov	r0, #247	; 0xf7
    b22c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b230:	ebfffd56 	bl	a790 <drawRect>
    b234:	e59f47a4 	ldr	r4, [pc, #1956]	; b9e0 <noPixel$+0xb0>
    b238:	e3a03078 	mov	r3, #120	; 0x78
    b23c:	e3a0201e 	mov	r2, #30
    b240:	e3a010c8 	mov	r1, #200	; 0xc8
    b244:	e59f075c 	ldr	r0, [pc, #1884]	; b9a8 <noPixel$+0x78>
    b248:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b24c:	ebfffd4f 	bl	a790 <drawRect>
    b250:	e59f4788 	ldr	r4, [pc, #1928]	; b9e0 <noPixel$+0xb0>
    b254:	e3a03078 	mov	r3, #120	; 0x78
    b258:	e3a0201e 	mov	r2, #30
    b25c:	e3a010c8 	mov	r1, #200	; 0xc8
    b260:	e59f0780 	ldr	r0, [pc, #1920]	; b9e8 <noPixel$+0xb8>
    b264:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b268:	ebfffd48 	bl	a790 <drawRect>
    b26c:	e59f476c 	ldr	r4, [pc, #1900]	; b9e0 <noPixel$+0xb0>
    b270:	e3a0301e 	mov	r3, #30
    b274:	e3a0201e 	mov	r2, #30
    b278:	e3a01d05 	mov	r1, #320	; 0x140
    b27c:	e59f0720 	ldr	r0, [pc, #1824]	; b9a4 <noPixel$+0x74>
    b280:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b284:	ebfffd41 	bl	a790 <drawRect>
    b288:	e59f4750 	ldr	r4, [pc, #1872]	; b9e0 <noPixel$+0xb0>
    b28c:	e3a03096 	mov	r3, #150	; 0x96
    b290:	e3a0201e 	mov	r2, #30
    b294:	e3a010c8 	mov	r1, #200	; 0xc8
    b298:	e59f0714 	ldr	r0, [pc, #1812]	; b9b4 <noPixel$+0x84>
    b29c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2a0:	ebfffd3a 	bl	a790 <drawRect>
    b2a4:	e59f4734 	ldr	r4, [pc, #1844]	; b9e0 <noPixel$+0xb0>
    b2a8:	e3a0301e 	mov	r3, #30
    b2ac:	e3a0203c 	mov	r2, #60	; 0x3c
    b2b0:	e3a01d05 	mov	r1, #320	; 0x140
    b2b4:	e59f06f0 	ldr	r0, [pc, #1776]	; b9ac <noPixel$+0x7c>
    b2b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2bc:	ebfffd33 	bl	a790 <drawRect>
    b2c0:	e59f4718 	ldr	r4, [pc, #1816]	; b9e0 <noPixel$+0xb0>
    b2c4:	e3a0305a 	mov	r3, #90	; 0x5a
    b2c8:	e3a0201e 	mov	r2, #30
    b2cc:	e3a010e6 	mov	r1, #230	; 0xe6
    b2d0:	e59f0714 	ldr	r0, [pc, #1812]	; b9ec <noPixel$+0xbc>
    b2d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2d8:	ebfffd2c 	bl	a790 <drawRect>
    b2dc:	e59f46fc 	ldr	r4, [pc, #1788]	; b9e0 <noPixel$+0xb0>
    b2e0:	e3a0305a 	mov	r3, #90	; 0x5a
    b2e4:	e3a0201e 	mov	r2, #30
    b2e8:	e3a010e6 	mov	r1, #230	; 0xe6
    b2ec:	e59f06cc 	ldr	r0, [pc, #1740]	; b9c0 <noPixel$+0x90>
    b2f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b2f4:	ebfffd25 	bl	a790 <drawRect>
    b2f8:	e59f46e0 	ldr	r4, [pc, #1760]	; b9e0 <noPixel$+0xb0>
    b2fc:	e3a0301e 	mov	r3, #30
    b300:	e3a0201e 	mov	r2, #30
    b304:	e3a010c8 	mov	r1, #200	; 0xc8
    b308:	e59f06ac 	ldr	r0, [pc, #1708]	; b9bc <noPixel$+0x8c>
    b30c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b310:	ebfffd1e 	bl	a790 <drawRect>
    b314:	e59f46c4 	ldr	r4, [pc, #1732]	; b9e0 <noPixel$+0xb0>
    b318:	e3a0301e 	mov	r3, #30
    b31c:	e3a0201e 	mov	r2, #30
    b320:	e3a01d05 	mov	r1, #320	; 0x140
    b324:	e59f0690 	ldr	r0, [pc, #1680]	; b9bc <noPixel$+0x8c>
    b328:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b32c:	ebfffd17 	bl	a790 <drawRect>
    b330:	e59f46a8 	ldr	r4, [pc, #1704]	; b9e0 <noPixel$+0xb0>
    b334:	e3a0301e 	mov	r3, #30
    b338:	e3a0205a 	mov	r2, #90	; 0x5a
    b33c:	e3a010c8 	mov	r1, #200	; 0xc8
    b340:	e59f06a8 	ldr	r0, [pc, #1704]	; b9f0 <noPixel$+0xc0>
    b344:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b348:	ebfffd10 	bl	a790 <drawRect>
    b34c:	e59f468c 	ldr	r4, [pc, #1676]	; b9e0 <noPixel$+0xb0>
    b350:	e3a0301e 	mov	r3, #30
    b354:	e3a0201e 	mov	r2, #30
    b358:	e3a010e6 	mov	r1, #230	; 0xe6
    b35c:	e59f068c 	ldr	r0, [pc, #1676]	; b9f0 <noPixel$+0xc0>
    b360:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b364:	ebfffd09 	bl	a790 <drawRect>
    b368:	e59f4670 	ldr	r4, [pc, #1648]	; b9e0 <noPixel$+0xb0>
    b36c:	e3a0301e 	mov	r3, #30
    b370:	e3a0205a 	mov	r2, #90	; 0x5a
    b374:	e3a01f41 	mov	r1, #260	; 0x104
    b378:	e59f0670 	ldr	r0, [pc, #1648]	; b9f0 <noPixel$+0xc0>
    b37c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b380:	ebfffd02 	bl	a790 <drawRect>
    b384:	e59f4654 	ldr	r4, [pc, #1620]	; b9e0 <noPixel$+0xb0>
    b388:	e3a0301e 	mov	r3, #30
    b38c:	e3a0201e 	mov	r2, #30
    b390:	e59f1638 	ldr	r1, [pc, #1592]	; b9d0 <noPixel$+0xa0>
    b394:	e59f062c 	ldr	r0, [pc, #1580]	; b9c8 <noPixel$+0x98>
    b398:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b39c:	ebfffcfb 	bl	a790 <drawRect>
    b3a0:	e59f4638 	ldr	r4, [pc, #1592]	; b9e0 <noPixel$+0xb0>
    b3a4:	e3a0301e 	mov	r3, #30
    b3a8:	e3a0205a 	mov	r2, #90	; 0x5a
    b3ac:	e3a01d05 	mov	r1, #320	; 0x140
    b3b0:	e59f0638 	ldr	r0, [pc, #1592]	; b9f0 <noPixel$+0xc0>
    b3b4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b3b8:	ebfffcf4 	bl	a790 <drawRect>
    b3bc:	e59f461c 	ldr	r4, [pc, #1564]	; b9e0 <noPixel$+0xb0>
    b3c0:	e3a03096 	mov	r3, #150	; 0x96
    b3c4:	e3a0201e 	mov	r2, #30
    b3c8:	e3a010c8 	mov	r1, #200	; 0xc8
    b3cc:	e59f0620 	ldr	r0, [pc, #1568]	; b9f4 <noPixel$+0xc4>
    b3d0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b3d4:	ebfffced 	bl	a790 <drawRect>
    b3d8:	e59f4600 	ldr	r4, [pc, #1536]	; b9e0 <noPixel$+0xb0>
    b3dc:	e3a0301e 	mov	r3, #30
    b3e0:	e3a0203c 	mov	r2, #60	; 0x3c
    b3e4:	e3a010c8 	mov	r1, #200	; 0xc8
    b3e8:	e59f0608 	ldr	r0, [pc, #1544]	; b9f8 <noPixel$+0xc8>
    b3ec:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b3f0:	ebfffce6 	bl	a790 <drawRect>
    b3f4:	e59f45e4 	ldr	r4, [pc, #1508]	; b9e0 <noPixel$+0xb0>
    b3f8:	e3a0301e 	mov	r3, #30
    b3fc:	e3a0203c 	mov	r2, #60	; 0x3c
    b400:	e3a01f41 	mov	r1, #260	; 0x104
    b404:	e59f05ec 	ldr	r0, [pc, #1516]	; b9f8 <noPixel$+0xc8>
    b408:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b40c:	ebfffcdf 	bl	a790 <drawRect>
    b410:	e59f45c8 	ldr	r4, [pc, #1480]	; b9e0 <noPixel$+0xb0>
    b414:	e3a0301e 	mov	r3, #30
    b418:	e3a0203c 	mov	r2, #60	; 0x3c
    b41c:	e3a01d05 	mov	r1, #320	; 0x140
    b420:	e59f05d0 	ldr	r0, [pc, #1488]	; b9f8 <noPixel$+0xc8>
    b424:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b428:	ebfffcd8 	bl	a790 <drawRect>
    b42c:	e8bd8010 	pop	{r4, pc}

0000b430 <drawMenuButton>:
    b430:	e92d4610 	push	{r4, r9, sl, lr}
    b434:	e1a09000 	mov	r9, r0
    b438:	e1a0a001 	mov	sl, r1
    b43c:	e3a04000 	mov	r4, #0
    b440:	e3a03032 	mov	r3, #50	; 0x32
    b444:	e3a02096 	mov	r2, #150	; 0x96
    b448:	e1a0100a 	mov	r1, sl
    b44c:	e1a00009 	mov	r0, r9
    b450:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b454:	ebfffccd 	bl	a790 <drawRect>
    b458:	e2899005 	add	r9, r9, #5
    b45c:	e28aa005 	add	sl, sl, #5
    b460:	e59f4594 	ldr	r4, [pc, #1428]	; b9fc <noPixel$+0xcc>
    b464:	e3a03028 	mov	r3, #40	; 0x28
    b468:	e3a0208c 	mov	r2, #140	; 0x8c
    b46c:	e1a0100a 	mov	r1, sl
    b470:	e1a00009 	mov	r0, r9
    b474:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b478:	ebfffcc4 	bl	a790 <drawRect>
    b47c:	e2899005 	add	r9, r9, #5
    b480:	e28aa005 	add	sl, sl, #5
    b484:	e59f4504 	ldr	r4, [pc, #1284]	; b990 <noPixel$+0x60>
    b488:	e3a0301e 	mov	r3, #30
    b48c:	e3a0201e 	mov	r2, #30
    b490:	e1a0100a 	mov	r1, sl
    b494:	e1a00009 	mov	r0, r9
    b498:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b49c:	ebfffcbb 	bl	a790 <drawRect>
    b4a0:	e8bd8610 	pop	{r4, r9, sl, pc}

0000b4a4 <drawPaused>:
    b4a4:	e92d4010 	push	{r4, lr}
    b4a8:	e3a04000 	mov	r4, #0
    b4ac:	e3a03096 	mov	r3, #150	; 0x96
    b4b0:	e3a0201e 	mov	r2, #30
    b4b4:	e3a010ae 	mov	r1, #174	; 0xae
    b4b8:	e3a000e4 	mov	r0, #228	; 0xe4
    b4bc:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b4c0:	ebfffcb2 	bl	a790 <drawRect>
    b4c4:	e3a04000 	mov	r4, #0
    b4c8:	e3a0301e 	mov	r3, #30
    b4cc:	e3a0203c 	mov	r2, #60	; 0x3c
    b4d0:	e3a010ae 	mov	r1, #174	; 0xae
    b4d4:	e59f0524 	ldr	r0, [pc, #1316]	; ba00 <noPixel$+0xd0>
    b4d8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b4dc:	ebfffcab 	bl	a790 <drawRect>
    b4e0:	e3a04000 	mov	r4, #0
    b4e4:	e3a0301e 	mov	r3, #30
    b4e8:	e3a0203c 	mov	r2, #60	; 0x3c
    b4ec:	e3a010ea 	mov	r1, #234	; 0xea
    b4f0:	e59f0508 	ldr	r0, [pc, #1288]	; ba00 <noPixel$+0xd0>
    b4f4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b4f8:	ebfffca4 	bl	a790 <drawRect>
    b4fc:	e3a04000 	mov	r4, #0
    b500:	e3a0301e 	mov	r3, #30
    b504:	e3a0201e 	mov	r2, #30
    b508:	e3a010cc 	mov	r1, #204	; 0xcc
    b50c:	e3a00e12 	mov	r0, #288	; 0x120
    b510:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b514:	ebfffc9d 	bl	a790 <drawRect>
    b518:	e3a04000 	mov	r4, #0
    b51c:	e3a03078 	mov	r3, #120	; 0x78
    b520:	e3a0201e 	mov	r2, #30
    b524:	e3a010cc 	mov	r1, #204	; 0xcc
    b528:	e3a00f52 	mov	r0, #328	; 0x148
    b52c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b530:	ebfffc96 	bl	a790 <drawRect>
    b534:	e3a04000 	mov	r4, #0
    b538:	e3a03078 	mov	r3, #120	; 0x78
    b53c:	e3a0201e 	mov	r2, #30
    b540:	e3a010cc 	mov	r1, #204	; 0xcc
    b544:	e3a00f61 	mov	r0, #388	; 0x184
    b548:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b54c:	ebfffc8f 	bl	a790 <drawRect>
    b550:	e3a04000 	mov	r4, #0
    b554:	e3a0301e 	mov	r3, #30
    b558:	e3a0201e 	mov	r2, #30
    b55c:	e3a010ae 	mov	r1, #174	; 0xae
    b560:	e59f049c 	ldr	r0, [pc, #1180]	; ba04 <noPixel$+0xd4>
    b564:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b568:	ebfffc88 	bl	a790 <drawRect>
    b56c:	e3a04000 	mov	r4, #0
    b570:	e3a0301e 	mov	r3, #30
    b574:	e3a0201e 	mov	r2, #30
    b578:	e3a010ea 	mov	r1, #234	; 0xea
    b57c:	e59f0480 	ldr	r0, [pc, #1152]	; ba04 <noPixel$+0xd4>
    b580:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b584:	ebfffc81 	bl	a790 <drawRect>
    b588:	e3a04000 	mov	r4, #0
    b58c:	e3a03078 	mov	r3, #120	; 0x78
    b590:	e3a0201e 	mov	r2, #30
    b594:	e3a010ae 	mov	r1, #174	; 0xae
    b598:	e3a00f6b 	mov	r0, #428	; 0x1ac
    b59c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b5a0:	ebfffc7a 	bl	a790 <drawRect>
    b5a4:	e3a04000 	mov	r4, #0
    b5a8:	e3a03078 	mov	r3, #120	; 0x78
    b5ac:	e3a0201e 	mov	r2, #30
    b5b0:	e3a010ae 	mov	r1, #174	; 0xae
    b5b4:	e3a00f7a 	mov	r0, #488	; 0x1e8
    b5b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b5bc:	ebfffc73 	bl	a790 <drawRect>
    b5c0:	e3a04000 	mov	r4, #0
    b5c4:	e3a0301e 	mov	r3, #30
    b5c8:	e3a0201e 	mov	r2, #30
    b5cc:	e59f1434 	ldr	r1, [pc, #1076]	; ba08 <noPixel$+0xd8>
    b5d0:	e59f0434 	ldr	r0, [pc, #1076]	; ba0c <noPixel$+0xdc>
    b5d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b5d8:	ebfffc6c 	bl	a790 <drawRect>
    b5dc:	e3a04000 	mov	r4, #0
    b5e0:	e3a03096 	mov	r3, #150	; 0x96
    b5e4:	e3a0204b 	mov	r2, #75	; 0x4b
    b5e8:	e3a010ae 	mov	r1, #174	; 0xae
    b5ec:	e3a00e21 	mov	r0, #528	; 0x210
    b5f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b5f4:	ebfffc65 	bl	a790 <drawRect>
    b5f8:	e59f4350 	ldr	r4, [pc, #848]	; b950 <noPixel$+0x20>
    b5fc:	e3a0301e 	mov	r3, #30
    b600:	e3a0202d 	mov	r2, #45	; 0x2d
    b604:	e3a01f42 	mov	r1, #264	; 0x108
    b608:	e3a00e21 	mov	r0, #528	; 0x210
    b60c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b610:	ebfffc5e 	bl	a790 <drawRect>
    b614:	e59f4334 	ldr	r4, [pc, #820]	; b950 <noPixel$+0x20>
    b618:	e3a0301e 	mov	r3, #30
    b61c:	e3a0202d 	mov	r2, #45	; 0x2d
    b620:	e3a010cc 	mov	r1, #204	; 0xcc
    b624:	e59f03e4 	ldr	r0, [pc, #996]	; ba10 <noPixel$+0xe0>
    b628:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b62c:	ebfffc57 	bl	a790 <drawRect>
    b630:	e3a04000 	mov	r4, #0
    b634:	e3a03096 	mov	r3, #150	; 0x96
    b638:	e3a0204b 	mov	r2, #75	; 0x4b
    b63c:	e3a010ae 	mov	r1, #174	; 0xae
    b640:	e59f03cc 	ldr	r0, [pc, #972]	; ba14 <noPixel$+0xe4>
    b644:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b648:	ebfffc50 	bl	a790 <drawRect>
    b64c:	e59f42fc 	ldr	r4, [pc, #764]	; b950 <noPixel$+0x20>
    b650:	e3a0301e 	mov	r3, #30
    b654:	e3a0202d 	mov	r2, #45	; 0x2d
    b658:	e3a01f42 	mov	r1, #264	; 0x108
    b65c:	e59f03b4 	ldr	r0, [pc, #948]	; ba18 <noPixel$+0xe8>
    b660:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b664:	ebfffc49 	bl	a790 <drawRect>
    b668:	e59f42e0 	ldr	r4, [pc, #736]	; b950 <noPixel$+0x20>
    b66c:	e3a0301e 	mov	r3, #30
    b670:	e3a0202d 	mov	r2, #45	; 0x2d
    b674:	e3a010cc 	mov	r1, #204	; 0xcc
    b678:	e59f0398 	ldr	r0, [pc, #920]	; ba18 <noPixel$+0xe8>
    b67c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b680:	ebfffc42 	bl	a790 <drawRect>
    b684:	e3a04000 	mov	r4, #0
    b688:	e3a03096 	mov	r3, #150	; 0x96
    b68c:	e3a0201e 	mov	r2, #30
    b690:	e3a010ae 	mov	r1, #174	; 0xae
    b694:	e59f0380 	ldr	r0, [pc, #896]	; ba1c <noPixel$+0xec>
    b698:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b69c:	ebfffc3b 	bl	a790 <drawRect>
    b6a0:	e3a04000 	mov	r4, #0
    b6a4:	e3a0301e 	mov	r3, #30
    b6a8:	e3a0201e 	mov	r2, #30
    b6ac:	e3a010ae 	mov	r1, #174	; 0xae
    b6b0:	e3a00fb6 	mov	r0, #728	; 0x2d8
    b6b4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b6b8:	ebfffc34 	bl	a790 <drawRect>
    b6bc:	e3a04000 	mov	r4, #0
    b6c0:	e3a0301e 	mov	r3, #30
    b6c4:	e3a0201e 	mov	r2, #30
    b6c8:	e59f1338 	ldr	r1, [pc, #824]	; ba08 <noPixel$+0xd8>
    b6cc:	e3a00fb6 	mov	r0, #728	; 0x2d8
    b6d0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b6d4:	ebfffc2d 	bl	a790 <drawRect>
    b6d8:	e3a04000 	mov	r4, #0
    b6dc:	e3a0305a 	mov	r3, #90	; 0x5a
    b6e0:	e3a0201e 	mov	r2, #30
    b6e4:	e3a010cc 	mov	r1, #204	; 0xcc
    b6e8:	e59f0330 	ldr	r0, [pc, #816]	; ba20 <noPixel$+0xf0>
    b6ec:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b6f0:	ebfffc26 	bl	a790 <drawRect>
    b6f4:	e8bd8010 	pop	{r4, pc}

0000b6f8 <drawTitle>:
    b6f8:	e92d4010 	push	{r4, lr}
    b6fc:	e3a04000 	mov	r4, #0
    b700:	e3a0301e 	mov	r3, #30
    b704:	e3a0205a 	mov	r2, #90	; 0x5a
    b708:	e3a0106d 	mov	r1, #109	; 0x6d
    b70c:	e3a000e3 	mov	r0, #227	; 0xe3
    b710:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b714:	ebfffc1d 	bl	a790 <drawRect>
    b718:	e3a04000 	mov	r4, #0
    b71c:	e3a03078 	mov	r3, #120	; 0x78
    b720:	e3a0201e 	mov	r2, #30
    b724:	e3a0108b 	mov	r1, #139	; 0x8b
    b728:	e59f02f4 	ldr	r0, [pc, #756]	; ba24 <noPixel$+0xf4>
    b72c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b730:	ebfffc16 	bl	a790 <drawRect>
    b734:	e3a04000 	mov	r4, #0
    b738:	e3a03096 	mov	r3, #150	; 0x96
    b73c:	e3a0204b 	mov	r2, #75	; 0x4b
    b740:	e3a0106d 	mov	r1, #109	; 0x6d
    b744:	e59f02dc 	ldr	r0, [pc, #732]	; ba28 <noPixel$+0xf8>
    b748:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b74c:	ebfffc0f 	bl	a790 <drawRect>
    b750:	e59f421c 	ldr	r4, [pc, #540]	; b974 <noPixel$+0x44>
    b754:	e3a0301e 	mov	r3, #30
    b758:	e3a0202d 	mov	r2, #45	; 0x2d
    b75c:	e3a0108b 	mov	r1, #139	; 0x8b
    b760:	e59f02c4 	ldr	r0, [pc, #708]	; ba2c <noPixel$+0xfc>
    b764:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b768:	ebfffc08 	bl	a790 <drawRect>
    b76c:	e59f4200 	ldr	r4, [pc, #512]	; b974 <noPixel$+0x44>
    b770:	e3a0301e 	mov	r3, #30
    b774:	e3a0202d 	mov	r2, #45	; 0x2d
    b778:	e3a010c7 	mov	r1, #199	; 0xc7
    b77c:	e59f02a8 	ldr	r0, [pc, #680]	; ba2c <noPixel$+0xfc>
    b780:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b784:	ebfffc01 	bl	a790 <drawRect>
    b788:	e3a04000 	mov	r4, #0
    b78c:	e3a0301e 	mov	r3, #30
    b790:	e3a0205a 	mov	r2, #90	; 0x5a
    b794:	e3a0106d 	mov	r1, #109	; 0x6d
    b798:	e3a00f67 	mov	r0, #412	; 0x19c
    b79c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7a0:	ebfffbfa 	bl	a790 <drawRect>
    b7a4:	e3a04000 	mov	r4, #0
    b7a8:	e3a03078 	mov	r3, #120	; 0x78
    b7ac:	e3a0201e 	mov	r2, #30
    b7b0:	e3a0108b 	mov	r1, #139	; 0x8b
    b7b4:	e59f0274 	ldr	r0, [pc, #628]	; ba30 <noPixel$+0x100>
    b7b8:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7bc:	ebfffbf3 	bl	a790 <drawRect>
    b7c0:	e3a04000 	mov	r4, #0
    b7c4:	e3a0305a 	mov	r3, #90	; 0x5a
    b7c8:	e3a0205a 	mov	r2, #90	; 0x5a
    b7cc:	e3a0106d 	mov	r1, #109	; 0x6d
    b7d0:	e3a00c02 	mov	r0, #512	; 0x200
    b7d4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7d8:	ebfffbec 	bl	a790 <drawRect>
    b7dc:	e59f4190 	ldr	r4, [pc, #400]	; b974 <noPixel$+0x44>
    b7e0:	e3a0301e 	mov	r3, #30
    b7e4:	e3a0201e 	mov	r2, #30
    b7e8:	e3a0108b 	mov	r1, #139	; 0x8b
    b7ec:	e59f0240 	ldr	r0, [pc, #576]	; ba34 <noPixel$+0x104>
    b7f0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b7f4:	ebfffbe5 	bl	a790 <drawRect>
    b7f8:	e3a04000 	mov	r4, #0
    b7fc:	e3a0303c 	mov	r3, #60	; 0x3c
    b800:	e3a0201e 	mov	r2, #30
    b804:	e3a010c7 	mov	r1, #199	; 0xc7
    b808:	e3a00c02 	mov	r0, #512	; 0x200
    b80c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b810:	ebfffbde 	bl	a790 <drawRect>
    b814:	e3a04000 	mov	r4, #0
    b818:	e3a0301e 	mov	r3, #30
    b81c:	e3a0201e 	mov	r2, #30
    b820:	e3a010c7 	mov	r1, #199	; 0xc7
    b824:	e59f0208 	ldr	r0, [pc, #520]	; ba34 <noPixel$+0x104>
    b828:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b82c:	ebfffbd7 	bl	a790 <drawRect>
    b830:	e3a04000 	mov	r4, #0
    b834:	e3a0301e 	mov	r3, #30
    b838:	e3a0201e 	mov	r2, #30
    b83c:	e3a010e5 	mov	r1, #229	; 0xe5
    b840:	e3a00f8f 	mov	r0, #572	; 0x23c
    b844:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b848:	ebfffbd0 	bl	a790 <drawRect>
    b84c:	e3a04000 	mov	r4, #0
    b850:	e3a0301e 	mov	r3, #30
    b854:	e3a0205a 	mov	r2, #90	; 0x5a
    b858:	e3a0106d 	mov	r1, #109	; 0x6d
    b85c:	e3a00f99 	mov	r0, #612	; 0x264
    b860:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b864:	ebfffbc9 	bl	a790 <drawRect>
    b868:	e3a04000 	mov	r4, #0
    b86c:	e3a0301e 	mov	r3, #30
    b870:	e3a0205a 	mov	r2, #90	; 0x5a
    b874:	e3a010e5 	mov	r1, #229	; 0xe5
    b878:	e3a00f99 	mov	r0, #612	; 0x264
    b87c:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b880:	ebfffbc2 	bl	a790 <drawRect>
    b884:	e3a04000 	mov	r4, #0
    b888:	e3a0305a 	mov	r3, #90	; 0x5a
    b88c:	e3a0201e 	mov	r2, #30
    b890:	e3a0108b 	mov	r1, #139	; 0x8b
    b894:	e59f019c 	ldr	r0, [pc, #412]	; ba38 <noPixel$+0x108>
    b898:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b89c:	ebfffbbb 	bl	a790 <drawRect>
    b8a0:	e3a04000 	mov	r4, #0
    b8a4:	e3a03096 	mov	r3, #150	; 0x96
    b8a8:	e3a02050 	mov	r2, #80	; 0x50
    b8ac:	e3a0106d 	mov	r1, #109	; 0x6d
    b8b0:	e3a00fb2 	mov	r0, #712	; 0x2c8
    b8b4:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b8b8:	ebfffbb4 	bl	a790 <drawRect>
    b8bc:	e59f40b0 	ldr	r4, [pc, #176]	; b974 <noPixel$+0x44>
    b8c0:	e3a0301e 	mov	r3, #30
    b8c4:	e3a02032 	mov	r2, #50	; 0x32
    b8c8:	e3a0108b 	mov	r1, #139	; 0x8b
    b8cc:	e59f0168 	ldr	r0, [pc, #360]	; ba3c <noPixel$+0x10c>
    b8d0:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b8d4:	ebfffbad 	bl	a790 <drawRect>
    b8d8:	e59f4094 	ldr	r4, [pc, #148]	; b974 <noPixel$+0x44>
    b8dc:	e3a0301e 	mov	r3, #30
    b8e0:	e3a02032 	mov	r2, #50	; 0x32
    b8e4:	e3a010c7 	mov	r1, #199	; 0xc7
    b8e8:	e3a00fb2 	mov	r0, #712	; 0x2c8
    b8ec:	e92d001f 	push	{r0, r1, r2, r3, r4}
    b8f0:	ebfffba6 	bl	a790 <drawRect>
    b8f4:	e8bd8010 	pop	{r4, pc}

0000b8f8 <DrawChar>:
    b8f8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    b8fc:	e1a09001 	mov	r9, r1
    b900:	e59f4138 	ldr	r4, [pc, #312]	; ba40 <noPixel$+0x110>
    b904:	e0844200 	add	r4, r4, r0, lsl #4
    b908:	e1a06002 	mov	r6, r2

0000b90c <charLoop$>:
    b90c:	e1a05003 	mov	r5, r3
    b910:	e3a08001 	mov	r8, #1
    b914:	e4d47001 	ldrb	r7, [r4], #1

0000b918 <rowLoop$>:
    b918:	e1170008 	tst	r7, r8
    b91c:	0a000003 	beq	b930 <noPixel$>
    b920:	e1a00005 	mov	r0, r5
    b924:	e1a01006 	mov	r1, r6
    b928:	e1a02009 	mov	r2, r9
    b92c:	ebfffb8d 	bl	a768 <drawPixel>

0000b930 <noPixel$>:
    b930:	e2855001 	add	r5, r5, #1
    b934:	e1a08088 	lsl	r8, r8, #1
    b938:	e3180c01 	tst	r8, #256	; 0x100
    b93c:	0afffff5 	beq	b918 <rowLoop$>
    b940:	e2866001 	add	r6, r6, #1
    b944:	e314000f 	tst	r4, #15
    b948:	1affffef 	bne	b90c <charLoop$>
    b94c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    b950:	0000967f 	.word	0x0000967f
    b954:	0000027a 	.word	0x0000027a
    b958:	000001b5 	.word	0x000001b5
    b95c:	00009cf0 	.word	0x00009cf0
    b960:	000001e3 	.word	0x000001e3
    b964:	00000221 	.word	0x00000221
    b968:	00009ce0 	.word	0x00009ce0
    b96c:	000001eb 	.word	0x000001eb
    b970:	00009420 	.word	0x00009420
    b974:	0000297e 	.word	0x0000297e
    b978:	00009c90 	.word	0x00009c90
    b97c:	00000172 	.word	0x00000172
    b980:	00009cd0 	.word	0x00009cd0
    b984:	000001e7 	.word	0x000001e7
    b988:	00000247 	.word	0x00000247
    b98c:	00000285 	.word	0x00000285
    b990:	0000ffff 	.word	0x0000ffff
    b994:	000001df 	.word	0x000001df
    b998:	00000243 	.word	0x00000243
    b99c:	00003707 	.word	0x00003707
    b9a0:	0000011f 	.word	0x0000011f
    b9a4:	0000015b 	.word	0x0000015b
    b9a8:	0000013d 	.word	0x0000013d
    b9ac:	00000223 	.word	0x00000223
    b9b0:	0000025f 	.word	0x0000025f
    b9b4:	00000205 	.word	0x00000205
    b9b8:	00000241 	.word	0x00000241
    b9bc:	00000287 	.word	0x00000287
    b9c0:	000002a5 	.word	0x000002a5
    b9c4:	000002eb 	.word	0x000002eb
    b9c8:	00000309 	.word	0x00000309
    b9cc:	00000327 	.word	0x00000327
    b9d0:	00000122 	.word	0x00000122
    b9d4:	00000345 	.word	0x00000345
    b9d8:	00000363 	.word	0x00000363
    b9dc:	0000038b 	.word	0x0000038b
    b9e0:	0000ff27 	.word	0x0000ff27
    b9e4:	00000115 	.word	0x00000115
    b9e8:	00000179 	.word	0x00000179
    b9ec:	00000269 	.word	0x00000269
    b9f0:	000002cd 	.word	0x000002cd
    b9f4:	00000331 	.word	0x00000331
    b9f8:	0000034f 	.word	0x0000034f
    b9fc:	00000d7f 	.word	0x00000d7f
    ba00:	00000102 	.word	0x00000102
    ba04:	00000166 	.word	0x00000166
    ba08:	00000126 	.word	0x00000126
    ba0c:	000001ca 	.word	0x000001ca
    ba10:	0000022e 	.word	0x0000022e
    ba14:	00000265 	.word	0x00000265
    ba18:	00000283 	.word	0x00000283
    ba1c:	000002ba 	.word	0x000002ba
    ba20:	000002f6 	.word	0x000002f6
    ba24:	00000101 	.word	0x00000101
    ba28:	00000147 	.word	0x00000147
    ba2c:	00000165 	.word	0x00000165
    ba30:	000001ba 	.word	0x000001ba
    ba34:	0000021e 	.word	0x0000021e
    ba38:	00000282 	.word	0x00000282
    ba3c:	000002e6 	.word	0x000002e6
    ba40:	00009490 	.word	0x00009490
