
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00046a 	b	91b0 <main>

Disassembly of section .text:

00009124 <EnableJTAG>:
    9124:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9128:	e59f0064 	ldr	r0, [pc, #100]	; 9194 <dowaitloop+0xc>
    912c:	e0211001 	eor	r1, r1, r1
    9130:	e5801000 	str	r1, [r0]
    9134:	eb000012 	bl	9184 <dowait>
    9138:	e59f0058 	ldr	r0, [pc, #88]	; 9198 <dowaitloop+0x10>
    913c:	e59f1058 	ldr	r1, [pc, #88]	; 919c <dowaitloop+0x14>
    9140:	e5801000 	str	r1, [r0]
    9144:	eb00000e 	bl	9184 <dowait>
    9148:	e0211001 	eor	r1, r1, r1
    914c:	e5801000 	str	r1, [r0]
    9150:	e59f0048 	ldr	r0, [pc, #72]	; 91a0 <dowaitloop+0x18>
    9154:	e5901000 	ldr	r1, [r0]
    9158:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    915c:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9160:	e5801000 	str	r1, [r0]
    9164:	e59f0038 	ldr	r0, [pc, #56]	; 91a4 <dowaitloop+0x1c>
    9168:	e5901000 	ldr	r1, [r0]
    916c:	e59f2034 	ldr	r2, [pc, #52]	; 91a8 <dowaitloop+0x20>
    9170:	e1c11002 	bic	r1, r1, r2
    9174:	e59f2030 	ldr	r2, [pc, #48]	; 91ac <dowaitloop+0x24>
    9178:	e1811002 	orr	r1, r1, r2
    917c:	e5801000 	str	r1, [r0]
    9180:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009184 <dowait>:
    9184:	e3a02f4b 	mov	r2, #300	; 0x12c

00009188 <dowaitloop>:
    9188:	e2522001 	subs	r2, r2, #1
    918c:	1afffffd 	bne	9188 <dowaitloop>
    9190:	e12fff1e 	bx	lr
    9194:	3f200094 	.word	0x3f200094
    9198:	3f200098 	.word	0x3f200098
    919c:	0bc00010 	.word	0x0bc00010
    91a0:	3f200000 	.word	0x3f200000
    91a4:	3f200008 	.word	0x3f200008
    91a8:	00e3ffc0 	.word	0x00e3ffc0
    91ac:	0061b6c0 	.word	0x0061b6c0

000091b0 <main>:
    91b0:	e3a0d902 	mov	sp, #32768	; 0x8000
    91b4:	ebffffda 	bl	9124 <EnableJTAG>
    91b8:	eb000045 	bl	92d4 <InitUART>
    91bc:	e59f0100 	ldr	r0, [pc, #256]	; 92c4 <loopEnd___+0x4>
    91c0:	e59f1100 	ldr	r1, [pc, #256]	; 92c8 <loopEnd___+0x8>
    91c4:	e0411000 	sub	r1, r1, r0
    91c8:	eb00007f 	bl	93cc <WriteStringUART>
    91cc:	e59f00f8 	ldr	r0, [pc, #248]	; 92cc <loopEnd___+0xc>
    91d0:	e3a01001 	mov	r1, #1
    91d4:	eb00007c 	bl	93cc <WriteStringUART>
    91d8:	e59f00e4 	ldr	r0, [pc, #228]	; 92c4 <loopEnd___+0x4>
    91dc:	e59f10e4 	ldr	r1, [pc, #228]	; 92c8 <loopEnd___+0x8>
    91e0:	eb000005 	bl	91fc <sortArray>
    91e4:	e59f00d8 	ldr	r0, [pc, #216]	; 92c4 <loopEnd___+0x4>
    91e8:	e59f10d8 	ldr	r1, [pc, #216]	; 92c8 <loopEnd___+0x8>
    91ec:	eb00000f 	bl	9230 <getMedian>
    91f0:	eb000027 	bl	9294 <uDecToASCIITest>
    91f4:	eaffffff 	b	91f8 <stop>

000091f8 <stop>:
    91f8:	eafffffe 	b	91f8 <stop>

000091fc <sortArray>:
    91fc:	e1a02000 	mov	r2, r0

00009200 <loopBody>:
    9200:	e4d03001 	ldrb	r3, [r0], #1
    9204:	e5d04000 	ldrb	r4, [r0]
    9208:	e1500001 	cmp	r0, r1
    920c:	0a000006 	beq	922c <loopEnd>
    9210:	e1530004 	cmp	r3, r4
    9214:	ba000000 	blt	921c <notSorted>
    9218:	eafffff8 	b	9200 <loopBody>

0000921c <notSorted>:
    921c:	e4403001 	strb	r3, [r0], #-1
    9220:	e5c04000 	strb	r4, [r0]
    9224:	e1a00002 	mov	r0, r2
    9228:	eafffff4 	b	9200 <loopBody>

0000922c <loopEnd>:
    922c:	e1a0f00e 	mov	pc, lr

00009230 <getMedian>:
    9230:	e1a02000 	mov	r2, r0

00009234 <loopBody_>:
    9234:	e2800001 	add	r0, r0, #1
    9238:	e2411001 	sub	r1, r1, #1
    923c:	e1500001 	cmp	r0, r1
    9240:	aa000000 	bge	9248 <loopEnd_>
    9244:	eafffffa 	b	9234 <loopBody_>

00009248 <loopEnd_>:
    9248:	e5d12000 	ldrb	r2, [r1]
    924c:	e1a0f00e 	mov	pc, lr

00009250 <uDecToASCII>:
    9250:	e1a03000 	mov	r3, r0
    9254:	e1a04003 	mov	r4, r3
    9258:	e3a0500a 	mov	r5, #10
    925c:	e59f006c 	ldr	r0, [pc, #108]	; 92d0 <loopEnd___+0x10>
    9260:	e2400001 	sub	r0, r0, #1

00009264 <loopBody__>:
    9264:	e734f514 	udiv	r4, r4, r5
    9268:	e0060594 	mul	r6, r4, r5
    926c:	e0436006 	sub	r6, r3, r6
    9270:	e2866030 	add	r6, r6, #48	; 0x30
    9274:	e4406001 	strb	r6, [r0], #-1
    9278:	e1a03004 	mov	r3, r4
    927c:	e3530000 	cmp	r3, #0
    9280:	da000000 	ble	9288 <loopEnd__>
    9284:	eafffff6 	b	9264 <loopBody__>

00009288 <loopEnd__>:
    9288:	e59f1040 	ldr	r1, [pc, #64]	; 92d0 <loopEnd___+0x10>
    928c:	e0411000 	sub	r1, r1, r0
    9290:	e1a0f00e 	mov	pc, lr

00009294 <uDecToASCIITest>:
    9294:	e3a08000 	mov	r8, #0
    9298:	e3a09096 	mov	r9, #150	; 0x96

0000929c <loopBody___>:
    929c:	e1a00008 	mov	r0, r8
    92a0:	e2888001 	add	r8, r8, #1
    92a4:	e1a0d00e 	mov	sp, lr
    92a8:	ebffffe8 	bl	9250 <uDecToASCII>
    92ac:	eb000046 	bl	93cc <WriteStringUART>
    92b0:	e1a0e00d 	mov	lr, sp
    92b4:	e1580009 	cmp	r8, r9
    92b8:	ca000000 	bgt	92c0 <loopEnd___>
    92bc:	eafffff6 	b	929c <loopBody___>

000092c0 <loopEnd___>:
    92c0:	e1a0f00e 	mov	pc, lr
    92c4:	00009080 	.word	0x00009080
    92c8:	00009089 	.word	0x00009089
    92cc:	0000911f 	.word	0x0000911f
    92d0:	00009093 	.word	0x00009093

000092d4 <InitUART>:
    92d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    92d8:	e59f017c 	ldr	r0, [pc, #380]	; 945c <WaitForCycles+0x10>
    92dc:	e3a01001 	mov	r1, #1
    92e0:	e5801000 	str	r1, [r0]
    92e4:	e59f0174 	ldr	r0, [pc, #372]	; 9460 <WaitForCycles+0x14>
    92e8:	e0211001 	eor	r1, r1, r1
    92ec:	e5801000 	str	r1, [r0]
    92f0:	e59f016c 	ldr	r0, [pc, #364]	; 9464 <WaitForCycles+0x18>
    92f4:	e0211001 	eor	r1, r1, r1
    92f8:	e5801000 	str	r1, [r0]
    92fc:	e59f0164 	ldr	r0, [pc, #356]	; 9468 <WaitForCycles+0x1c>
    9300:	e3a01003 	mov	r1, #3
    9304:	e5801000 	str	r1, [r0]
    9308:	e59f015c 	ldr	r0, [pc, #348]	; 946c <WaitForCycles+0x20>
    930c:	e0211001 	eor	r1, r1, r1
    9310:	e5801000 	str	r1, [r0]
    9314:	e59f0144 	ldr	r0, [pc, #324]	; 9460 <WaitForCycles+0x14>
    9318:	e0211001 	eor	r1, r1, r1
    931c:	e5801000 	str	r1, [r0]
    9320:	e59f0148 	ldr	r0, [pc, #328]	; 9470 <WaitForCycles+0x24>
    9324:	e3a010c6 	mov	r1, #198	; 0xc6
    9328:	e5801000 	str	r1, [r0]
    932c:	e59f0140 	ldr	r0, [pc, #320]	; 9474 <WaitForCycles+0x28>
    9330:	e59f1140 	ldr	r1, [pc, #320]	; 9478 <WaitForCycles+0x2c>
    9334:	e5801000 	str	r1, [r0]
    9338:	e3a0000e 	mov	r0, #14
    933c:	e3a01002 	mov	r1, #2
    9340:	eb000053 	bl	9494 <SetGpioFunction>
    9344:	e3a0000f 	mov	r0, #15
    9348:	e3a01002 	mov	r1, #2
    934c:	eb000050 	bl	9494 <SetGpioFunction>
    9350:	e59f0124 	ldr	r0, [pc, #292]	; 947c <WaitForCycles+0x30>
    9354:	e0211001 	eor	r1, r1, r1
    9358:	e5801000 	str	r1, [r0]
    935c:	e3a00096 	mov	r0, #150	; 0x96
    9360:	eb000039 	bl	944c <WaitForCycles>
    9364:	e59f0114 	ldr	r0, [pc, #276]	; 9480 <WaitForCycles+0x34>
    9368:	e3a01903 	mov	r1, #49152	; 0xc000
    936c:	e5801000 	str	r1, [r0]
    9370:	e3a00096 	mov	r0, #150	; 0x96
    9374:	eb000034 	bl	944c <WaitForCycles>
    9378:	e59f0100 	ldr	r0, [pc, #256]	; 9480 <WaitForCycles+0x34>
    937c:	e0211001 	eor	r1, r1, r1
    9380:	e5801000 	str	r1, [r0]
    9384:	e59f00d8 	ldr	r0, [pc, #216]	; 9464 <WaitForCycles+0x18>
    9388:	e3a01003 	mov	r1, #3
    938c:	e5801000 	str	r1, [r0]
    9390:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009394 <PutCharUART>:
    9394:	e59f20e8 	ldr	r2, [pc, #232]	; 9484 <WaitForCycles+0x38>

00009398 <putWaitLoop$>:
    9398:	e5921000 	ldr	r1, [r2]
    939c:	e3110020 	tst	r1, #32
    93a0:	0afffffc 	beq	9398 <putWaitLoop$>
    93a4:	e59f20dc 	ldr	r2, [pc, #220]	; 9488 <WaitForCycles+0x3c>
    93a8:	e5820000 	str	r0, [r2]
    93ac:	e1a0f00e 	mov	pc, lr

000093b0 <GetCharUART>:
    93b0:	e59f20cc 	ldr	r2, [pc, #204]	; 9484 <WaitForCycles+0x38>

000093b4 <getWaitLoop$>:
    93b4:	e5921000 	ldr	r1, [r2]
    93b8:	e3110001 	tst	r1, #1
    93bc:	0afffffc 	beq	93b4 <getWaitLoop$>
    93c0:	e59f20c0 	ldr	r2, [pc, #192]	; 9488 <WaitForCycles+0x3c>
    93c4:	e5920000 	ldr	r0, [r2]
    93c8:	e1a0f00e 	mov	pc, lr

000093cc <WriteStringUART>:
    93cc:	e92d4070 	push	{r4, r5, r6, lr}
    93d0:	e1a04000 	mov	r4, r0
    93d4:	e1a05001 	mov	r5, r1
    93d8:	e3a06000 	mov	r6, #0

000093dc <writeLoop$>:
    93dc:	e3550000 	cmp	r5, #0
    93e0:	da000004 	ble	93f8 <writeLoopEnd$>
    93e4:	e7d40006 	ldrb	r0, [r4, r6]
    93e8:	ebffffe9 	bl	9394 <PutCharUART>
    93ec:	e2866001 	add	r6, r6, #1
    93f0:	e2455001 	sub	r5, r5, #1
    93f4:	eafffff8 	b	93dc <writeLoop$>

000093f8 <writeLoopEnd$>:
    93f8:	e8bd8070 	pop	{r4, r5, r6, pc}

000093fc <ReadLineUART>:
    93fc:	e92d4070 	push	{r4, r5, r6, lr}
    9400:	e1a04000 	mov	r4, r0
    9404:	e1a05001 	mov	r5, r1
    9408:	e3a06000 	mov	r6, #0

0000940c <readLoop$>:
    940c:	e1360005 	teq	r6, r5
    9410:	0a00000b 	beq	9444 <readLoopEnd$>
    9414:	ebffffe5 	bl	93b0 <GetCharUART>
    9418:	ebffffdd 	bl	9394 <PutCharUART>
    941c:	e5c40000 	strb	r0, [r4]
    9420:	e2866001 	add	r6, r6, #1
    9424:	e2844001 	add	r4, r4, #1
    9428:	e330000d 	teq	r0, #13
    942c:	1afffff6 	bne	940c <readLoop$>
    9430:	e3a0000a 	mov	r0, #10
    9434:	ebffffd6 	bl	9394 <PutCharUART>
    9438:	e2444001 	sub	r4, r4, #1
    943c:	e3a00000 	mov	r0, #0
    9440:	e5c40000 	strb	r0, [r4]

00009444 <readLoopEnd$>:
    9444:	e2460001 	sub	r0, r6, #1
    9448:	e8bd8070 	pop	{r4, r5, r6, pc}

0000944c <WaitForCycles>:
    944c:	e2400001 	sub	r0, r0, #1
    9450:	e3500000 	cmp	r0, #0
    9454:	aafffffc 	bge	944c <WaitForCycles>
    9458:	e1a0f00e 	mov	pc, lr
    945c:	3f215004 	.word	0x3f215004
    9460:	3f215044 	.word	0x3f215044
    9464:	3f215060 	.word	0x3f215060
    9468:	3f21504c 	.word	0x3f21504c
    946c:	3f215050 	.word	0x3f215050
    9470:	3f215048 	.word	0x3f215048
    9474:	3f215068 	.word	0x3f215068
    9478:	0000010e 	.word	0x0000010e
    947c:	3f200094 	.word	0x3f200094
    9480:	3f200098 	.word	0x3f200098
    9484:	3f215054 	.word	0x3f215054
    9488:	3f215040 	.word	0x3f215040

0000948c <GetGpioAddress>:
    948c:	e59f00cc 	ldr	r0, [pc, #204]	; 9560 <GetGpio+0x44>
    9490:	e1a0f00e 	mov	pc, lr

00009494 <SetGpioFunction>:
    9494:	e3500035 	cmp	r0, #53	; 0x35
    9498:	93510007 	cmpls	r1, #7
    949c:	81a0f00e 	movhi	pc, lr
    94a0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    94a4:	e1a02000 	mov	r2, r0
    94a8:	ebfffff7 	bl	948c <GetGpioAddress>

000094ac <functionLoop$>:
    94ac:	e3520009 	cmp	r2, #9
    94b0:	8242200a 	subhi	r2, r2, #10
    94b4:	82800004 	addhi	r0, r0, #4
    94b8:	8afffffb 	bhi	94ac <functionLoop$>
    94bc:	e0822082 	add	r2, r2, r2, lsl #1
    94c0:	e1a01211 	lsl	r1, r1, r2
    94c4:	e3a03007 	mov	r3, #7
    94c8:	e1a03213 	lsl	r3, r3, r2
    94cc:	e5902000 	ldr	r2, [r0]
    94d0:	e1c22003 	bic	r2, r2, r3
    94d4:	e1811002 	orr	r1, r1, r2
    94d8:	e5801000 	str	r1, [r0]
    94dc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000094e0 <SetGpio>:
    94e0:	e3500035 	cmp	r0, #53	; 0x35
    94e4:	81a0f00e 	movhi	pc, lr
    94e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    94ec:	e1a02000 	mov	r2, r0
    94f0:	ebffffe5 	bl	948c <GetGpioAddress>
    94f4:	e1a032a2 	lsr	r3, r2, #5
    94f8:	e1a03103 	lsl	r3, r3, #2
    94fc:	e0800003 	add	r0, r0, r3
    9500:	e202201f 	and	r2, r2, #31
    9504:	e3a03001 	mov	r3, #1
    9508:	e1a03213 	lsl	r3, r3, r2
    950c:	e3310000 	teq	r1, #0
    9510:	05803028 	streq	r3, [r0, #40]	; 0x28
    9514:	1580301c 	strne	r3, [r0, #28]
    9518:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000951c <GetGpio>:
    951c:	e3500035 	cmp	r0, #53	; 0x35
    9520:	81a0f00e 	movhi	pc, lr
    9524:	e92d4010 	push	{r4, lr}
    9528:	e1a04000 	mov	r4, r0
    952c:	ebffffd6 	bl	948c <GetGpioAddress>
    9530:	e1a032a4 	lsr	r3, r4, #5
    9534:	e1a03103 	lsl	r3, r3, #2
    9538:	e0800003 	add	r0, r0, r3
    953c:	e204401f 	and	r4, r4, #31
    9540:	e3a03001 	mov	r3, #1
    9544:	e1a03413 	lsl	r3, r3, r4
    9548:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    954c:	e0044003 	and	r4, r4, r3
    9550:	e3340000 	teq	r4, #0
    9554:	03a00000 	moveq	r0, #0
    9558:	13a00001 	movne	r0, #1
    955c:	e8bd8010 	pop	{r4, pc}
    9560:	3f200000 	.word	0x3f200000
