
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	eaffffff 	b	8004 <main>

Disassembly of section .text:

00008004 <main>:
    8004:	e3a0d902 	mov	sp, #32768	; 0x8000
    8008:	eb000010 	bl	8050 <EnableJTAG>
    800c:	e3a00006 	mov	r0, #6
    8010:	eb000000 	bl	8018 <Fibb>

00008014 <haltLoop$>:
    8014:	eafffffe 	b	8014 <haltLoop$>

00008018 <Fibb>:
    8018:	e92d4030 	push	{r4, r5, lr}
    801c:	e3500000 	cmp	r0, #0
    8020:	03a00001 	moveq	r0, #1
    8024:	0a000008 	beq	804c <end>
    8028:	e3500001 	cmp	r0, #1
    802c:	0a000006 	beq	804c <end>
    8030:	e1a04000 	mov	r4, r0
    8034:	e2440001 	sub	r0, r4, #1
    8038:	ebfffff6 	bl	8018 <Fibb>
    803c:	e1a05000 	mov	r5, r0
    8040:	e2440002 	sub	r0, r4, #2
    8044:	ebfffff3 	bl	8018 <Fibb>
    8048:	e0800005 	add	r0, r0, r5

0000804c <end>:
    804c:	e8bd8030 	pop	{r4, r5, pc}

00008050 <EnableJTAG>:
    8050:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8054:	e59f0064 	ldr	r0, [pc, #100]	; 80c0 <dowaitloop+0xc>
    8058:	e0211001 	eor	r1, r1, r1
    805c:	e5801000 	str	r1, [r0]
    8060:	eb000012 	bl	80b0 <dowait>
    8064:	e59f0058 	ldr	r0, [pc, #88]	; 80c4 <dowaitloop+0x10>
    8068:	e59f1058 	ldr	r1, [pc, #88]	; 80c8 <dowaitloop+0x14>
    806c:	e5801000 	str	r1, [r0]
    8070:	eb00000e 	bl	80b0 <dowait>
    8074:	e0211001 	eor	r1, r1, r1
    8078:	e5801000 	str	r1, [r0]
    807c:	e59f0048 	ldr	r0, [pc, #72]	; 80cc <dowaitloop+0x18>
    8080:	e5901000 	ldr	r1, [r0]
    8084:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    8088:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    808c:	e5801000 	str	r1, [r0]
    8090:	e59f0038 	ldr	r0, [pc, #56]	; 80d0 <dowaitloop+0x1c>
    8094:	e5901000 	ldr	r1, [r0]
    8098:	e59f2034 	ldr	r2, [pc, #52]	; 80d4 <dowaitloop+0x20>
    809c:	e1c11002 	bic	r1, r1, r2
    80a0:	e59f2030 	ldr	r2, [pc, #48]	; 80d8 <dowaitloop+0x24>
    80a4:	e1811002 	orr	r1, r1, r2
    80a8:	e5801000 	str	r1, [r0]
    80ac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080b0 <dowait>:
    80b0:	e3a02f4b 	mov	r2, #300	; 0x12c

000080b4 <dowaitloop>:
    80b4:	e2522001 	subs	r2, r2, #1
    80b8:	1afffffd 	bne	80b4 <dowaitloop>
    80bc:	e12fff1e 	bx	lr
    80c0:	3f200094 	.word	0x3f200094
    80c4:	3f200098 	.word	0x3f200098
    80c8:	0bc00010 	.word	0x0bc00010
    80cc:	3f200000 	.word	0x3f200000
    80d0:	3f200008 	.word	0x3f200008
    80d4:	00e3ffc0 	.word	0x00e3ffc0
    80d8:	0061b6c0 	.word	0x0061b6c0

000080dc <InitUART>:
    80dc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80e0:	e59f017c 	ldr	r0, [pc, #380]	; 8264 <WaitForCycles+0x10>
    80e4:	e3a01001 	mov	r1, #1
    80e8:	e5801000 	str	r1, [r0]
    80ec:	e59f0174 	ldr	r0, [pc, #372]	; 8268 <WaitForCycles+0x14>
    80f0:	e0211001 	eor	r1, r1, r1
    80f4:	e5801000 	str	r1, [r0]
    80f8:	e59f016c 	ldr	r0, [pc, #364]	; 826c <WaitForCycles+0x18>
    80fc:	e0211001 	eor	r1, r1, r1
    8100:	e5801000 	str	r1, [r0]
    8104:	e59f0164 	ldr	r0, [pc, #356]	; 8270 <WaitForCycles+0x1c>
    8108:	e3a01003 	mov	r1, #3
    810c:	e5801000 	str	r1, [r0]
    8110:	e59f015c 	ldr	r0, [pc, #348]	; 8274 <WaitForCycles+0x20>
    8114:	e0211001 	eor	r1, r1, r1
    8118:	e5801000 	str	r1, [r0]
    811c:	e59f0144 	ldr	r0, [pc, #324]	; 8268 <WaitForCycles+0x14>
    8120:	e0211001 	eor	r1, r1, r1
    8124:	e5801000 	str	r1, [r0]
    8128:	e59f0148 	ldr	r0, [pc, #328]	; 8278 <WaitForCycles+0x24>
    812c:	e3a010c6 	mov	r1, #198	; 0xc6
    8130:	e5801000 	str	r1, [r0]
    8134:	e59f0140 	ldr	r0, [pc, #320]	; 827c <WaitForCycles+0x28>
    8138:	e59f1140 	ldr	r1, [pc, #320]	; 8280 <WaitForCycles+0x2c>
    813c:	e5801000 	str	r1, [r0]
    8140:	e3a0000e 	mov	r0, #14
    8144:	e3a01002 	mov	r1, #2
    8148:	eb000053 	bl	829c <SetGpioFunction>
    814c:	e3a0000f 	mov	r0, #15
    8150:	e3a01002 	mov	r1, #2
    8154:	eb000050 	bl	829c <SetGpioFunction>
    8158:	e59f0124 	ldr	r0, [pc, #292]	; 8284 <WaitForCycles+0x30>
    815c:	e0211001 	eor	r1, r1, r1
    8160:	e5801000 	str	r1, [r0]
    8164:	e3a00096 	mov	r0, #150	; 0x96
    8168:	eb000039 	bl	8254 <WaitForCycles>
    816c:	e59f0114 	ldr	r0, [pc, #276]	; 8288 <WaitForCycles+0x34>
    8170:	e3a01903 	mov	r1, #49152	; 0xc000
    8174:	e5801000 	str	r1, [r0]
    8178:	e3a00096 	mov	r0, #150	; 0x96
    817c:	eb000034 	bl	8254 <WaitForCycles>
    8180:	e59f0100 	ldr	r0, [pc, #256]	; 8288 <WaitForCycles+0x34>
    8184:	e0211001 	eor	r1, r1, r1
    8188:	e5801000 	str	r1, [r0]
    818c:	e59f00d8 	ldr	r0, [pc, #216]	; 826c <WaitForCycles+0x18>
    8190:	e3a01003 	mov	r1, #3
    8194:	e5801000 	str	r1, [r0]
    8198:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000819c <PutCharUART>:
    819c:	e59f20e8 	ldr	r2, [pc, #232]	; 828c <WaitForCycles+0x38>

000081a0 <putWaitLoop$>:
    81a0:	e5921000 	ldr	r1, [r2]
    81a4:	e3110020 	tst	r1, #32
    81a8:	0afffffc 	beq	81a0 <putWaitLoop$>
    81ac:	e59f20dc 	ldr	r2, [pc, #220]	; 8290 <WaitForCycles+0x3c>
    81b0:	e5820000 	str	r0, [r2]
    81b4:	e1a0f00e 	mov	pc, lr

000081b8 <GetCharUART>:
    81b8:	e59f20cc 	ldr	r2, [pc, #204]	; 828c <WaitForCycles+0x38>

000081bc <getWaitLoop$>:
    81bc:	e5921000 	ldr	r1, [r2]
    81c0:	e3110001 	tst	r1, #1
    81c4:	0afffffc 	beq	81bc <getWaitLoop$>
    81c8:	e59f20c0 	ldr	r2, [pc, #192]	; 8290 <WaitForCycles+0x3c>
    81cc:	e5920000 	ldr	r0, [r2]
    81d0:	e1a0f00e 	mov	pc, lr

000081d4 <WriteStringUART>:
    81d4:	e92d4070 	push	{r4, r5, r6, lr}
    81d8:	e1a04000 	mov	r4, r0
    81dc:	e1a05001 	mov	r5, r1
    81e0:	e3a06000 	mov	r6, #0

000081e4 <writeLoop$>:
    81e4:	e3550000 	cmp	r5, #0
    81e8:	da000004 	ble	8200 <writeLoopEnd$>
    81ec:	e7d40006 	ldrb	r0, [r4, r6]
    81f0:	ebffffe9 	bl	819c <PutCharUART>
    81f4:	e2866001 	add	r6, r6, #1
    81f8:	e2455001 	sub	r5, r5, #1
    81fc:	eafffff8 	b	81e4 <writeLoop$>

00008200 <writeLoopEnd$>:
    8200:	e8bd8070 	pop	{r4, r5, r6, pc}

00008204 <ReadLineUART>:
    8204:	e92d4070 	push	{r4, r5, r6, lr}
    8208:	e1a04000 	mov	r4, r0
    820c:	e1a05001 	mov	r5, r1
    8210:	e3a06000 	mov	r6, #0

00008214 <readLoop$>:
    8214:	e1360005 	teq	r6, r5
    8218:	0a00000b 	beq	824c <readLoopEnd$>
    821c:	ebffffe5 	bl	81b8 <GetCharUART>
    8220:	ebffffdd 	bl	819c <PutCharUART>
    8224:	e5c40000 	strb	r0, [r4]
    8228:	e2866001 	add	r6, r6, #1
    822c:	e2844001 	add	r4, r4, #1
    8230:	e330000d 	teq	r0, #13
    8234:	1afffff6 	bne	8214 <readLoop$>
    8238:	e3a0000a 	mov	r0, #10
    823c:	ebffffd6 	bl	819c <PutCharUART>
    8240:	e2444001 	sub	r4, r4, #1
    8244:	e3a00000 	mov	r0, #0
    8248:	e5c40000 	strb	r0, [r4]

0000824c <readLoopEnd$>:
    824c:	e2460001 	sub	r0, r6, #1
    8250:	e8bd8070 	pop	{r4, r5, r6, pc}

00008254 <WaitForCycles>:
    8254:	e2400001 	sub	r0, r0, #1
    8258:	e3500000 	cmp	r0, #0
    825c:	aafffffc 	bge	8254 <WaitForCycles>
    8260:	e1a0f00e 	mov	pc, lr
    8264:	3f215004 	.word	0x3f215004
    8268:	3f215044 	.word	0x3f215044
    826c:	3f215060 	.word	0x3f215060
    8270:	3f21504c 	.word	0x3f21504c
    8274:	3f215050 	.word	0x3f215050
    8278:	3f215048 	.word	0x3f215048
    827c:	3f215068 	.word	0x3f215068
    8280:	0000010e 	.word	0x0000010e
    8284:	3f200094 	.word	0x3f200094
    8288:	3f200098 	.word	0x3f200098
    828c:	3f215054 	.word	0x3f215054
    8290:	3f215040 	.word	0x3f215040

00008294 <GetGpioAddress>:
    8294:	e59f00cc 	ldr	r0, [pc, #204]	; 8368 <GetGpio+0x44>
    8298:	e1a0f00e 	mov	pc, lr

0000829c <SetGpioFunction>:
    829c:	e3500035 	cmp	r0, #53	; 0x35
    82a0:	93510007 	cmpls	r1, #7
    82a4:	81a0f00e 	movhi	pc, lr
    82a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    82ac:	e1a02000 	mov	r2, r0
    82b0:	ebfffff7 	bl	8294 <GetGpioAddress>

000082b4 <functionLoop$>:
    82b4:	e3520009 	cmp	r2, #9
    82b8:	8242200a 	subhi	r2, r2, #10
    82bc:	82800004 	addhi	r0, r0, #4
    82c0:	8afffffb 	bhi	82b4 <functionLoop$>
    82c4:	e0822082 	add	r2, r2, r2, lsl #1
    82c8:	e1a01211 	lsl	r1, r1, r2
    82cc:	e3a03007 	mov	r3, #7
    82d0:	e1a03213 	lsl	r3, r3, r2
    82d4:	e5902000 	ldr	r2, [r0]
    82d8:	e1c22003 	bic	r2, r2, r3
    82dc:	e1811002 	orr	r1, r1, r2
    82e0:	e5801000 	str	r1, [r0]
    82e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000082e8 <SetGpio>:
    82e8:	e3500035 	cmp	r0, #53	; 0x35
    82ec:	81a0f00e 	movhi	pc, lr
    82f0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    82f4:	e1a02000 	mov	r2, r0
    82f8:	ebffffe5 	bl	8294 <GetGpioAddress>
    82fc:	e1a032a2 	lsr	r3, r2, #5
    8300:	e1a03103 	lsl	r3, r3, #2
    8304:	e0800003 	add	r0, r0, r3
    8308:	e202201f 	and	r2, r2, #31
    830c:	e3a03001 	mov	r3, #1
    8310:	e1a03213 	lsl	r3, r3, r2
    8314:	e3310000 	teq	r1, #0
    8318:	05803028 	streq	r3, [r0, #40]	; 0x28
    831c:	1580301c 	strne	r3, [r0, #28]
    8320:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008324 <GetGpio>:
    8324:	e3500035 	cmp	r0, #53	; 0x35
    8328:	81a0f00e 	movhi	pc, lr
    832c:	e92d4010 	push	{r4, lr}
    8330:	e1a04000 	mov	r4, r0
    8334:	ebffffd6 	bl	8294 <GetGpioAddress>
    8338:	e1a032a4 	lsr	r3, r4, #5
    833c:	e1a03103 	lsl	r3, r3, #2
    8340:	e0800003 	add	r0, r0, r3
    8344:	e204401f 	and	r4, r4, #31
    8348:	e3a03001 	mov	r3, #1
    834c:	e1a03413 	lsl	r3, r3, r4
    8350:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    8354:	e0044003 	and	r4, r4, r3
    8358:	e3340000 	teq	r4, #0
    835c:	03a00000 	moveq	r0, #0
    8360:	13a00001 	movne	r0, #1
    8364:	e8bd8010 	pop	{r4, pc}
    8368:	3f200000 	.word	0x3f200000
